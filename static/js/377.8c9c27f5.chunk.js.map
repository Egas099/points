{"version":3,"file":"static/js/377.8c9c27f5.chunk.js","mappings":"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","sources":["hooks/useSaves.ts","hooks/useTypedSelector.ts","webpack://points-client/./src/components/GameField/Cell/CellItem.module.css?68e2","components/GameField/Cell/CellItem.tsx","webpack://points-client/./src/components/GameField/GameField.module.css?6eab","components/GameField/GameField.tsx","webpack://points-client/./src/components/HeaderPanel/HeaderPanel.module.css?a5c8","components/HeaderPanel/HeaderPanel.tsx","webpack://points-client/./src/components/ModalWindows/Popup.module.css?2cc1","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/react-transition-group/esm/CSSTransition.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","components/ModalWindows/PopupWrapper/PopupWrapper.tsx","components/ModalWindows/AlertPopup.tsx","components/ModalWindows/MenuPopup.tsx","functions/AI/aiHelpers.ts","functions/AI/aiBehavior.ts","functions/AI/normal.ts","functions/AI/index.ts","functions/AI/simple.ts","webpack://points-client/./src/components/PlayersForm/ChosePlayerButton/ChosePlayerButton.module.css?a9f0","components/PlayersForm/ChosePlayerButton/ChosePlayerButton.tsx","webpack://points-client/./src/components/PlayersForm/PlayersForm.module.css?313e","components/PlayersForm/PlayersForm.tsx","webpack://points-client/./src/pages/GamePlay/GamePlay.module.css?03eb","pages/GamePlay/Game.tsx","hooks/useGameProcess.ts","store/actionCreator.ts","../node_modules/use-local-storage/dist/index.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useLocalStorage from 'use-local-storage';\r\nimport { createSave } from '../functions/create';\r\nimport { RootState } from '../store';\r\nimport * as actionCreator from '../store/actionCreator';\r\n\r\nexport function useSaves() {\r\n    const [savesList, setSavesList] = useLocalStorage<Save[]>('saves', []);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (!Array.isArray(savesList)) setSavesList([]);\r\n    }, [savesList]);\r\n\r\n    return {\r\n        savesList: savesList,\r\n        saveGame: (state: RootState) => {\r\n            const save = createSave(state);\r\n            setSavesList([save, ...savesList]);\r\n        },\r\n        deleteSave: (id: number) =>\r\n            setSavesList(savesList.filter(save => save.date !== id)),\r\n        deleteAllSaves: () => setSavesList([]),\r\n        loadSave: (id: number) => {\r\n            const save = savesList.find(save => save.date === id);\r\n            if (save) {\r\n                dispatch(actionCreator.loadGame(save.state));\r\n                history.push('/single');\r\n            } else {\r\n                console.error('The save requested for loading was not found.');\r\n            }\r\n        }\r\n    };\r\n}\r\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\r\nimport { RootState } from '../store';\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CellItem_wrapper__pyQvW\",\"content\":\"CellItem_content__wU-6T\",\"mover\":\"CellItem_mover__Z9-vD\"};","import { FC } from 'react';\r\nimport { useTypedSelector } from '../../../hooks/useTypedSelector';\r\nimport style from './CellItem.module.css';\r\nimport { getColorClassByPlayer } from '../../../functions/common';\r\nimport { PlayerEntity } from '../../../data/enums';\r\n\r\ninterface Props {\r\n    cell: Cell;\r\n    move?: (cell: Cell) => void;\r\n}\r\n\r\nconst CellItem: FC<Props> = ({ cell, move }) => {\r\n    const gameState = useTypedSelector(state => state.gameState);\r\n\r\n    const createPoints = (count: number) => {\r\n        switch (count) {\r\n            case 0:\r\n                return '';\r\n            case 1:\r\n                return <>•</>;\r\n            case 2:\r\n                return <>•&nbsp;•</>;\r\n            case 3:\r\n                return (\r\n                    <>\r\n                        •<br />\r\n                        •&nbsp;•\r\n                    </>\r\n                );\r\n            case 4:\r\n                return (\r\n                    <>\r\n                        •&nbsp;•\r\n                        <br />\r\n                        •&nbsp;•\r\n                    </>\r\n                );\r\n            case 5:\r\n                return (\r\n                    <>\r\n                        •&nbsp;•\r\n                        <br />•<br />\r\n                        •&nbsp;•\r\n                    </>\r\n                );\r\n            default:\r\n                return '!';\r\n        }\r\n    };\r\n\r\n    function onClick() {\r\n        const profile = gameState.players.find(\r\n            profile => profile.player === cell.player\r\n        );\r\n        if (\r\n            profile?.entity.playerEntity === PlayerEntity.localPlayer &&\r\n            !gameState.moveBlock &&\r\n            gameState.gameStarted &&\r\n            gameState.mover === cell.player\r\n        ) {\r\n            move && move(cell);\r\n        }\r\n    }\r\n\r\n    const wrapperClasses = `${style.wrapper} \r\n    ${\r\n        gameState.mover === cell.player && !gameState.moveBlock\r\n            ? style.mover\r\n            : ''\r\n    }`;\r\n\r\n    const contentClasses = `${style.content}\r\n    ${getColorClassByPlayer(cell.player, cell.count)}`;\r\n\r\n    return (\r\n        <div className={wrapperClasses} draggable=\"false\">\r\n            {cell.allow && (\r\n                <div\r\n                    className={contentClasses}\r\n                    onClick={onClick}\r\n                    draggable=\"false\"\r\n                >\r\n                    <span>{createPoints(cell.count)}</span>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CellItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"GameField_wrapper__G2YBN\",\"content\":\"GameField_content__e-ERj\",\"row\":\"GameField_row__sAnCD\"};","import { FC } from 'react';\r\nimport CellItem from './Cell/CellItem';\r\nimport styles from './GameField.module.css';\r\n\r\ninterface Props {\r\n    field: Cell[][];\r\n    move?: (cell: Cell) => void;\r\n}\r\n\r\nconst GameField: FC<Props> = ({ field, move }) => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.content}>\r\n                {field.map((row, i) => (\r\n                    <div className={styles.row} key={i}>\r\n                        {row.map(cell => (\r\n                            <CellItem cell={cell} key={cell.id} move={move} />\r\n                        ))}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GameField;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"HeaderPanel_wrapper__7k9ke\",\"content\":\"HeaderPanel_content__72pV3\",\"button\":\"HeaderPanel_button__HalTg\"};","import { FC } from 'react';\r\n\r\nimport styles from './HeaderPanel.module.css';\r\n\r\ninterface HeaderButtonPanel {\r\n    showMenu: () => void;\r\n}\r\n\r\nconst HeaderButtonPanel: FC<HeaderButtonPanel> = ({ showMenu }) => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.content}>\r\n                <button onClick={showMenu} className={styles.button}>\r\n                    Menu\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HeaderButtonPanel;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"mask\":\"Popup_mask__yhffM\",\"wrapper\":\"Popup_wrapper__N1aP+\",\"content\":\"Popup_content__F+3aB\",\"main\":\"Popup_main__nTmKq\",\"button\":\"Popup_button__yF5nC components_button__6uL8D\"};","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","export default {\n  disabled: false\n};","import React from 'react';\nexport default React.createContext(null);","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import { FC } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { POPUP_TIMEOUT } from '../../../data/constants';\r\nimport styles from '../Popup.module.css';\r\nimport './popupTransitions.css';\r\n\r\ninterface Props {\r\n    show: boolean;\r\n    timeout?: number;\r\n}\r\n\r\nconst PopupWrapper: FC<Props> = ({\r\n    show,\r\n    timeout = POPUP_TIMEOUT,\r\n    children\r\n}) => {\r\n    return (\r\n        <CSSTransition\r\n            unmountOnExit\r\n            in={show}\r\n            timeout={timeout}\r\n            classNames=\"mask\"\r\n        >\r\n            <div className={styles.mask}>\r\n            <CSSTransition in={show} timeout={timeout} classNames=\"popup\">\r\n                {children}\r\n            </CSSTransition>\r\n            </div>\r\n        </CSSTransition>\r\n    );\r\n};\r\n\r\nexport default PopupWrapper;\r\n","import { FC } from 'react';\r\nimport styles from './Popup.module.css';\r\nimport PopupWrapper from './PopupWrapper/PopupWrapper';\r\n\r\ninterface Props {\r\n    show: boolean;\r\n    callback: () => void;\r\n    title: string;\r\n    text?: string;\r\n    buttonText?: string;\r\n}\r\n\r\nconst AlertPopup: FC<Props> = ({ show, title, text, callback, buttonText }) => {\r\n    return (\r\n        <PopupWrapper show={show}>\r\n            <div className={styles.wrapper}>\r\n                <div className={styles.content}>\r\n                    <div className={styles.main}>\r\n                        <h2>{title}</h2>\r\n                        {text && <p>{text}</p>}\r\n                    </div>\r\n                    <button\r\n                        className={styles.button}\r\n                        onClick={() => callback()}\r\n                    >\r\n                        {buttonText ? buttonText : 'Ok'}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </PopupWrapper>\r\n    );\r\n};\r\n\r\nexport default AlertPopup;\r\n","import { FC } from 'react';\r\nimport styles from './Popup.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport PopupWrapper from './PopupWrapper/PopupWrapper';\r\n\r\nexport interface MenuPopupActions {\r\n    continue: () => void;\r\n    save?: () => void;\r\n    reset?: () => void;\r\n}\r\ninterface Props {\r\n    show: boolean;\r\n    actions: MenuPopupActions;\r\n}\r\n\r\nconst MenuPopup: FC<Props> = ({ show, actions }) => {\r\n    return (\r\n        <PopupWrapper show={show}>\r\n            <div className={styles.wrapper}>\r\n                <div className={styles.content}>\r\n                    <h2>Pause</h2>\r\n                    <button\r\n                        className={styles.button}\r\n                        onClick={actions.continue}\r\n                    >\r\n                        Continie\r\n                    </button>\r\n\r\n                    <button\r\n                        className={styles.button}\r\n                        disabled={actions.save === undefined}\r\n                        onClick={actions.save}\r\n                    >\r\n                        Save\r\n                    </button>\r\n                    <Link to=\"/menu/play/load\" className={styles.button}>\r\n                        Load\r\n                    </Link>\r\n                    <Link to=\"/menu/settings\" className={styles.button}>\r\n                        Settings\r\n                    </Link>\r\n                    <button\r\n                        className={styles.button}\r\n                        disabled={actions.reset === undefined}\r\n                        onClick={actions.reset}\r\n                    >\r\n                        Reset\r\n                    </button>\r\n                    <Link to=\"/menu/\" className={styles.button}>\r\n                        Main menu\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </PopupWrapper>\r\n    );\r\n};\r\n\r\nexport default MenuPopup;\r\n","import { cellPositionById } from '../calculate';\r\nimport { trying } from '../common';\r\n\r\nexport function filterCellsByCount(cells: Cell[], count: number) {\r\n    return cells.filter(cell => cell.count === count);\r\n}\r\n\r\nexport function amountCellWithPoints(cells: Cell[], count: number) {\r\n    return cells.reduce(\r\n        (acum, cur) => (cur.count === count ? acum + 1 : acum),\r\n        0\r\n    );\r\n}\r\nexport function amountEmptyNeighs(field: Cell[][], cell: Cell) {\r\n    return getNeighbors(field, cell).reduce(\r\n        (acum, cur) => (cur.player === null ? acum + 1 : acum),\r\n        0\r\n    );\r\n}\r\n\r\nexport function amountEnemyNeighs(field: Cell[][], cell: Cell) {\r\n    return getNeighbors(field, cell).reduce(\r\n        (acum, cur) =>\r\n            cur.player !== cell.player && cur.player !== null ? acum + 1 : acum,\r\n        0\r\n    );\r\n}\r\n\r\nexport function maxNeighsCount(field: Cell[][], cell: Cell) {\r\n    return Math.max(...getNeighbors(field, cell).map(c => c.count));\r\n}\r\n\r\nexport function maxNeighsEnemiesCount(field: Cell[][], cell: Cell) {\r\n    return Math.max(\r\n        ...getNeighbors(field, cell).map(c =>\r\n            c.player !== cell.player ? c.count : 0\r\n        )\r\n    );\r\n}\r\n\r\nexport function getNeighbors(field: Cell[][], cell: Cell): Cell[] {\r\n    const [x, y] = cellPositionById(cell.id);\r\n    return [\r\n        trying(() => field[x + 1][y], null),\r\n        trying(() => field[x][y + 1], null),\r\n        trying(() => field[x - 1][y], null),\r\n        trying(() => field[x][y - 1], null)\r\n    ].filter(Boolean);\r\n}\r\n\r\nexport function randomElemetFrom(array: Array<any>) {\r\n    if (Array.isArray(array))\r\n        return array[Math.floor(Math.random() * array.length)];\r\n    throw new Error('The argument is not an array.');\r\n}\r\n","import { RootState } from '../../store';\r\nimport {\r\n    amountEmptyNeighs,\r\n    amountEnemyNeighs,\r\n    filterCellsByCount,\r\n    maxNeighsEnemiesCount,\r\n    randomElemetFrom\r\n} from './aiHelpers';\r\n\r\n//\r\nexport function chooseRandomCellFrom(ownCells: Cell[]): Cell {\r\n    return randomElemetFrom(ownCells);\r\n}\r\n\r\nexport function chooseMaxCountRandomCellFrom(ownCells: Cell[]): Cell {\r\n    return randomElemetFrom(maxCountCellMove(ownCells));\r\n}\r\n\r\n//\r\nexport function maxCountCellMove(ownCells: Cell[]) {\r\n    const maxCount = ownCells.reduce(\r\n        (maxCount, cell) => (cell.count > maxCount ? cell.count : maxCount),\r\n        0\r\n    );\r\n    return filterCellsByCount(ownCells, maxCount);\r\n}\r\n\r\nexport function threePointPriorityMove(ownCells: Cell[]) {\r\n    return filterCellsByCount(ownCells, 3);\r\n}\r\nexport function expand(state: RootState, ownCells: Cell[]) {\r\n    let filteredCells = ownCells;\r\n\r\n    for (let i = 4; i > 0; i--) {\r\n        filteredCells = ownCells.filter(\r\n            cell => amountEmptyNeighs(state.field, cell) === i\r\n        );\r\n        if (filteredCells.length) {\r\n            break;\r\n        }\r\n    }\r\n    return filteredCells;\r\n}\r\nexport function dontPickBattles(state: RootState, ownCells: Cell[]) {\r\n    return ownCells.filter(\r\n        cell => maxNeighsEnemiesCount(state.field, cell) !== 3\r\n    );\r\n}\r\nexport function attackThreePointEnemy(state: RootState, ownCells: Cell[]) {\r\n    return ownCells.filter(\r\n        cell => maxNeighsEnemiesCount(state.field, cell) === 3\r\n    );\r\n}\r\n\r\nexport function attackEnemy(state: RootState, ownCells: Cell[]) {\r\n    return ownCells.filter(cell => amountEnemyNeighs(state.field, cell) > 0);\r\n}\r\n\r\nexport function accumulate(ownCells: Cell[]) {\r\n    for (let i = 1; i < 3; i++) {\r\n        const filteredCells = filterCellsByCount(ownCells, i);\r\n        if (filteredCells.length > 0) {\r\n            return filteredCells;\r\n        }\r\n    }\r\n    return []\r\n}\r\n\r\n","import { BotProfile } from '.';\r\nimport { RootState } from '../../store';\r\nimport {\r\n    attackEnemy,\r\n    attackThreePointEnemy,\r\n    chooseMaxCountRandomCellFrom,\r\n    chooseRandomCellFrom,\r\n    dontPickBattles,\r\n    expand,\r\n    threePointPriorityMove\r\n} from './aiBehavior';\r\n\r\nconst normalBots: BotProfile[] = [\r\n    {\r\n        name: 'b1',\r\n        difficulty: 'normal',\r\n        description:\r\n            'Priority for capturing enemy cells with three dots, if they are next to their own cells with three dots.',\r\n        implementation: (state: RootState, ownCells: Cell[]): Cell | void => {\r\n            const threePoint = threePointPriorityMove(ownCells);\r\n            if (threePoint.length) {\r\n                const canAttack = attackThreePointEnemy(state, threePoint);\r\n\r\n                if (canAttack.length) {\r\n                    return chooseRandomCellFrom(canAttack);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {\r\n        name: 'b2',\r\n        difficulty: 'normal',\r\n        description: '',\r\n        implementation: (state: RootState, ownCells: Cell[]): Cell | void => {\r\n            const threePoint = threePointPriorityMove(ownCells);\r\n            if (threePoint.length) {\r\n                const canAttack = attackThreePointEnemy(state, threePoint);\r\n\r\n                if (canAttack.length) {\r\n                    return chooseRandomCellFrom(canAttack);\r\n                }\r\n                return chooseRandomCellFrom(threePoint);\r\n            }\r\n        }\r\n    },\r\n    {\r\n        name: 'b3',\r\n        difficulty: 'normal',\r\n        description: '',\r\n        implementation: (state: RootState, ownCells: Cell[]): Cell | void => {\r\n            const threePoint = threePointPriorityMove(ownCells);\r\n            if (threePoint.length) {\r\n                const canAttack = attackThreePointEnemy(state, threePoint);\r\n\r\n                if (canAttack.length) {\r\n                    return chooseRandomCellFrom(canAttack);\r\n                }\r\n                return chooseRandomCellFrom(threePoint);\r\n            }\r\n            const dontPickBattle = dontPickBattles(state, ownCells);\r\n            if (dontPickBattle.length) {\r\n                return chooseRandomCellFrom(dontPickBattle);\r\n            }\r\n        }\r\n    },\r\n    {\r\n        name: 'b4',\r\n        difficulty: 'normal',\r\n        description: '',\r\n        implementation: (state: RootState, ownCells: Cell[]): Cell | void => {\r\n            const threePoint = threePointPriorityMove(ownCells);\r\n            if (threePoint.length) {\r\n                const canAttack = attackThreePointEnemy(state, threePoint);\r\n\r\n                if (canAttack.length) {\r\n                    return chooseRandomCellFrom(canAttack);\r\n                }\r\n            }\r\n            const canExpand = expand(state, ownCells);\r\n            if (canExpand.length) {\r\n                return chooseRandomCellFrom(canExpand);\r\n            }\r\n        }\r\n    },\r\n    {\r\n        name: 'b5',\r\n        difficulty: 'normal',\r\n        description: 'Agressive',\r\n        implementation: (state: RootState, ownCells: Cell[]): Cell | void => {\r\n            const threePoint = threePointPriorityMove(ownCells);\r\n            if (threePoint.length) {\r\n                const canAlreadyAttack = attackThreePointEnemy(\r\n                    state,\r\n                    threePoint\r\n                );\r\n\r\n                if (canAlreadyAttack.length) {\r\n                    return chooseRandomCellFrom(canAlreadyAttack);\r\n                }\r\n            }\r\n            const canAttack = attackEnemy(state, ownCells);\r\n            if (canAttack.length) {\r\n                return chooseMaxCountRandomCellFrom(canAttack);\r\n            }\r\n        }\r\n    },\r\n    {\r\n        name: 'b6',\r\n        difficulty: 'normal',\r\n        description: 'dontPickBattles & agressive',\r\n        implementation: (state: RootState, ownCells: Cell[]): Cell | void => {\r\n            const threePoint = threePointPriorityMove(ownCells);\r\n            if (threePoint.length) {\r\n                const canAlreadyAttack = attackThreePointEnemy(\r\n                    state,\r\n                    threePoint\r\n                );\r\n\r\n                if (canAlreadyAttack.length) {\r\n                    return chooseRandomCellFrom(canAlreadyAttack);\r\n                }\r\n            }\r\n            const canAttack = attackEnemy(state, ownCells);\r\n            if (canAttack.length) {\r\n                const dontPickBattle = dontPickBattles(state, canAttack);\r\n                if (dontPickBattle.length) {\r\n                    return chooseMaxCountRandomCellFrom(dontPickBattle);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {\r\n        name: 'b7',\r\n        difficulty: 'normal',\r\n        description: 'dontPickBattles & agressive',\r\n        implementation: (state: RootState, ownCells: Cell[]): Cell | void => {\r\n            const threePoint = threePointPriorityMove(ownCells);\r\n            if (threePoint.length) {\r\n                const canAlreadyAttack = attackThreePointEnemy(\r\n                    state,\r\n                    threePoint\r\n                );\r\n\r\n                if (canAlreadyAttack.length) {\r\n                    return chooseRandomCellFrom(canAlreadyAttack);\r\n                }\r\n            }\r\n            const canAttack = attackEnemy(state, ownCells);\r\n            if (canAttack.length) {\r\n                const dontPickBattle = dontPickBattles(state, canAttack);\r\n                if (dontPickBattle.length) {\r\n                    return chooseMaxCountRandomCellFrom(dontPickBattle);\r\n                }\r\n            }\r\n            const canExpand = expand(state, ownCells);\r\n            if (canExpand.length) {\r\n                const dontPickBattle = dontPickBattles(state, canExpand);\r\n                if (dontPickBattle.length) {\r\n                    return chooseRandomCellFrom(dontPickBattle);\r\n                }\r\n            }\r\n            const dontPickBattle = dontPickBattles(state, ownCells);\r\n            if (dontPickBattle.length) {\r\n                return chooseMaxCountRandomCellFrom(dontPickBattle);\r\n            }\r\n        }\r\n    },\r\n    {\r\n        name: 'b7',\r\n        difficulty: 'normal',\r\n        description: 'dontPickBattles & agressive',\r\n        implementation: (state: RootState, ownCells: Cell[]): Cell | void => {\r\n            const threePoint = threePointPriorityMove(ownCells);\r\n            if (threePoint.length) {\r\n                const canAlreadyAttack = attackThreePointEnemy(\r\n                    state,\r\n                    threePoint\r\n                );\r\n\r\n                if (canAlreadyAttack.length) {\r\n                    return chooseRandomCellFrom(canAlreadyAttack);\r\n                }\r\n            }\r\n            const canAttack = attackEnemy(state, ownCells);\r\n            if (canAttack.length) {\r\n                const dontPickBattle = dontPickBattles(state, canAttack);\r\n                if (dontPickBattle.length) {\r\n                    return chooseMaxCountRandomCellFrom(dontPickBattle);\r\n                }\r\n            }\r\n            const canExpand = expand(state, ownCells);\r\n            if (canExpand.length) {\r\n                const dontPickBattle = dontPickBattles(state, canExpand);\r\n                if (dontPickBattle.length) {\r\n                    return chooseRandomCellFrom(dontPickBattle);\r\n                }\r\n            }\r\n            const dontPickBattle = dontPickBattles(state, ownCells);\r\n            if (dontPickBattle.length) {\r\n                return chooseMaxCountRandomCellFrom(dontPickBattle);\r\n            }\r\n        }\r\n    }\r\n];\r\n\r\nexport default normalBots;\r\n","import { Player } from '../../data/enums';\r\nimport { RootState } from '../../store';\r\nimport { randomElemetFrom } from './aiHelpers';\r\nimport normalBots from './normal';\r\nimport simpleBots from './simple';\r\n\r\ntype Difficulty = 'simple' | 'normal';\r\nexport interface BotProfile {\r\n    name: string;\r\n    implementation: (state: RootState, ownCells: Cell[]) => Cell | void;\r\n    description: string;\r\n    difficulty: Difficulty;\r\n}\r\n\r\nconst AI = {\r\n    getRandomBot: function (difficulty: Difficulty): string {\r\n        return randomElemetFrom(\r\n            AI_PROFILES.filter(bot => bot.difficulty === difficulty)\r\n        ).name;\r\n    },\r\n    getBotById: function (id: string): BotProfile | undefined {\r\n        return AI_PROFILES.find(bot => bot.name === id);\r\n    },\r\n    getBotMoveById: function (id: string, state: RootState) {\r\n        const botImplementation = AI_PROFILES.find(\r\n            bot => bot.name === id\r\n        )?.implementation;\r\n        const ownCells = findCellsByPlayer(state.field, state.gameState.mover);\r\n\r\n        let botMove;\r\n        if (botImplementation) {\r\n            botMove = botImplementation(state, ownCells);\r\n        } else {\r\n            console.error(\r\n                'The requested bot implementation was not found. Random implementation will be chosen.'\r\n            );\r\n            botMove = randomElemetFrom(AI_PROFILES).implementation(\r\n                state,\r\n                ownCells\r\n            );\r\n        }\r\n        if (botMove) {\r\n            return botMove;\r\n        }\r\n        return randomElemetFrom(ownCells);\r\n    }\r\n};\r\nexport default AI;\r\n\r\nconst AI_PROFILES: BotProfile[] = [simpleBots, normalBots].flat();\r\n\r\nfunction findCellsByPlayer(field: Cell[][], player: Player) {\r\n    let responce: Cell[] = [];\r\n    for (const row of field) {\r\n        const cell = row.filter(cell => cell.player === player);\r\n        if (cell.length > 0) responce = responce.concat(cell);\r\n    }\r\n    return responce;\r\n}\r\n","import { BotProfile } from '.';\r\nimport { RootState } from '../../store';\r\nimport {\r\n    accumulate,\r\n    chooseRandomCellFrom,\r\n    expand,\r\n    threePointPriorityMove\r\n} from './aiBehavior';\r\n\r\nconst simpleBots: BotProfile[] = [\r\n    {\r\n        name: 'a1',\r\n        difficulty: 'simple',\r\n        description: 'Random movement',\r\n        implementation: (state: RootState, ownCells: Cell[]) => {\r\n            return chooseRandomCellFrom(ownCells);\r\n        }\r\n    },\r\n    {\r\n        name: 'a2',\r\n        difficulty: 'simple',\r\n        description: 'Three count priority mover',\r\n        implementation: (state: RootState, ownCells: Cell[]) => {\r\n            const threePoint = threePointPriorityMove(ownCells);\r\n\r\n            if (threePoint.length > 0) {\r\n                return chooseRandomCellFrom(threePoint);\r\n            }\r\n        }\r\n    },\r\n    {\r\n        name: 'a3',\r\n        difficulty: 'simple',\r\n        description: 'Expander & three point priority mover',\r\n        implementation: (state: RootState, ownCells: Cell[]) => {\r\n            const threePoint = threePointPriorityMove(ownCells);\r\n\r\n            if (threePoint.length > 0) {\r\n                return chooseRandomCellFrom(threePoint);\r\n            }\r\n            const canExpand = expand(state, ownCells);\r\n            if (canExpand.length) {\r\n                return chooseRandomCellFrom(canExpand);\r\n            }\r\n\r\n            return chooseRandomCellFrom(ownCells);\r\n        }\r\n    },\r\n    {\r\n        name: 'a4',\r\n        difficulty: 'simple',\r\n        description: 'Accumulator, big Bang',\r\n        implementation: (state: RootState, ownCells: Cell[]) => {\r\n            const canAccumulate = accumulate(ownCells);\r\n            if (canAccumulate.length) {\r\n                return chooseRandomCellFrom(canAccumulate);\r\n            }\r\n            return chooseRandomCellFrom(ownCells);\r\n        }\r\n    }\r\n];\r\n\r\nexport default simpleBots;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ChosePlayerButton_wrapper__QsK2n\",\"up\":\"ChosePlayerButton_up__iq7E2 ChosePlayerButton_wrapper__QsK2n\",\"down\":\"ChosePlayerButton_down__TievK ChosePlayerButton_wrapper__QsK2n\",\"pointer\":\"ChosePlayerButton_pointer__N46hZ\"};","import { FC} from 'react';\r\nimport { Player, PlayerEntity } from '../../../data/enums';\r\nimport styles from './ChosePlayerButton.module.css';\r\nimport {\r\n    getColorClassByPlayer,\r\n    getIconByPlayerEntity\r\n} from '../../../functions/common';\r\n\r\ninterface Props {\r\n    player: Player;\r\n    entity: PlayerEntity;\r\n    changeEntity: () => void;\r\n    position: 'up' | 'down';\r\n}\r\n\r\nconst ChosePlayerButton: FC<Props> = ({\r\n    player,\r\n    entity,\r\n    changeEntity,\r\n    position\r\n}) => {\r\n    const getColorClass = () =>\r\n        entity !== PlayerEntity.empty ? getColorClassByPlayer(player) : '';\r\n\r\n    return (\r\n        <div className={styles[position]}>\r\n            <button className={getColorClass()} onClick={changeEntity}>\r\n                {getIconByPlayerEntity(entity)}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChosePlayerButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"PlayersForm_content__x2Mu+\",\"row\":\"PlayersForm_row__olA4+\",\"button\":\"PlayersForm_button__Y45SO\",\"switch\":\"PlayersForm_switch__EJD4U\",\"leftSwitch\":\"PlayersForm_leftSwitch__xsLg7 PlayersForm_switch__EJD4U\",\"rightSwitch\":\"PlayersForm_rightSwitch__FGOH2 PlayersForm_switch__EJD4U\",\"startButton\":\"PlayersForm_startButton__aweGW\",\"pulse\":\"PlayersForm_pulse__5I5QK\"};","import { FC, useEffect, useState } from 'react';\r\nimport AI from '../../functions/AI';\r\nimport { PlayerEntity } from '../../data/enums';\r\nimport ChosePlayerButton from './ChosePlayerButton/ChosePlayerButton';\r\nimport styles from './PlayersForm.module.css';\r\nimport GameField from '../GameField/GameField';\r\nimport { createProfile, fieldByTemplate } from '../../functions/create';\r\nimport {\r\n    getPlayersFromTemplate,\r\n    getTemplateById\r\n} from '../../functions/common';\r\n\r\ninterface Props {\r\n    onSubmit: (form: GameForm) => void;\r\n    templates: FieldTemplate[];\r\n}\r\n\r\nconst PlayersForm: FC<Props> = ({ onSubmit, templates }) => {\r\n    const [selectedTemplateId, setSelectedTemplateId] = useState(0);\r\n    const [profiles, setProfiles] = useState<PlayerProfile[]>(loadProfiles());\r\n\r\n    useEffect(updateProfiles, [selectedTemplateId]);\r\n\r\n    const nextEntity = (entity: PlayerEntity): PlayerEntity =>\r\n        typeof PlayerEntity[entity + 1] === 'string'\r\n            ? entity + 1\r\n            : PlayerEntity.empty;\r\n\r\n    const filterExistingEntity = (prof: PlayerProfile[]) =>\r\n        prof.filter(e => e.entity.playerEntity !== PlayerEntity.empty);\r\n\r\n    function setTemplateId(count: number) {\r\n        const newTemplateIndex =\r\n            (selectedTemplateId + count + templates.length) % templates.length;\r\n\r\n        setSelectedTemplateId(newTemplateIndex);\r\n    }\r\n\r\n    function loadProfiles() {\r\n        const players = getPlayersFromTemplate(selectedTemplateId);\r\n        const profiles = players.map(profile => createProfile(profile));\r\n        return profiles;\r\n    }\r\n\r\n    function updateProfiles() {\r\n        setProfiles(loadProfiles());\r\n    }\r\n\r\n    function setEntity(index: number) {\r\n        return () => {\r\n            const newProfiles = [...profiles];\r\n            newProfiles[index].entity.playerEntity = nextEntity(\r\n                newProfiles[index].entity.playerEntity\r\n            );\r\n            setProfiles(newProfiles);\r\n        };\r\n    }\r\n\r\n    function assignAI(profiles: PlayerProfile[]) {\r\n        return profiles.map(profile => {\r\n            if (profile.entity.playerEntity === PlayerEntity.android) {\r\n                const newProfile = profile;\r\n                newProfile.entity.id = AI.getRandomBot('normal');\r\n                return newProfile;\r\n            } else {\r\n                return profile;\r\n            }\r\n        });\r\n    }\r\n\r\n    function submit() {\r\n        let existPlayersProfiles = filterExistingEntity(profiles);\r\n        if (existPlayersProfiles.length > 1) {\r\n            existPlayersProfiles = assignAI(existPlayersProfiles);\r\n            onSubmit({\r\n                templateId: selectedTemplateId,\r\n                playersProfiles: existPlayersProfiles\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.content}>\r\n                <div className={styles.row}>\r\n                    <ChosePlayerButton\r\n                        key={0}\r\n                        player={profiles[0].player}\r\n                        entity={profiles[0].entity.playerEntity}\r\n                        changeEntity={setEntity(0)}\r\n                        position=\"up\"\r\n                    />\r\n                    <ChosePlayerButton\r\n                        key={1}\r\n                        player={profiles[1].player}\r\n                        entity={profiles[1].entity.playerEntity}\r\n                        changeEntity={setEntity(1)}\r\n                        position={'up'}\r\n                    />\r\n                </div>\r\n                <button\r\n                    className={styles.leftSwitch}\r\n                    onClick={() => setTemplateId(-1)}\r\n                >{`<`}</button>\r\n                <button\r\n                    className={styles.rightSwitch}\r\n                    onClick={() => setTemplateId(1)}\r\n                >{`>`}</button>\r\n                <GameField\r\n                    field={fieldByTemplate(getTemplateById(selectedTemplateId))}\r\n                />\r\n                <div className={styles.row}>\r\n                    <ChosePlayerButton\r\n                        key={3}\r\n                        player={profiles[3].player}\r\n                        entity={profiles[3].entity.playerEntity}\r\n                        changeEntity={setEntity(3)}\r\n                        position={'down'}\r\n                    />\r\n                    <ChosePlayerButton\r\n                        key={2}\r\n                        player={profiles[2].player}\r\n                        entity={profiles[2].entity.playerEntity}\r\n                        changeEntity={setEntity(2)}\r\n                        position={'down'}\r\n                    />\r\n                </div>\r\n                <button className={styles.startButton} onClick={submit}>\r\n                    {filterExistingEntity(profiles).length > 1 ? '▶' : ''}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PlayersForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"GamePlay_wrapper__TtJDG\",\"content\":\"GamePlay_content__SUInP\"};","import { FC, useEffect, useState } from 'react';\r\nimport GameField from '../../components/GameField/GameField';\r\nimport HeaderButtonPanel from '../../components/HeaderPanel/HeaderPanel';\r\nimport AlertPopup from '../../components/ModalWindows/AlertPopup';\r\nimport MenuPopup, {\r\n    MenuPopupActions\r\n} from '../../components/ModalWindows/MenuPopup';\r\nimport PlayersForm from '../../components/PlayersForm/PlayersForm';\r\nimport { Player } from '../../data/enums';\r\n// import { init as socketInit } from '../socketWorker';\r\nimport { fieldTemplates } from '../../data/fieldTemplates';\r\nimport { useGameProcess } from '../../hooks/useGameProcess';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { upFirst } from '../../functions/common';\r\nimport styles from './GamePlay.module.css';\r\ninterface GameProps {\r\n    type: 'single' | 'multiplayer';\r\n}\r\n\r\nconst Game: FC<GameProps> = ({ type }) => {\r\n    // useEffect(() => {\r\n    //     if (type === 'multiplayer') {\r\n    //         socketInit();\r\n    //     }\r\n    // });\r\n\r\n    const state = useTypedSelector(state => state);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [showMenu, setShowMenu] = useState(false);\r\n    const [title, setTitle] = useState('User win');\r\n    const gamePlay = useGameProcess();\r\n\r\n    useEffect(checkEndGame, [state.gameState.endGame]);\r\n\r\n    function checkEndGame() {\r\n        if (state.gameState.endGame) {\r\n            setTitle(\r\n                `${upFirst(Player[state.gameState.players[0].player])}\r\n                won in ${state.gameState.moveNumber} moves`\r\n            );\r\n            setShowMenu(false);\r\n            setShowAlert(true);\r\n        }\r\n    }\r\n\r\n    function gameStarting(form: GameForm) {\r\n        gamePlay.start(form);\r\n    }\r\n    function gameRestarting() {\r\n        gamePlay.reset();\r\n        setShowMenu(false);\r\n        setShowAlert(false);\r\n    }\r\n    function gameSaving() {\r\n        gamePlay.save();\r\n        setShowMenu(false);\r\n    }\r\n\r\n    const menuActions: MenuPopupActions = {\r\n        continue: () => setShowMenu(false),\r\n        reset: state.gameState.gameStarted ? gameRestarting : undefined,\r\n        save: state.gameState.gameStarted ? gameSaving : undefined\r\n    };\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <AlertPopup\r\n                show={showAlert}\r\n                title={title}\r\n                buttonText=\"Restart\"\r\n                callback={gameRestarting}\r\n            />\r\n            <MenuPopup show={showMenu} actions={menuActions} />\r\n            <HeaderButtonPanel showMenu={() => setShowMenu(!showMenu)} />\r\n            <div className={styles.content}>\r\n                {!state.gameState.gameStarted ? (\r\n                    <PlayersForm\r\n                        onSubmit={gameStarting}\r\n                        templates={fieldTemplates}\r\n                    />\r\n                ) : (\r\n                    <GameField field={state.field} move={gamePlay.playerMove} />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Game;\r\n","import { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { PlayerEntity } from '../data/enums';\r\nimport { useTypedSelector } from './useTypedSelector';\r\nimport * as actionCreator from '../store/actionCreator';\r\nimport { useSaves } from './useSaves';\r\nimport { findOverflowingCell } from '../functions/common';\r\nimport AI from '../functions/AI';\r\n\r\nexport function useGameProcess() {\r\n    const settings = useTypedSelector(state => state.settings);\r\n\r\n    const { saveGame } = useSaves();\r\n    const [botMovingDelayTimer, setBotMovingDelayTimer] = useState(\r\n        setTimeout(() => 0, 0)\r\n    );\r\n    const [cellCloningDelayTimer, setCellCloningDelayTimer] = useState(\r\n        setTimeout(() => 0, 0)\r\n    );\r\n    const dispatch = useDispatch();\r\n    const state = useTypedSelector(state => state);\r\n\r\n    useEffect(moveProcessing, [\r\n        state.gameState.gameStarted,\r\n        state.gameState.moveBlock\r\n    ]);\r\n\r\n    useEffect(botMove, [\r\n        state.gameState.moveNumber,\r\n        state.gameState.gameStarted\r\n    ]);\r\n\r\n    function moveProcessing() {\r\n        const moveCompleted =\r\n            state.gameState.gameStarted && state.gameState.moveBlock;\r\n        if (moveCompleted) {\r\n            const cell = findOverflowingCell(state.field);\r\n\r\n            if (cell) {\r\n                dispatch(actionCreator.CellCloning(cell));\r\n                setCellCloningDelayTimer(\r\n                    setTimeout(\r\n                        () => moveProcessing(),\r\n                        settings.cellCloningDelay\r\n                    )\r\n                );\r\n            } else {\r\n                dispatch(actionCreator.newMove(state.field));\r\n            }\r\n        }\r\n        return () => clearTimeout(cellCloningDelayTimer);\r\n    }\r\n\r\n    function botMove() {\r\n        const profile = state.gameState.players.find(\r\n            profile => profile.player === state.gameState.mover\r\n        );\r\n\r\n        if (\r\n            profile?.entity.playerEntity === PlayerEntity.android &&\r\n            !state.gameState.moveBlock &&\r\n            state.gameState.gameStarted\r\n        ) {\r\n            const botMove = AI.getBotMoveById(profile.entity.id, state);\r\n            if (botMove) {\r\n                setBotMovingDelayTimer(\r\n                    setTimeout(() => move(botMove), settings.botMovingDelay)\r\n                );\r\n            } else {\r\n                console.error(\"Can't get bot moving\");\r\n            }\r\n        }\r\n        return () => clearTimeout(botMovingDelayTimer);\r\n    }\r\n\r\n    function move(cell: Cell) {\r\n        if (\r\n            cell &&\r\n            state.gameState.gameStarted &&\r\n            !state.gameState.moveBlock &&\r\n            state.gameState.mover === cell.player\r\n        ) {\r\n            dispatch(actionCreator.playerMove(cell));\r\n        } else {\r\n            console.error(\"Can't move\");\r\n        }\r\n    }\r\n    function gameSaving() {\r\n        saveGame(state);\r\n    }\r\n    function gameRestarting() {\r\n        clearTimeout(botMovingDelayTimer);\r\n        clearTimeout(cellCloningDelayTimer);\r\n        dispatch(actionCreator.restartGame());\r\n    }\r\n    function gameStarting(form: GameForm) {\r\n        dispatch(actionCreator.startGame(form));\r\n    }\r\n    return {\r\n        playerMove: move,\r\n        start: gameStarting,\r\n        reset: gameRestarting,\r\n        save: gameSaving\r\n    };\r\n}\r\n","import { RootState } from '.';\r\nimport { GameActions, GameActionType, playerMoving, SettingActions, SettingActionType } from './types';\r\n\r\n// common\r\nexport const loadGame = (payload: SaveData): GameActions => ({\r\n    type: GameActionType.LOAD_GAME,\r\n    payload: payload\r\n});\r\nexport const restartGame = (): GameActions => ({\r\n    type: GameActionType.RESTART_GAME,\r\n    payload: undefined\r\n});\r\nexport const startGame = (payload: GameForm): GameActions => ({\r\n    type: GameActionType.START_GAME,\r\n    payload: payload\r\n});\r\n\r\n// gameFieldReducer\r\nexport const cellIncrement = (payload: number): GameActions => ({\r\n    type: GameActionType.CELL_INCREMENT,\r\n    payload: payload\r\n});\r\nexport const cellZeroing = (payload: number): GameActions => ({\r\n    type: GameActionType.CELL_ZEROING,\r\n    payload: payload\r\n});\r\nexport const cellCapture = (payload: playerMoving): GameActions => ({\r\n    type: GameActionType.CELL_CAPTURE,\r\n    payload: payload\r\n});\r\nexport const CellCloning = (payload: Cell): GameActions => ({\r\n    type: GameActionType.CELL_CLONING,\r\n    payload: payload\r\n});\r\n\r\n// gameStateReducer\r\nexport const nextMover = (payload: Cell[][]): GameActions => ({\r\n    type: GameActionType.NEXT_MOVER,\r\n    payload: payload\r\n});\r\nexport const blockMoving = (): GameActions => ({\r\n    type: GameActionType.BLOCK_MOVING,\r\n    payload: undefined\r\n});\r\nexport const allowMoving = (): GameActions => ({\r\n    type: GameActionType.ALLOW_MOVING,\r\n    payload: undefined\r\n});\r\nexport const newMove = (payload: Cell[][]): GameActions => ({\r\n    type: GameActionType.NEW_MOVE,\r\n    payload: payload\r\n});\r\nexport const playerMove = (payload: Cell): GameActions => ({\r\n    type: GameActionType.PLAYER_MOVE,\r\n    payload: payload\r\n});\r\n\r\n// gameSettingReducer\r\nexport const resetSettings = (): SettingActions => ({\r\n    type: SettingActionType.RESET_TO_DEFAULT,\r\n    payload: undefined\r\n});\r\nexport const setSettings = (payload: GameSettings): SettingActions => ({\r\n    type: SettingActionType.SET_SETTING,\r\n    payload: payload\r\n});\r\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nfunction useLocalStorage(key, defaultValue, options) {\n    var opts = react_1.useMemo(function () {\n        return __assign({ serializer: JSON.stringify, parser: JSON.parse, logger: console.log, syncData: true }, options);\n    }, [options]);\n    var serializer = opts.serializer, parser = opts.parser, logger = opts.logger, syncData = opts.syncData;\n    var _a = react_1.useState(function () {\n        if (typeof window === \"undefined\")\n            return defaultValue;\n        try {\n            var item = window.localStorage.getItem(key);\n            var res = item ? parser(item) : defaultValue;\n            return res;\n        }\n        catch (e) {\n            logger(e);\n            return defaultValue;\n        }\n    }), storedValue = _a[0], setValue = _a[1];\n    react_1.useEffect(function () {\n        if (typeof window === \"undefined\")\n            return;\n        var updateLocalStorage = function () {\n            if (storedValue !== undefined) {\n                window.localStorage.setItem(key, serializer(storedValue));\n            }\n            else {\n                window.localStorage.removeItem(key);\n            }\n        };\n        try {\n            updateLocalStorage();\n        }\n        catch (e) {\n            logger(e);\n        }\n    }, [storedValue]);\n    react_1.useEffect(function () {\n        if (!syncData)\n            return;\n        var handleStorageChange = function (e) {\n            if (e.key !== key || e.storageArea !== window.localStorage)\n                return;\n            try {\n                setValue(e.newValue ? parser(e.newValue) : undefined);\n            }\n            catch (e) {\n                logger(e);\n            }\n        };\n        if (typeof window === \"undefined\")\n            return;\n        window.addEventListener(\"storage\", handleStorageChange);\n        return function () { return window.removeEventListener(\"storage\", handleStorageChange); };\n    }, [key, syncData]);\n    return [storedValue, setValue];\n}\nexports.default = useLocalStorage;\n","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["useSaves","useLocalStorage","savesList","setSavesList","dispatch","useDispatch","history","useHistory","useEffect","Array","isArray","saveGame","state","save","createSave","deleteSave","id","filter","date","deleteAllSaves","loadSave","find","actionCreator","push","console","error","useTypedSelector","useSelector","cell","move","gameState","wrapperClasses","style","mover","player","moveBlock","contentClasses","getColorClassByPlayer","count","className","draggable","allow","onClick","profile","players","entity","playerEntity","PlayerEntity","gameStarted","createPoints","field","styles","map","row","i","showMenu","replaceClassName","origClass","classToRemove","replace","RegExp","React","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","props","context","_this","call","this","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","status","nextCallback","_inheritsLoose","getDerivedStateFromProps","_ref","prevState","_proto","prototype","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","timeout","undefined","mounting","performEnter","performExit","setState","_this2","appearing","_ref2","nodeRef","ReactDOM","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","node","current","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","setTimeout","render","_this$props","children","childProps","_objectWithoutPropertiesLoose","TransitionGroupContext","Provider","value","noop","contextType","propTypes","defaultProps","removeClass","classes","split","forEach","c","element","classList","remove","setAttribute","baseVal","CSSTransition","_len","arguments","length","args","_key","apply","concat","appliedClasses","_this$resolveArgument","resolveArguments","removeClasses","addClass","_this$resolveArgument2","type","_this$resolveArgument3","getClassNames","classNames","isStringClassNames","baseClassName","activeClassName","doneClassName","phase","scrollTop","add","contains","indexOf","hasClass","_addClass","_this$appliedClasses$","base","done","_extends","show","POPUP_TIMEOUT","title","text","buttonText","actions","continue","disabled","to","reset","filterCellsByCount","cells","maxNeighsEnemiesCount","Math","max","getNeighbors","cellPositionById","x","y","trying","Boolean","randomElemetFrom","array","floor","random","Error","chooseRandomCellFrom","ownCells","chooseMaxCountRandomCellFrom","maxCount","reduce","maxCountCellMove","threePointPriorityMove","expand","filteredCells","acum","cur","amountEmptyNeighs","dontPickBattles","attackThreePointEnemy","attackEnemy","amountEnemyNeighs","getRandomBot","difficulty","AI_PROFILES","bot","name","getBotById","getBotMoveById","botMove","botImplementation","implementation","responce","findCellsByPlayer","description","threePoint","canExpand","canAccumulate","accumulate","canAttack","dontPickBattle","canAlreadyAttack","flat","changeEntity","position","getIconByPlayerEntity","onSubmit","templates","useState","selectedTemplateId","setSelectedTemplateId","loadProfiles","profiles","setProfiles","filterExistingEntity","prof","e","setTemplateId","newTemplateIndex","getPlayersFromTemplate","createProfile","setEntity","index","newProfiles","fieldByTemplate","getTemplateById","existPlayersProfiles","newProfile","AI","assignAI","templateId","playersProfiles","showAlert","setShowAlert","setShowMenu","setTitle","gamePlay","settings","botMovingDelayTimer","setBotMovingDelayTimer","cellCloningDelayTimer","setCellCloningDelayTimer","moveProcessing","findOverflowingCell","cellCloningDelay","clearTimeout","botMovingDelay","moveNumber","playerMove","start","form","useGameProcess","gameRestarting","endGame","upFirst","Player","menuActions","fieldTemplates","loadGame","payload","GameActionType","restartGame","startGame","CellCloning","newMove","resetSettings","SettingActionType","setSettings","__assign","Object","assign","t","s","n","p","hasOwnProperty","defineProperty","exports","react_1","require","key","defaultValue","options","opts","useMemo","serializer","JSON","stringify","parser","parse","logger","log","syncData","_a","window","item","localStorage","getItem","storedValue","setValue","setItem","removeItem","handleStorageChange","storageArea","newValue","addEventListener","removeEventListener","_iterableToArray","iter","Symbol","iterator","from","_toConsumableArray","arr","arrayLikeToArray","iterableToArray","unsupportedIterableToArray","TypeError"],"sourceRoot":""}