{"version":3,"file":"static/js/248.ae34a168.chunk.js","mappings":";8wBACA,EAA0B,uBAA1B,EAAyD,qBAAzD,EAAyF,sDCD1E,SAASA,EAAgBC,EAAUC,GAChD,KAAMD,aAAoBC,GACxB,MAAM,IAAIC,UAAU,oCAExB,CCJA,SAASC,EAAkBC,EAAQC,GACjC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,EAChD,CACF,CAEe,SAASO,EAAad,EAAae,EAAYC,GAM5D,OALID,GAAYb,EAAkBF,EAAYiB,UAAWF,GACrDC,GAAad,EAAkBF,EAAagB,GAChDL,OAAOC,eAAeZ,EAAa,YAAa,CAC9CU,UAAU,IAELV,CACT,yBChBe,SAASkB,EAAUC,EAAUC,GAC1C,GAA0B,oBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAInB,UAAU,sDAGtBkB,EAASF,UAAYN,OAAOU,OAAOD,GAAcA,EAAWH,UAAW,CACrEK,YAAa,CACXC,MAAOJ,EACPT,UAAU,EACVD,cAAc,KAGlBE,OAAOC,eAAeO,EAAU,YAAa,CAC3CT,UAAU,IAERU,IAAY,EAAAI,EAAA,GAAeL,EAAUC,EAC3C,CCjBe,SAASK,EAAgBC,GAItC,OAHAD,EAAkBd,OAAOa,eAAiBb,OAAOgB,eAAeC,OAAS,SAAyBF,GAChG,OAAOA,EAAEG,WAAalB,OAAOgB,eAAeD,EAC9C,EACOD,EAAgBC,EACzB,CCLe,SAASI,IACtB,GAAuB,qBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EACjE,GAAID,QAAQC,UAAUC,KAAM,OAAO,EACnC,GAAqB,oBAAVC,MAAsB,OAAO,EAExC,IAEE,OADAC,QAAQlB,UAAUmB,QAAQC,KAAKN,QAAQC,UAAUG,QAAS,IAAI,WAAa,MACpE,CAGT,CAFE,MAAOG,GACP,OAAO,CACT,CACF,CCXe,SAASC,EAAQC,GAG9B,OAAOD,EAAU,mBAAqBE,QAAU,iBAAmBA,OAAOC,SAAW,SAAUF,GAC7F,cAAcA,CAChB,EAAI,SAAUA,GACZ,OAAOA,GAAO,mBAAqBC,QAAUD,EAAIlB,cAAgBmB,QAAUD,IAAQC,OAAOxB,UAAY,gBAAkBuB,CAC1H,EAAGD,EAAQC,EACb,CCRe,SAASG,EAAuBC,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAG3B,OAAOD,CACT,CCJe,SAASE,EAA2BF,EAAMP,GACvD,GAAIA,IAA2B,WAAlBE,EAAQF,IAAsC,oBAATA,GAChD,OAAOA,EACF,QAAa,IAATA,EACT,MAAM,IAAIpC,UAAU,4DAGtB,OAAO,EAAsB2C,EAC/B,CCPe,SAASG,EAAaC,GACnC,IAAIC,EAA4B,IAChC,OAAO,WACL,IACIC,EADAC,EAAQ,EAAeH,GAG3B,GAAIC,EAA2B,CAC7B,IAAIG,EAAY,EAAeC,MAAM/B,YACrC4B,EAASnB,QAAQC,UAAUmB,EAAOG,UAAWF,EAC/C,MACEF,EAASC,EAAMI,MAAMF,KAAMC,WAG7B,OAAO,EAA0BD,KAAMH,EACzC,CACF,CChBe,SAASM,EAAWC,EAAQC,EAAMC,GAc/C,OAZEH,EADE,IACWzB,QAAQC,UAAUJ,OAElB,SAAoB6B,EAAQC,EAAMC,GAC7C,IAAIC,EAAI,CAAC,MACTA,EAAEC,KAAKN,MAAMK,EAAGF,GAChB,IACI3D,EAAW,IADG+D,SAASlC,KAAK2B,MAAME,EAAQG,IAG9C,OADID,IAAO,EAAAnC,EAAA,GAAezB,EAAU4D,EAAM1C,WACnClB,CACT,EAGKyD,EAAWD,MAAM,KAAMD,UAChC,CCbe,SAASS,EAAiBJ,GACvC,IAAIK,EAAwB,oBAARC,IAAqB,IAAIA,SAAQC,EA8BrD,OA5BAH,EAAmB,SAA0BJ,GAC3C,GAAc,OAAVA,ICRkCQ,EDQER,GCPsB,IAAzDG,SAASM,SAAS/B,KAAK8B,GAAIE,QAAQ,kBDOQ,OAAOV,ECR5C,IAA2BQ,EDUtC,GAAqB,oBAAVR,EACT,MAAM,IAAI1D,UAAU,sDAGtB,GAAsB,qBAAX+D,EAAwB,CACjC,GAAIA,EAAOM,IAAIX,GAAQ,OAAOK,EAAOO,IAAIZ,GAEzCK,EAAOQ,IAAIb,EAAOc,EACpB,CAEA,SAASA,IACP,OAAO,EAAUd,EAAOL,UAAW,EAAeD,MAAM/B,YAC1D,CAUA,OARAmD,EAAQxD,UAAYN,OAAOU,OAAOsC,EAAM1C,UAAW,CACjDK,YAAa,CACXC,MAAOkD,EACPjE,YAAY,EACZE,UAAU,EACVD,cAAc,MAGX,EAAAe,EAAA,GAAeiD,EAASd,EACjC,EAEOI,EAAiBJ,EAC1B,CEtBO,SAASe,EAAkBnD,GAEhC,OAAKA,GAA0B,kBAAVA,EAKjB,aAAcA,GAAS,SAAUA,EAC5BoD,EAASpD,EAAMoD,UAIpB,UAAWpD,GAAS,QAASA,EACxBoD,EAASpD,GAId,SAAUA,GAAS,WAAYA,EAC1BqD,EAAMrD,GAIR,GAnBE,EAoBV,CAMD,SAASqD,EAAMA,GACb,OAAOC,EAAMD,GAASA,EAAME,MAAQ,IAAMD,EAAMD,GAASA,EAAMG,OAChE,CAMD,SAASJ,EAASK,GAChB,OAAOJ,EAAMI,GAAOA,EAAIC,OAAS,IAAML,EAAMI,GAAOA,EAAIE,IACzD,CAMD,SAASL,EAAMtD,GACb,OAAOA,GAA0B,kBAAVA,EAAqBA,EAAQ,CACrD,CCpDM,IAAM4D,EAAb,8BASE,WAAYC,EAAQC,EAAOC,GAAQ,gBAEjC,IAAMC,EAAQ,CAAC,KAAM,MAEjBZ,EAAW,CAEbM,MAAO,CAACH,KAAM,KAAMC,OAAQ,MAE5BG,IAAK,CAACJ,KAAM,KAAMC,OAAQ,OAU5B,GAPA,eAEqB,kBAAVM,IACTC,EAASD,EACTA,OAAQnB,GAGY,kBAAXoB,EAAqB,CAC9B,IAAMT,EAAQS,EAAOjB,QAAQ,MAEd,IAAXQ,EACFU,EAAM,GAAKD,GAEXC,EAAM,GAAKD,EAAOE,MAAM,EAAGX,GAC3BU,EAAM,GAAKD,EAAOE,MAAMX,EAAQ,GAEnC,CA3BgC,OA6B7BQ,IAEE,SAAUA,GAAS,aAAcA,EAC/BA,EAAMV,WACRA,EAAWU,EAAMV,UAIZ,UAAWU,GAAS,QAASA,EACpCV,EAAWU,GAGJ,SAAUA,GAAS,WAAYA,KACtCV,EAASM,MAAQI,IAKrB,EAAKI,KAAOf,EAAkBW,IAAU,MACxC,EAAKK,QAA4B,kBAAXN,EAAsBA,EAAOM,QAAUN,EAC7D,EAAKO,MAA0B,kBAAXP,EAAsBA,EAAOO,MAAQ,GAMzD,EAAKP,OAAS,EAAKM,QAMnB,EAAKE,MAKL,EAAKd,KAAOH,EAASM,MAAMH,KAK3B,EAAKC,OAASJ,EAASM,MAAMF,OAK7B,EAAKc,OAASN,EAAM,GAKpB,EAAKO,OAASP,EAAM,GAMpB,EAAKZ,SAAWA,EAYhB,EAAKoB,OAML,EAAKC,SAKL,EAAKC,KAKL,EAAKC,IAKL,EAAKC,KAxH4B,CA0HlC,CAnIH,eAAkCC,QAsIlCjB,EAAalE,UAAUgF,KAAO,GAC9Bd,EAAalE,UAAUwE,KAAO,GAC9BN,EAAalE,UAAUmE,OAAS,GAChCD,EAAalE,UAAUyE,QAAU,GACjCP,EAAalE,UAAU0E,MAAQ,GAC/BR,EAAalE,UAAU2E,MAAQ,KAC/BT,EAAalE,UAAU8D,OAAS,KAChCI,EAAalE,UAAU6D,KAAO,KAC9BK,EAAalE,UAAU4E,OAAS,KAChCV,EAAalE,UAAU6E,OAAS,KAChCX,EAAalE,UAAU0D,SAAW,KCtG3B,IAAM0B,EAAO,CAACC,SASrB,SAAkBD,EAAME,GACtB,QAAYrC,IAARqC,GAAoC,kBAARA,EAC9B,MAAM,IAAItG,UAAU,mCAGtBuG,EAAWH,GACX,IAIII,EAJAxB,EAAQ,EACRC,GAAO,EACPL,EAAQwB,EAAK/F,OAIjB,QAAY4D,IAARqC,GAAoC,IAAfA,EAAIjG,QAAgBiG,EAAIjG,OAAS+F,EAAK/F,OAAQ,CACrE,KAAOuE,KACL,GAA+B,KAA3BwB,EAAKK,WAAW7B,IAGlB,GAAI4B,EAAc,CAChBxB,EAAQJ,EAAQ,EAChB,KACD,OACQK,EAAM,IAGfuB,GAAe,EACfvB,EAAML,EAAQ,GAIlB,OAAOK,EAAM,EAAI,GAAKmB,EAAKb,MAAMP,EAAOC,EACzC,CAED,GAAIqB,IAAQF,EACV,MAAO,GAGT,IAAIM,GAAoB,EACpBC,EAAWL,EAAIjG,OAAS,EAE5B,KAAOuE,KACL,GAA+B,KAA3BwB,EAAKK,WAAW7B,IAGlB,GAAI4B,EAAc,CAChBxB,EAAQJ,EAAQ,EAChB,KACD,OAEG8B,EAAmB,IAGrBF,GAAe,EACfE,EAAmB9B,EAAQ,GAGzB+B,GAAY,IAEVP,EAAKK,WAAW7B,KAAW0B,EAAIG,WAAWE,KACxCA,EAAW,IAGb1B,EAAML,IAKR+B,GAAY,EACZ1B,EAAMyB,IAMV1B,IAAUC,EACZA,EAAMyB,EACGzB,EAAM,IACfA,EAAMmB,EAAK/F,QAGb,OAAO+F,EAAKb,MAAMP,EAAOC,EAC1B,EAzF8B2B,QA+F/B,SAAiBR,GAGf,GAFAG,EAAWH,GAES,IAAhBA,EAAK/F,OACP,MAAO,IAGT,IAGIwG,EAHA5B,GAAO,EACPL,EAAQwB,EAAK/F,OAKjB,OAASuE,GACP,GAA+B,KAA3BwB,EAAKK,WAAW7B,IAClB,GAAIiC,EAAgB,CAClB5B,EAAML,EACN,KACD,OACSiC,IAEVA,GAAiB,GAIrB,OAAO5B,EAAM,EACc,KAAvBmB,EAAKK,WAAW,GACd,IACA,IACM,IAARxB,GAAoC,KAAvBmB,EAAKK,WAAW,GAC7B,KACAL,EAAKb,MAAM,EAAGN,EACnB,EA/HuC6B,QAqIxC,SAAiBV,GACfG,EAAWH,GAEX,IASIS,EATAjC,EAAQwB,EAAK/F,OAEb4E,GAAO,EACP8B,EAAY,EACZC,GAAY,EAGZC,EAAc,EAIlB,KAAOrC,KAAS,CACd,IAAMsC,EAAOd,EAAKK,WAAW7B,GAE7B,GAAa,KAATsC,EAWAjC,EAAM,IAGR4B,GAAiB,EACjB5B,EAAML,EAAQ,GAGH,KAATsC,EAEEF,EAAW,EACbA,EAAWpC,EACc,IAAhBqC,IACTA,EAAc,GAEPD,GAAY,IAGrBC,GAAe,QAzBf,GAAIJ,EAAgB,CAClBE,EAAYnC,EAAQ,EACpB,KACD,CAwBJ,CAED,GACEoC,EAAW,GACX/B,EAAM,GAEU,IAAhBgC,GAEiB,IAAhBA,GAAqBD,IAAa/B,EAAM,GAAK+B,IAAaD,EAAY,EAEvE,MAAO,GAGT,OAAOX,EAAKb,MAAMyB,EAAU/B,EAC7B,EAlMgDkC,KAwMjD,WAA2B,IACzB,IAEIC,EAFAxC,GAAS,EADY,mBAAVyC,EAAU,yBAAVA,EAAU,gBAKzB,OAASzC,EAAQyC,EAAShH,QACxBkG,EAAWc,EAASzC,IAEhByC,EAASzC,KACXwC,OACanD,IAAXmD,EAAuBC,EAASzC,GAASwC,EAAS,IAAMC,EAASzC,IAIvE,YAAkBX,IAAXmD,EAAuB,IAAME,EAAUF,EAC/C,EAvNsDG,IAAK,KAgO5D,SAASD,EAAUlB,GACjBG,EAAWH,GAEX,IAAMoB,EAAkC,KAAvBpB,EAAKK,WAAW,GAG7BnF,EAoBN,SAAyB8E,EAAMqB,GAC7B,IAMIP,EAEAQ,EARAzE,EAAS,GACT0E,EAAoB,EACpBC,GAAa,EACbC,EAAO,EACPjD,GAAS,EAMb,OAASA,GAASwB,EAAK/F,QAAQ,CAC7B,GAAIuE,EAAQwB,EAAK/F,OACf6G,EAAOd,EAAKK,WAAW7B,OAClB,IAAa,KAATsC,EACT,MAEAA,EAAO,EACR,CAED,GAAa,KAATA,EAAuB,CACzB,GAAIU,IAAchD,EAAQ,GAAc,IAATiD,QAExB,GAAID,IAAchD,EAAQ,GAAc,IAATiD,EAAY,CAChD,GACE5E,EAAO5C,OAAS,GACM,IAAtBsH,GACyC,KAAzC1E,EAAOwD,WAAWxD,EAAO5C,OAAS,IACO,KAAzC4C,EAAOwD,WAAWxD,EAAO5C,OAAS,GAElC,GAAI4C,EAAO5C,OAAS,GAGlB,IAFAqH,EAAiBzE,EAAO6E,YAAY,QAEb7E,EAAO5C,OAAS,EAAG,CACpCqH,EAAiB,GACnBzE,EAAS,GACT0E,EAAoB,GAGpBA,GADA1E,EAASA,EAAOsC,MAAM,EAAGmC,IACErH,OAAS,EAAI4C,EAAO6E,YAAY,KAG7DF,EAAYhD,EACZiD,EAAO,EACP,QACD,OACI,GAAI5E,EAAO5C,OAAS,EAAG,CAC5B4C,EAAS,GACT0E,EAAoB,EACpBC,EAAYhD,EACZiD,EAAO,EACP,QACD,CAGCJ,IACFxE,EAASA,EAAO5C,OAAS,EAAI4C,EAAS,MAAQ,KAC9C0E,EAAoB,EAEvB,MACK1E,EAAO5C,OAAS,EAClB4C,GAAU,IAAMmD,EAAKb,MAAMqC,EAAY,EAAGhD,GAE1C3B,EAASmD,EAAKb,MAAMqC,EAAY,EAAGhD,GAGrC+C,EAAoB/C,EAAQgD,EAAY,EAG1CA,EAAYhD,EACZiD,EAAO,CACR,MAAmB,KAATX,GAAyBW,GAAQ,EAC1CA,IAEAA,GAAQ,CAEX,CAED,OAAO5E,CACR,CAnGa8E,CAAgB3B,GAAOoB,GAUnC,OARqB,IAAjBlG,EAAMjB,QAAiBmH,IACzBlG,EAAQ,KAGNA,EAAMjB,OAAS,GAA0C,KAArC+F,EAAKK,WAAWL,EAAK/F,OAAS,KACpDiB,GAAS,KAGJkG,EAAW,IAAMlG,EAAQA,CACjC,CA6FD,SAASiF,EAAWH,GAClB,GAAoB,kBAATA,EACT,MAAM,IAAIpG,UACR,mCAAqCgI,KAAKC,UAAU7B,GAGzD,CCpYM,IAAM8B,EAAO,CAACC,IAErB,WACE,MAAO,GACR,GCgBM,SAASC,EAAMC,GACpB,OACoB,OAAlBA,GACyB,kBAAlBA,GAEPA,EAAcC,MAEdD,EAAchD,MAEjB,CCvBM,SAASkD,EAAUnC,GACxB,GAAoB,kBAATA,EACTA,EAAO,IAAIoC,IAAIpC,QACV,IAAKgC,EAAMhC,GAAO,CAEvB,IAAMqC,EAAQ,IAAIzI,UAChB,+EACEoG,EACA,KAGJ,MADAqC,EAAMvB,KAAO,uBACPuB,CACP,CAED,GAAsB,UAAlBrC,EAAKsC,SAAsB,CAE7B,IAAMD,EAAQ,IAAIzI,UAAU,kCAE5B,MADAyI,EAAMvB,KAAO,yBACPuB,CACP,CAED,OAMF,SAA6BxC,GAC3B,GAAqB,KAAjBA,EAAI0C,SAAiB,CAEvB,IAAMF,EAAQ,IAAIzI,UAChB,wDAGF,MADAyI,EAAMvB,KAAO,4BACPuB,CACP,CAED,IAAMG,EAAW3C,EAAI2C,SACjBhE,GAAS,EAEb,OAASA,EAAQgE,EAASvI,QACxB,GACiC,KAA/BuI,EAASnC,WAAW7B,IACe,KAAnCgE,EAASnC,WAAW7B,EAAQ,GAC5B,CACA,IAAMiE,EAAQD,EAASnC,WAAW7B,EAAQ,GAC1C,GAAc,KAAViE,GAAoC,MAAVA,EAAyB,CAErD,IAAMJ,EAAQ,IAAIzI,UAChB,uDAGF,MADAyI,EAAMvB,KAAO,4BACPuB,CACP,CACF,CAGH,OAAOK,mBAAmBF,EAC3B,CArCQG,CAAoB3C,EAC5B,CC0BD,IAAM4C,EAAQ,CAAC,UAAW,OAAQ,WAAY,OAAQ,UAAW,WAEpDC,EAAb,WAkBE,WAAY3H,GAEV,IAAI4H,EAFa,UAQfA,EAJG5H,EAEuB,kBAAVA,GAAsB6H,EAAO7H,GAEnC,CAACA,MAAAA,GACF8G,EAAM9G,GACL,CAAC8E,KAAM9E,GAGPA,EARA,CAAC,EAiBb8B,KAAKgG,KAAO,CAAC,EAMbhG,KAAKiG,SAAW,GAOhBjG,KAAKkG,QAAU,GAMflG,KAAK+E,IAAMD,EAAKC,MAOhB/E,KAAK9B,MAUL8B,KAAKmG,OASLnG,KAAKH,OASLG,KAAKoG,IAML,IAFA,IAcIC,EAdA7E,GAAS,IAEJA,EAAQoE,EAAM3I,QAAQ,CAC7B,IAAMoJ,EAAOT,EAAMpE,GAIf6E,KAAQP,QAA6BjF,IAAlBiF,EAAQO,KAE7BrG,KAAKqG,GAAiB,YAATA,GAAA,OAAyBP,EAAQO,IAASP,EAAQO,GAElE,CAMD,IAAKA,KAAQP,EAENF,EAAMU,SAASD,KAAOrG,KAAKqG,GAAQP,EAAQO,GAEnD,CAvHH,4BA6HE,WACE,OAAOrG,KAAKkG,QAAQlG,KAAKkG,QAAQjJ,OAAS,EAC3C,EA/HH,IAwIE,SAAS+F,GACHgC,EAAMhC,KACRA,EAAOmC,EAAUnC,IAGnBuD,EAAevD,EAAM,QAEjBhD,KAAKgD,OAASA,GAChBhD,KAAKkG,QAAQ1F,KAAKwC,EAErB,GAlJH,mBAuJE,WACE,MAA4B,kBAAdhD,KAAKgD,KAAoBA,EAAKQ,QAAQxD,KAAKgD,WAAQnC,CAClE,EAzJH,IA+JE,SAAY2C,GACVL,EAAWnD,KAAKiD,SAAU,WAC1BjD,KAAKgD,KAAOA,EAAKe,KAAKP,GAAW,GAAIxD,KAAKiD,SAC3C,GAlKH,oBAuKE,WACE,MAA4B,kBAAdjD,KAAKgD,KAAoBA,EAAKC,SAASjD,KAAKgD,WAAQnC,CACnE,EAzKH,IAiLE,SAAaoC,GACXsD,EAAetD,EAAU,YACzBuD,EAAWvD,EAAU,YACrBjD,KAAKgD,KAAOA,EAAKe,KAAK/D,KAAKwD,SAAW,GAAIP,EAC3C,GArLH,mBA0LE,WACE,MAA4B,kBAAdjD,KAAKgD,KAAoBA,EAAKU,QAAQ1D,KAAKgD,WAAQnC,CAClE,EA5LH,IAoME,SAAY6C,GAIV,GAHA8C,EAAW9C,EAAS,WACpBP,EAAWnD,KAAKwD,QAAS,WAErBE,EAAS,CACX,GAA8B,KAA1BA,EAAQL,WAAW,GACrB,MAAM,IAAIN,MAAM,iCAGlB,GAAIW,EAAQ4C,SAAS,IAAK,GACxB,MAAM,IAAIvD,MAAM,yCAEnB,CAED/C,KAAKgD,KAAOA,EAAKe,KAAK/D,KAAKwD,QAASxD,KAAKyG,MAAQ/C,GAAW,IAC7D,GAnNH,gBAwNE,WACE,MAA4B,kBAAd1D,KAAKgD,KACfA,EAAKC,SAASjD,KAAKgD,KAAMhD,KAAK0D,cAC9B7C,CACL,EA5NH,IAoOE,SAAS4F,GACPF,EAAeE,EAAM,QACrBD,EAAWC,EAAM,QACjBzG,KAAKgD,KAAOA,EAAKe,KAAK/D,KAAKwD,SAAW,GAAIiD,GAAQzG,KAAK0D,SAAW,IACnE,GAxOH,sBAmPE,SAASgD,GACP,OAAQ1G,KAAK9B,OAAS,IAAI6C,SAAS2F,EACpC,GArPH,qBAqQE,SAAQ3E,EAAQC,EAAOC,GACrB,IAAMI,EAAU,IAAIP,EAAaC,EAAQC,EAAOC,GAWhD,OATIjC,KAAKgD,OACPX,EAAQD,KAAOpC,KAAKgD,KAAO,IAAMX,EAAQD,KACzCC,EAAQO,KAAO5C,KAAKgD,MAGtBX,EAAQE,OAAQ,EAEhBvC,KAAKiG,SAASzF,KAAK6B,GAEZA,CACR,GAlRH,kBAiSE,SAAKN,EAAQC,EAAOC,GAClB,IAAMI,EAAUrC,KAAKqC,QAAQN,EAAQC,EAAOC,GAI5C,OAFAI,EAAQE,MAAQ,KAETF,CACR,GAvSH,kBAwTE,SAAKN,EAAQC,EAAOC,GAClB,IAAMI,EAAUrC,KAAKqC,QAAQN,EAAQC,EAAOC,GAI5C,MAFAI,EAAQE,OAAQ,EAEVF,CACP,KA9TH,KAwUA,SAASmE,EAAWG,EAAMvE,GACxB,GAAIuE,GAAQA,EAAKL,SAAStD,EAAKmB,KAC7B,MAAM,IAAIpB,MACR,IAAMX,EAAO,uCAAyCY,EAAKmB,IAAM,IAGtE,CASD,SAASoC,EAAeI,EAAMvE,GAC5B,IAAKuE,EACH,MAAM,IAAI5D,MAAM,IAAMX,EAAO,oBAEhC,CASD,SAASe,EAAWH,EAAMZ,GACxB,IAAKY,EACH,MAAM,IAAID,MAAM,YAAcX,EAAO,kCAExC,4CC/Zc,SAASwE,EAASC,GAC/B,OAAO,EAAAC,EAAA,GAAeD,KAAQ,EAAAE,EAAA,GAAgBF,KAAQ,EAAAG,EAAA,GAA2BH,KAAQ,EAAAI,EAAA,IAC3F,CCCO,SAASC,EAAK7B,GACnB,GAAIA,EACF,MAAMA,CAET,eCXc,SAAS8B,EAAcjJ,GACrC,GAAqB,kBAAVA,GAAgC,OAAVA,EAChC,OAAO,EAGR,IAAMN,EAAYN,OAAOgB,eAAeJ,GACxC,OAAsB,OAAdN,GAAsBA,IAAcN,OAAOM,WAAkD,OAArCN,OAAOgB,eAAeV,OAA0BwB,OAAOgI,eAAelJ,MAAYkB,OAAOC,YAAYnB,EACrK,CCqFM,SAASmJ,EAAKC,EAAYC,GAE/B,IAAIC,EAEJ,OAQA,WAAgC,2BAAZC,EAAY,yBAAZA,EAAY,gBAC9B,IAEI5H,EAFE6H,EAAoBJ,EAAWrK,OAASwK,EAAWxK,OAIrDyK,GACFD,EAAWjH,KAAKmH,GAGlB,IACE9H,EAASyH,EAAWpH,MAAMF,KAAMyH,EAajC,CAZC,MAAOpC,GACP,IAAMuC,EAAkCvC,EAMxC,GAAIqC,GAAqBF,EACvB,MAAMI,EAGR,OAAOD,EAAKC,EACb,CAEIF,IACC7H,aAAkBgI,QACpBhI,EAAOiI,KAAKA,EAAMH,GACT9H,aAAkBkD,MAC3B4E,EAAK9H,GAELiI,EAAKjI,GAGV,EAMD,SAAS8H,EAAKtC,GACZ,IAAKmC,EAAQ,CACXA,GAAS,EADE,2BADSO,EACT,iCADSA,EACT,kBAEXR,EAAQ,WAAR,GAASlC,GAAT,OAAmB0C,GACpB,CACF,CAOD,SAASD,EAAK5J,GACZyJ,EAAK,KAAMzJ,EACZ,CACF,CCnIM,IAAM8J,EAQb,SAASC,IACP,IAMIC,EANEC,EDpBD,WAEL,IAAMC,EAAM,GAENC,EAAW,CAACC,IAKlB,WAAwB,2BAARC,EAAQ,yBAARA,EAAQ,gBACtB,IAAIC,GAAmB,EAEjBjB,EAAWgB,EAAOE,MAExB,GAAwB,oBAAblB,EACT,MAAM,IAAI3K,UAAU,2CAA6C2K,GAWnE,SAASmB,EAAKrD,GACZ,IAAMvE,EAAKsH,IAAMI,GACbhH,GAAS,EAEb,GAAI6D,EACFkC,EAASlC,OADX,CAJ8B,2BAAR0C,EAAQ,iCAARA,EAAQ,kBAU9B,OAASvG,EAAQ+G,EAAOtL,QACA,OAAlB8K,EAAOvG,SAAqCX,IAAlBkH,EAAOvG,KACnCuG,EAAOvG,GAAS+G,EAAO/G,IAK3B+G,EAASR,EAGLjH,EACFuG,EAAKvG,EAAI4H,GAAT,aAAkBX,GAElBR,EAAQ,WAAR,GAAS,MAAT,OAAkBQ,GAhBnB,CAkBF,CAjCDW,EAAI,WAAJ,GAAK,MAAL,eAAcH,IAkCf,EAhDsBI,IAmDvB,SAAaC,GACX,GAA0B,oBAAfA,EACT,MAAM,IAAIhM,UACR,+CAAiDgM,GAKrD,OADAR,EAAI5H,KAAKoI,GACFP,CACR,GA1DD,OAAOA,CA2DR,CC7CsBQ,GAEfC,EAAY,GAEdC,EAAY,CAAC,EAGbC,GAAe,EA2BnB,OAvBAC,EAAUjD,KA6CV,SAAcxI,EAAKU,GACjB,GAAmB,kBAARV,EAET,OAAyB,IAArByC,UAAUhD,QACZiM,GAAe,OAAQhB,GACvBa,EAAUvL,GAAOU,EACV+K,GAIDE,GAAInK,KAAK+J,EAAWvL,IAAQuL,EAAUvL,IAAS,KAIzD,GAAIA,EAGF,OAFA0L,GAAe,OAAQhB,GACvBa,EAAYvL,EACLyL,EAIT,OAAOF,CACR,EAlEDE,EAAUG,YAASvI,EACnBoI,EAAUI,cAAWxI,EAGrBoI,EAAUK,OAiEV,WACE,GAAIpB,EACF,OAAOe,EAGT,OAASD,EAAcF,EAAU7L,QAAQ,CACvC,QAA+B6L,EAAUE,IAAlCO,EAAP,KAAoBzD,EAApB,WAEA,IAAmB,IAAfA,EAAQ,GAAZ,EAImB,IAAfA,EAAQ,KACVA,EAAQ,QAAKjF,GAIf,IAAM2I,EAAcD,EAASvK,KAAT,MAAAuK,EAAQ,CAAMN,GAAN,eAAoBnD,KAErB,oBAAhB0D,GACTrB,EAAaQ,IAAIa,EAVlB,CAYF,CAKD,OAHAtB,GAAS,EACTc,EAAcS,OAAOC,kBAEdT,CACR,EA1FDA,EAAUH,UAAYA,EAEtBG,EAAUN,IA+FV,SAAazK,GAAmB,2BAAT4H,EAAS,iCAATA,EAAS,kBAE9B,IAAI6D,EAIJ,GAFAT,GAAe,MAAOhB,GAER,OAAVhK,QAA4B2C,IAAV3C,QAEf,GAAqB,oBAAVA,EAChB0L,EAAS,WAAT,GAAU1L,GAAV,OAAoB4H,QACf,IAAqB,kBAAV5H,EAOhB,MAAM,IAAItB,UAAU,+BAAiCsB,EAAQ,KANzD2L,MAAMC,QAAQ5L,GAChB6L,EAAQ7L,GAER8L,EAAU9L,EAIb,CAEGyL,IACFZ,EAAUY,SAAWrM,OAAO2M,OAAOlB,EAAUY,UAAY,CAAC,EAAGA,IAG/D,OAAOV,EAMP,SAASiB,EAAIhM,GACX,GAAqB,oBAAVA,EACT0L,EAAU1L,OACL,IAAqB,kBAAVA,EAQhB,MAAM,IAAItB,UAAU,+BAAiCsB,EAAQ,KAP7D,GAAI2L,MAAMC,QAAQ5L,GAAQ,CACxB,QAA6BA,GAAtBiM,EAAP,KAAkBrE,EAAlB,WACA8D,EAAS,WAAT,GAAUO,GAAV,eAAqBrE,IACtB,MACCkE,EAAU9L,EAIb,CACF,CAMD,SAAS8L,EAAUnK,GACjBkK,EAAQlK,EAAOuK,SAEXvK,EAAO8J,WACTA,EAAWrM,OAAO2M,OAAON,GAAY,CAAC,EAAG9J,EAAO8J,UAEnD,CAMD,SAASI,EAAQK,GACf,IAAI5I,GAAS,EAEb,GAAgB,OAAZ4I,QAAgCvJ,IAAZuJ,OAEjB,KAAIP,MAAMC,QAAQM,GAMvB,MAAM,IAAIxN,UAAU,oCAAsCwN,EAAU,KALpE,OAAS5I,EAAQ4I,EAAQnN,QAAQ,CAE/BiN,EADcE,EAAQ5I,GAEvB,CAGF,CACF,CAOD,SAASoI,EAAUO,EAAQjM,GAKzB,IAJA,IAEImM,EAFA7I,GAAS,IAIJA,EAAQsH,EAAU7L,QACzB,GAAI6L,EAAUtH,GAAO,KAAO2I,EAAQ,CAClCE,EAAQvB,EAAUtH,GAClB,KACD,CAGC6I,GACEC,EAAWD,EAAM,KAAOC,EAAWpM,KACrCA,EAAQqM,GAAO,EAAMF,EAAM,GAAInM,IAGjCmM,EAAM,GAAKnM,GAGX4K,EAAUtI,KAAV,2BAAmBP,WAEtB,CACF,EApMDgJ,EAAUuB,MAuMV,SAAeC,GACbxB,EAAUK,SACV,IAAM1G,EAAO8H,GAAMD,GACbrB,EAASH,EAAUG,OAGzB,GAFAuB,GAAa,QAASvB,GAElBwB,GAAQxB,EAAQ,SAElB,OAAO,IAAIA,EAAOyB,OAAOjI,GAAOA,GAAM4H,QAIxC,OAAOpB,EAAOyB,OAAOjI,GAAOA,EAC7B,EAnNDqG,EAAUpE,UAsNV,SAAmBiG,EAAML,GACvBxB,EAAUK,SACV,IAAM1G,EAAO8H,GAAMD,GACbpB,EAAWJ,EAAUI,SAI3B,GAHA0B,GAAe,YAAa1B,GAC5B2B,GAAWF,GAEPF,GAAQvB,EAAU,WAEpB,OAAO,IAAIA,EAASyB,EAAMlI,GAAMqI,UAIlC,OAAO5B,EAASyB,EAAMlI,EACvB,EAlODqG,EAAUX,IA0OV,SAAawC,EAAML,EAAKlD,GACtByD,GAAWF,GACX7B,EAAUK,SAEL/B,GAA2B,oBAARkD,IACtBlD,EAAWkD,EACXA,OAAM5J,GAGR,IAAK0G,EACH,OAAO,IAAIM,QAAQqD,GAUrB,SAASA,EAASC,EAASC,GAUzB,SAASzD,EAAKtC,EAAOgG,EAAMzI,GACzByI,EAAOA,GAAQP,EACXzF,EACF+F,EAAO/F,GACE8F,EACTA,EAAQE,GAGR9D,EAAS,KAAM8D,EAAMzI,EAExB,CAlBDuF,EAAaG,IAAIwC,EAAMJ,GAAMD,GAAM9C,EAmBpC,CA5BDuD,EAAS,KAAM3D,EA6BhB,EAnRD0B,EAAUqC,QAsRV,SAAiBR,EAAMlI,GAErB,IAAI/C,EAEA0L,EAOJ,OALAtC,EAAUX,IAAIwC,EAAMlI,EAAM+E,GAE1B6D,GAAW,UAAW,MAAOD,GAGtB1L,EAOP,SAAS8H,EAAKtC,EAAOgG,GACnBnE,EAAK7B,GACLxF,EAASwL,EACTE,GAAW,CACZ,CACF,EA3SDtC,EAAUwC,QAkTV,SAAiBhB,EAAKlD,GAKpB,GAJA0B,EAAUK,SACVqB,GAAa,UAAW1B,EAAUG,QAClC2B,GAAe,UAAW9B,EAAUI,WAE/B9B,EACH,OAAO,IAAIM,QAAQqD,GAUrB,SAASA,EAASC,EAASC,GACzB,IAAMxI,EAAO8H,GAAMD,GA0BnB,SAAS9C,EAAKtC,EAAOzC,GACfyC,IAAUzC,EACZwI,EAAO/F,GACE8F,EACTA,EAAQvI,GAGR2E,EAAS,KAAM3E,EAElB,CAjCDqG,EAAUX,IAAIW,EAAUuB,MAAM5H,GAAOA,GAAM,SAACyC,EAAOgG,EAAMzI,GACvD,IAAIyC,GAAUgG,GAASzI,EAEhB,CAEL,IAAM/C,EAASoJ,EAAUpE,UAAUwG,EAAMzI,QAE1B/B,IAAXhB,GAAmC,OAAXA,IAsMZ,kBADI3B,EAnMY2B,IAoMJ6L,EAASxN,GAnMnC0E,EAAK1E,MAAQ2B,EAEb+C,EAAK/C,OAASA,GAGhB8H,EAAKtC,EAAOzC,EACb,MAdC+E,EAAKtC,GA0Mf,IAA8BnH,CA3LvB,GAiBF,CA5CDgN,EAAS,KAAM3D,EA6ChB,EAvWD0B,EAAU0C,YA0WV,SAAqBlB,GAEnB,IAAIc,EAEJtC,EAAUK,SACVqB,GAAa,cAAe1B,EAAUG,QACtC2B,GAAe,cAAe9B,EAAUI,UAExC,IAAMzG,EAAO8H,GAAMD,GAMnB,OAJAxB,EAAUwC,QAAQ7I,EAAM+E,GAExB6D,GAAW,cAAe,UAAWD,GAE9B3I,EAMP,SAAS+E,EAAKtC,GACZkG,GAAW,EACXrE,EAAK7B,EACN,CACF,EA/XM4D,EAIP,SAASA,IAIP,IAHA,IAAM2C,EAAc3D,IAChBzG,GAAS,IAEJA,EAAQsH,EAAU7L,QACzB2O,EAAYjD,IAAZ,MAAAiD,GAAW,OAAQ9C,EAAUtH,KAK/B,OAFAoK,EAAY5F,KAAKuE,GAAO,EAAM,CAAC,EAAGxB,IAE3B6C,CACR,CAiXF,CA3asB3D,GAAOqB,SAExBH,GAAM,CAAC,EAAE0C,eAkbf,SAASjB,GAAQ1M,EAAOkE,GACtB,MACmB,oBAAVlE,GAGPA,EAAMN,YAeV,SAAcM,GAEZ,IAAIV,EAEJ,IAAKA,KAAOU,EACV,GAAIiL,GAAInK,KAAKd,EAAOV,GAClB,OAAO,EAIX,OAAO,CACR,CArBIsO,CAAK5N,EAAMN,YAAcwE,KAAQlE,EAAMN,UAE3C,CA4BD,SAAS+M,GAAavI,EAAMlE,GAC1B,GAAqB,oBAAVA,EACT,MAAM,IAAItB,UAAU,WAAawF,EAAO,qBAE3C,CASD,SAAS2I,GAAe3I,EAAMlE,GAC5B,GAAqB,oBAAVA,EACT,MAAM,IAAItB,UAAU,WAAawF,EAAO,uBAE3C,CASD,SAAS8G,GAAe9G,EAAM8F,GAC5B,GAAIA,EACF,MAAM,IAAInF,MACR,gBACEX,EACA,mHAGP,CAQD,SAAS4I,GAAWF,GAGlB,IAAKR,EAAWQ,IAA8B,kBAAdA,EAAKiB,KACnC,MAAM,IAAInP,UAAU,uBAAyBkO,EAAO,IAGvD,CAUD,SAASU,GAAWpJ,EAAM4J,EAAWT,GACnC,IAAKA,EACH,MAAM,IAAIxI,MACR,IAAMX,EAAO,0BAA4B4J,EAAY,YAG1D,CAMD,SAAStB,GAAMxM,GACb,OAOF,SAAyBA,GACvB,OAAOY,QACLZ,GACmB,kBAAVA,GACP,YAAaA,GACb,aAAcA,EAEnB,CAdQ+N,CAAgB/N,GAASA,EAAQ,IAAI2H,EAAM3H,EACnD,CCnjBM,SAAS6C,GAAS+J,EAAMhF,GAC7B,OAA+BA,GAAW,CAAC,GAAtCoG,gBACL,OAAOC,GAAIrB,OADX,SAED,CAOD,SAASqB,GAAIrB,EAAMoB,GACjB,OACGpB,GACiB,kBAATA,IAENA,EAAK5M,QAEHgO,EAAkBpB,EAAKsB,IAAM,KAE7B,aAActB,GAAQuB,GAAIvB,EAAKwB,SAAUJ,IACzCrC,MAAMC,QAAQgB,IAASuB,GAAIvB,EAAMoB,KACtC,EAEH,CAOD,SAASG,GAAI9D,EAAQ2D,GAKnB,IAHA,IAAIrM,EAAS,GACT2B,GAAS,IAEJA,EAAQ+G,EAAOtL,QACtB4C,EAAO2B,GAAS2K,GAAI5D,EAAO/G,GAAQ0K,GAGrC,OAAOrM,EAAOkE,KAAK,GACpB,CCtCM,SAASwI,GAAOC,EAAM5K,EAAO6K,EAAQC,GAC1C,IAIIjF,EAJE5F,EAAM2K,EAAKvP,OACb0P,EAAa,EAajB,GAPE/K,EADEA,EAAQ,GACDA,EAAQC,EAAM,EAAIA,EAAMD,EAEzBA,EAAQC,EAAMA,EAAMD,EAG9B6K,EAASA,EAAS,EAAIA,EAAS,EAE3BC,EAAMzP,OAAS,KACjBwK,EAAaoC,MAAM+C,KAAKF,IACbG,QAAQjL,EAAO6K,GACzB,GAAGF,OAAOrM,MAAMsM,EAAM/E,QAKvB,IAFIgF,GAAQ,GAAGF,OAAOrM,MAAMsM,EAAM,CAAC5K,EAAO6K,IAEnCE,EAAaD,EAAMzP,SACxBwK,EAAaiF,EAAMvK,MAAMwK,EAAYA,EAAa,MACvCE,QAAQjL,EAAO,GACzB,GAAG2K,OAAOrM,MAAMsM,EAAM/E,GACvBkF,GAAc,IACd/K,GAAS,GAGd,CAcM,SAASpB,GAAKgM,EAAME,GACzB,OAAIF,EAAKvP,OAAS,GAChBsP,GAAOC,EAAMA,EAAKvP,OAAQ,EAAGyP,GACtBF,GAGFE,CACR,CC3DD,IAAMb,GAAiB,CAAC,EAAEA,eAQnB,SAASiB,GAAkBC,GAKhC,IAHA,IAAMV,EAAM,CAAC,EACT7K,GAAS,IAEJA,EAAQuL,EAAW9P,QAC1B+P,GAAgBX,EAAKU,EAAWvL,IAGlC,OAAO6K,CACR,CASD,SAASW,GAAgBX,EAAKY,GAE5B,IAAIC,EAEJ,IAAKA,KAAQD,EAAW,CACtB,IACME,GADQtB,GAAe7M,KAAKqN,EAAKa,GAAQb,EAAIa,QAAQrM,KACpCwL,EAAIa,GAAQ,CAAC,GAC9BE,EAAQH,EAAUC,GAEpBpJ,OAAI,EAER,IAAKA,KAAQsJ,EAAO,CACbvB,GAAe7M,KAAKmO,EAAMrJ,KAAOqJ,EAAKrJ,GAAQ,IACnD,IAAM5F,EAAQkP,EAAMtJ,GACpBuJ,GAEEF,EAAKrJ,GACL+F,MAAMC,QAAQ5L,GAASA,EAAQA,EAAQ,CAACA,GAAS,GAEpD,CACF,CACF,CAUD,SAASmP,GAAWC,EAAUd,GAK5B,IAJA,IAAIhL,GAAS,EAEP+L,EAAS,KAEN/L,EAAQgL,EAAKvP,SAEE,UAApBuP,EAAKhL,GAAO0I,IAAkBoD,EAAWC,GAAQ/M,KAAKgM,EAAKhL,IAG/D+K,GAAOe,EAAU,EAAG,EAAGC,EACxB,CCxEM,ICWMC,GAAaC,GAAW,YAQxBC,GAAaD,GAAW,MAexBE,GAAgBF,GAAW,cAS3BG,GAAoBH,GAAW,cAU/BI,GAAmBJ,GAAW,kBAkB9BK,GAAaL,GAAW,uBAW9B,SAASM,GAAajK,GAC3B,OAGW,OAATA,IAAkBA,EAAO,IAAe,MAATA,EAElC,CASM,SAASkK,GAA0BlK,GACxC,OAAgB,OAATA,IAAkBA,EAAO,GAAc,KAATA,EACtC,CAeM,SAASmK,GAAmBnK,GACjC,OAAgB,OAATA,GAAiBA,GAAQ,CACjC,CAeM,SAASoK,GAAcpK,GAC5B,OAAiB,IAAVA,IAAyB,IAAVA,GAAwB,KAATA,CACtC,CAiBM,IAAMqK,GAAoBV,GAAW,MAkB/BW,GAAqBX,GDvKhC,+vCC+KF,SAASA,GAAWY,GAClB,OAQA,SAAevK,GACb,OAAgB,OAATA,GAAiBuK,EAAMC,KAAKzD,OAAO0D,aAAazK,GACxD,CACF,CCrLM,SAAS0K,GAAaC,EAASC,EAAI3C,EAAM4C,GAC9C,IAAMC,EAAQD,EAAMA,EAAM,EAAIlF,OAAOC,kBACjCmF,EAAO,EACX,OAGA,SAAe/K,GACb,GAAIoK,GAAcpK,GAEhB,OADA2K,EAAQK,MAAM/C,GACPgD,EAAOjL,GAGhB,OAAO4K,EAAG5K,EACX,EAGD,SAASiL,EAAOjL,GACd,OAAIoK,GAAcpK,IAAS+K,IAASD,GAClCH,EAAQO,QAAQlL,GACTiL,IAGTN,EAAQQ,KAAKlD,GACN2C,EAAG5K,GACX,CACF,CC5BM,IAAMoL,GAAU,CACrBC,SAIF,SAA2BV,GACzB,IAOIW,EAPEC,EAAeZ,EAAQa,QAC3BtP,KAAKuP,OAAOlC,WAAWmC,gBAUzB,SAAoC1L,GAClC,GAAa,OAATA,EAEF,YADA2K,EAAQO,QAAQlL,GAOlB,OAHA2K,EAAQK,MAAM,cACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,cACNT,GAAaC,EAASY,EAAc,aAC5C,IAGD,SAA0BvL,GAExB,OADA2K,EAAQK,MAAM,aACPW,EAAU3L,EAClB,IAnBD,OAAOuL,EAsBP,SAASI,EAAU3L,GACjB,IAAM4L,EAAQjB,EAAQK,MAAM,YAAa,CACvCa,YAAa,OACbP,SAAAA,IAQF,OALIA,IACFA,EAAS1G,KAAOgH,GAGlBN,EAAWM,EACJ1J,EAAKlC,EACb,CAGD,SAASkC,EAAKlC,GACZ,OAAa,OAATA,GACF2K,EAAQQ,KAAK,aACbR,EAAQQ,KAAK,kBACbR,EAAQO,QAAQlL,IAIdmK,GAAmBnK,IACrB2K,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,aACNQ,IAGThB,EAAQO,QAAQlL,GACTkC,EACR,CACF,GC1DM,IAAM4J,GAAW,CACtBT,SASF,SAA4BV,GAC1B,IAOIoB,EAGAC,EAGAC,EAbExQ,EAAOS,KAGPsC,EAAQ,GACV0N,EAAY,EAUhB,OAAOpO,EAGP,SAASA,EAAMkC,GAWb,GAAIkM,EAAY1N,EAAMrF,OAAQ,CAC5B,IAAMgT,EAAO3N,EAAM0N,GAEnB,OADAzQ,EAAK2Q,eAAiBD,EAAK,GACpBxB,EAAQa,QACbW,EAAK,GAAGE,aACRC,EACAC,EAHK5B,CAIL3K,EACH,CAED,OAAOuM,EAAmBvM,EAC3B,CAGD,SAASsM,EAAiBtM,GAKxB,GAJAkM,IAIIzQ,EAAK2Q,eAAeI,WAAY,CAClC/Q,EAAK2Q,eAAeI,gBAAazP,EAE7BgP,GACFU,IAUF,IANA,IAIIhP,EAJEiP,EAAmBjR,EAAKkR,OAAOxT,OACjCyT,EAAkBF,EAKfE,KACL,GACsC,SAApCnR,EAAKkR,OAAOC,GAAiB,IACY,cAAzCnR,EAAKkR,OAAOC,GAAiB,GAAG3E,KAChC,CACAxK,EAAQhC,EAAKkR,OAAOC,GAAiB,GAAG7O,IACxC,KACD,CAGH8O,EAAeX,GAIf,IAFA,IAAIxO,EAAQgP,EAELhP,EAAQjC,EAAKkR,OAAOxT,QACzBsC,EAAKkR,OAAOjP,GAAO,GAAGK,IAAMvE,OAAO2M,OAAO,CAAC,EAAG1I,GAC9CC,IAWF,OARA+K,GACEhN,EAAKkR,OACLC,EAAkB,EAClB,EACAnR,EAAKkR,OAAOtO,MAAMqO,IAGpBjR,EAAKkR,OAAOxT,OAASuE,EACd6O,EAAmBvM,EAC3B,CAED,OAAOlC,EAAMkC,EACd,CAGD,SAASuM,EAAmBvM,GAM1B,GAAIkM,IAAc1N,EAAMrF,OAAQ,CAI9B,IAAK4S,EACH,OAAOe,EAAkB9M,GAK3B,GAAI+L,EAAUgB,kBAAoBhB,EAAUgB,iBAAiBC,SAC3D,OAAOC,EAAUjN,GAKnBvE,EAAKyR,UAAYlS,QACf+Q,EAAUgB,mBAAqBhB,EAAUoB,8BAE5C,CAGD,OADA1R,EAAK2Q,eAAiB,CAAC,EAChBzB,EAAQyC,MACbC,GACAC,EACAC,EAHK5C,CAIL3K,EACH,CAGD,SAASsN,EAAqBtN,GAG5B,OAFI+L,GAAWU,IACfI,EAAeX,GACRY,EAAkB9M,EAC1B,CAGD,SAASuN,EAAsBvN,GAG7B,OAFAvE,EAAKgQ,OAAO+B,KAAK/R,EAAKgS,MAAM9P,MAAQuO,IAAc1N,EAAMrF,OACxD8S,EAAkBxQ,EAAKgS,MAAMC,OACtBT,EAAUjN,EAClB,CAGD,SAAS8M,EAAkB9M,GAGzB,OADAvE,EAAK2Q,eAAiB,CAAC,EAChBzB,EAAQa,QACb6B,GACAM,EACAV,EAHKtC,CAIL3K,EACH,CAGD,SAAS2N,EAAkB3N,GAIzB,OAHAkM,IACA1N,EAAM9B,KAAK,CAACjB,EAAKsR,iBAAkBtR,EAAK2Q,iBAEjCU,EAAkB9M,EAC1B,CAGD,SAASiN,EAAUjN,GACjB,OAAa,OAATA,GACE+L,GAAWU,IACfI,EAAe,QACflC,EAAQO,QAAQlL,KAIlB+L,EAAYA,GAAatQ,EAAKgQ,OAAOmC,KAAKnS,EAAKgS,OAC/C9C,EAAQK,MAAM,YAAa,CACzBa,YAAa,OACbP,SAAUU,EACV6B,WAAY9B,IAEP+B,EAAa9N,GACrB,CAGD,SAAS8N,EAAa9N,GACpB,OAAa,OAATA,GACF+N,EAAapD,EAAQQ,KAAK,cAAc,GACxC0B,EAAe,QACflC,EAAQO,QAAQlL,IAIdmK,GAAmBnK,IACrB2K,EAAQO,QAAQlL,GAChB+N,EAAapD,EAAQQ,KAAK,cAE1Be,EAAY,EACZzQ,EAAKyR,eAAYnQ,EACVe,IAGT6M,EAAQO,QAAQlL,GACT8N,EACR,CAOD,SAASC,EAAanC,EAAOoC,GAC3B,IAAMC,EAASxS,EAAKyS,YAAYtC,GAwChC,GAvCIoC,GAAKC,EAAOvR,KAAK,MACrBkP,EAAMN,SAAWU,EACbA,IAAYA,EAAWpH,KAAOgH,GAClCI,EAAaJ,EACbG,EAAUoC,WAAWvC,EAAM9N,OAC3BiO,EAAUqC,MAAMH,GAkCZxS,EAAKgQ,OAAO+B,KAAK5B,EAAM9N,MAAMH,MAAO,CAGtC,IAFA,IAAID,EAAQqO,EAAUY,OAAOxT,OAEtBuE,KACL,GAEEqO,EAAUY,OAAOjP,GAAO,GAAGI,MAAM4P,OAASzB,KACxCF,EAAUY,OAAOjP,GAAO,GAAGK,KAC3BgO,EAAUY,OAAOjP,GAAO,GAAGK,IAAI2P,OAASzB,GAI1C,OAcJ,IATA,IAIIoC,EAGA5Q,EAPEiP,EAAmBjR,EAAKkR,OAAOxT,OACjCyT,EAAkBF,EAQfE,KACL,GACsC,SAApCnR,EAAKkR,OAAOC,GAAiB,IACY,cAAzCnR,EAAKkR,OAAOC,GAAiB,GAAG3E,KAChC,CACA,GAAIoG,EAAM,CACR5Q,EAAQhC,EAAKkR,OAAOC,GAAiB,GAAG7O,IACxC,KACD,CAEDsQ,GAAO,CACR,CAOH,IAJAxB,EAAeX,GAEfxO,EAAQgP,EAEDhP,EAAQjC,EAAKkR,OAAOxT,QACzBsC,EAAKkR,OAAOjP,GAAO,GAAGK,IAAMvE,OAAO2M,OAAO,CAAC,EAAG1I,GAC9CC,IAGF+K,GACEhN,EAAKkR,OACLC,EAAkB,EAClB,EACAnR,EAAKkR,OAAOtO,MAAMqO,IAGpBjR,EAAKkR,OAAOxT,OAASuE,CACtB,CACF,CAMD,SAASmP,EAAe9B,GAGtB,IAFA,IAAIrN,EAAQc,EAAMrF,OAEXuE,KAAUqN,GAAM,CACrB,IAAMxE,EAAQ/H,EAAMd,GACpBjC,EAAK2Q,eAAiB7F,EAAM,GAC5BA,EAAM,GAAG4E,KAAKjQ,KAAKO,EAAMkP,EAC1B,CAEDnM,EAAMrF,OAAS4R,CAChB,CAED,SAAS0B,IACPV,EAAUqC,MAAM,CAAC,OACjBpC,OAAajP,EACbgP,OAAYhP,EACZtB,EAAK2Q,eAAeI,gBAAazP,CAClC,CACF,GAjVKsQ,GAAqB,CACzBhC,SAmVF,SAA2BV,EAASC,EAAI0D,GACtC,OAAO5D,GACLC,EACAA,EAAQa,QAAQtP,KAAKuP,OAAOlC,WAAWuC,SAAUlB,EAAI0D,GACrD,aACApS,KAAKuP,OAAOlC,WAAWgF,QAAQC,KAAKhM,SAAS,qBAAkBzF,EAAY,EAE9E,GC3WM,IAAM0R,GAAY,CACvBpD,SAKF,SAA2BV,EAASC,EAAI0D,GACtC,OAAO5D,GAAaC,GAGpB,SAAyB3K,GACvB,OAAgB,OAATA,GAAiBmK,GAAmBnK,GAAQ4K,EAAG5K,GAAQsO,EAAItO,EACnE,GAL6C,aAM/C,EAXC0O,SAAS,GCEJ,SAASC,GAAYhC,GA0B1B,IAxBA,IAIIiC,EAGAC,EAGAC,EAGAC,EAGApL,EAGAqL,EAGAC,EAtBEC,EAAQ,CAAC,EACXxR,GAAS,IAuBJA,EAAQiP,EAAOxT,QAAQ,CAC9B,KAAOuE,KAASwR,GACdxR,EAAQwR,EAAMxR,GAMhB,GAHAkR,EAAQjC,EAAOjP,GAIbA,GACkB,cAAlBkR,EAAM,GAAG3G,MACqB,mBAA9B0E,EAAOjP,EAAQ,GAAG,GAAGuK,QAGrB6G,EAAa,IADbE,EAAYJ,EAAM,GAAGf,WAAWlB,QAIPxT,QACW,oBAAlC6V,EAAUF,GAAY,GAAG7G,OAEzB6G,GAAc,GAIdA,EAAaE,EAAU7V,QACW,YAAlC6V,EAAUF,GAAY,GAAG7G,MAEzB,OAAS6G,EAAaE,EAAU7V,QACQ,YAAlC6V,EAAUF,GAAY,GAAG7G,MAIS,cAAlC+G,EAAUF,GAAY,GAAG7G,OAC3B+G,EAAUF,GAAY,GAAGK,6BAA8B,EACvDL,KAMR,GAAiB,UAAbF,EAAM,GACJA,EAAM,GAAG/C,cACXrS,OAAO2M,OAAO+I,EAAOE,GAAWzC,EAAQjP,IACxCA,EAAQwR,EAAMxR,GACduR,GAAO,QAGN,GAAIL,EAAM,GAAGS,WAAY,CAI5B,IAHAP,EAAapR,EACbmR,OAAY9R,EAEL+R,MAIoB,gBAHzBC,EAAapC,EAAOmC,IAGP,GAAG7G,MACS,oBAAvB8G,EAAW,GAAG9G,OAEQ,UAAlB8G,EAAW,KACTF,IACFlC,EAAOkC,GAAW,GAAG5G,KAAO,mBAG9B8G,EAAW,GAAG9G,KAAO,aACrB4G,EAAYC,GAOdD,IAEFD,EAAM,GAAG7Q,IAAMvE,OAAO2M,OAAO,CAAC,EAAGwG,EAAOkC,GAAW,GAAG/Q,QAEtD6F,EAAagJ,EAAOtO,MAAMwQ,EAAWnR,IAC1BqL,QAAQ6F,GACnBnG,GAAOkE,EAAQkC,EAAWnR,EAAQmR,EAAY,EAAGlL,GAEpD,CACF,CAED,OAAQsL,CACT,CASD,SAASG,GAAWzC,EAAQ2C,GA+B1B,IA9BA,IAiBIrB,EAGA3C,EApBEM,EAAQe,EAAO2C,GAAY,GAC3BC,EAAU5C,EAAO2C,GAAY,GAC/BE,EAAgBF,EAAa,EAG3BG,EAAiB,GACjBC,EACJ9D,EAAMiC,YAAc0B,EAAQ9D,OAAOG,EAAMC,aAAaD,EAAM9N,OACxD6R,EAAcD,EAAU/C,OAGxBuC,EAAQ,GAGRU,EAAO,CAAC,EAOVlS,GAAS,EAGTmS,EAAUjE,EACVkE,EAAS,EACThS,EAAQ,EACNiS,EAAS,CAACjS,GAGT+R,GAAS,CAEd,KAAOlD,IAAS6C,GAAe,KAAOK,IAItCJ,EAAe/S,KAAK8S,GAEfK,EAAQhC,aACXI,EAASsB,EAAQrB,YAAY2B,GAExBA,EAAQjL,MACXqJ,EAAOvR,KAAK,MAGV4O,GACFoE,EAAUvB,WAAW0B,EAAQ/R,OAG3B+R,EAAQV,8BACVO,EAAUM,oCAAqC,GAGjDN,EAAUtB,MAAMH,GAEZ4B,EAAQV,8BACVO,EAAUM,wCAAqCjT,IAInDuO,EAAWuE,EACXA,EAAUA,EAAQjL,IACnB,CAKD,IAFAiL,EAAUjE,IAEDlO,EAAQiS,EAAYxW,QAGC,SAA1BwW,EAAYjS,GAAO,IACW,UAA9BiS,EAAYjS,EAAQ,GAAG,IACvBiS,EAAYjS,GAAO,GAAGuK,OAAS0H,EAAYjS,EAAQ,GAAG,GAAGuK,MACzD0H,EAAYjS,GAAO,GAAGI,MAAMH,OAASgS,EAAYjS,GAAO,GAAGK,IAAIJ,OAE/DG,EAAQJ,EAAQ,EAChBqS,EAAOrT,KAAKoB,GAEZ+R,EAAQhC,gBAAa9Q,EACrB8S,EAAQvE,cAAWvO,EACnB8S,EAAUA,EAAQjL,MAmBtB,IAfA8K,EAAU/C,OAAS,GAIfkD,GAEFA,EAAQhC,gBAAa9Q,EACrB8S,EAAQvE,cAAWvO,GAEnBgT,EAAOpL,MAITjH,EAAQqS,EAAO5W,OAERuE,KAAS,CACd,IAAMW,EAAQsR,EAAYtR,MAAM0R,EAAOrS,GAAQqS,EAAOrS,EAAQ,IACxDI,EAAQ2R,EAAe9K,MAC7BuK,EAAMnG,QAAQ,CAACjL,EAAOA,EAAQO,EAAMlF,OAAS,IAC7CsP,GAAOkE,EAAQ7O,EAAO,EAAGO,EAC1B,CAID,IAFAX,GAAS,IAEAA,EAAQwR,EAAM/V,QACrByW,EAAKE,EAASZ,EAAMxR,GAAO,IAAMoS,EAASZ,EAAMxR,GAAO,GACvDoS,GAAUZ,EAAMxR,GAAO,GAAKwR,EAAMxR,GAAO,GAAK,EAGhD,OAAOkS,CACR,CCvOM,IAAMxE,GAAU,CACrBC,SAsBF,SAAyBV,EAASC,GAEhC,IAAIU,EACJ,OAGA,SAAetL,GAKb,OAJA2K,EAAQK,MAAM,WACdM,EAAWX,EAAQK,MAAM,eAAgB,CACvCa,YAAa,YAER3J,EAAKlC,EACb,EAGD,SAASkC,EAAKlC,GACZ,OAAa,OAATA,EACKiQ,EAAWjQ,GAGhBmK,GAAmBnK,GACd2K,EAAQyC,MACb8C,GACAC,EACAF,EAHKtF,CAIL3K,IAGJ2K,EAAQO,QAAQlL,GACTkC,EACR,CAGD,SAAS+N,EAAWjQ,GAGlB,OAFA2K,EAAQQ,KAAK,gBACbR,EAAQQ,KAAK,WACNP,EAAG5K,EACX,CAGD,SAASmQ,EAAgBnQ,GAQvB,OAPA2K,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,gBACbG,EAAS1G,KAAO+F,EAAQK,MAAM,eAAgB,CAC5Ca,YAAa,UACbP,SAAAA,IAEFA,EAAWA,EAAS1G,KACb1C,CACR,CACF,EAvECmF,QAeF,SAAwBsF,GAEtB,OADAgC,GAAYhC,GACLA,CACR,GAdKuD,GAAwB,CAC5B7E,SAqEF,SAA8BV,EAASC,EAAI0D,GACzC,IAAM7S,EAAOS,KACb,OAGA,SAAwB8D,GAKtB,OAJA2K,EAAQQ,KAAK,gBACbR,EAAQK,MAAM,cACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,cACNT,GAAaC,EAASyF,EAAU,aACxC,EAGD,SAASA,EAASpQ,GAChB,GAAa,OAATA,GAAiBmK,GAAmBnK,GACtC,OAAOsO,EAAItO,GAGb,IAAMqQ,EAAO5U,EAAKkR,OAAOlR,EAAKkR,OAAOxT,OAAS,GAE9C,OACGsC,EAAKgQ,OAAOlC,WAAWgF,QAAQC,KAAKhM,SAAS,iBAC9C6N,GACiB,eAAjBA,EAAK,GAAGpI,MACRoI,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAMlX,QAAU,EAEzCyR,EAAG5K,GAGL2K,EAAQuC,UAAUzR,EAAKgQ,OAAOlC,WAAWqE,KAAMU,EAAK1D,EAApDD,CAAwD3K,EAChE,CACF,EApGC0O,SAAS,GCbJ,IAAMd,GAAO,CAClBvC,SAIF,SAAwBV,GACtB,IAAMlP,EAAOS,KACPqU,EAAU5F,EAAQa,QAEtBiD,IAmBF,SAAuBzO,GACrB,GAAa,OAATA,EAEF,YADA2K,EAAQO,QAAQlL,GAQlB,OAJA2K,EAAQK,MAAM,mBACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,mBACb1P,EAAKsR,sBAAmBhQ,EACjBwT,CACR,GA5BC5F,EAAQa,QACNtP,KAAKuP,OAAOlC,WAAWiH,YACvBC,EACA/F,GACEC,EACAA,EAAQa,QACNtP,KAAKuP,OAAOlC,WAAWqE,KACvB6C,EACA9F,EAAQa,QAAQJ,GAASqF,IAE3B,gBAIN,OAAOF,EAiBP,SAASE,EAAezQ,GACtB,GAAa,OAATA,EASJ,OAJA2K,EAAQK,MAAM,cACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,cACb1P,EAAKsR,sBAAmBhQ,EACjBwT,EARL5F,EAAQO,QAAQlL,EASnB,CACF,GCxDM,IAAM0Q,GAAW,CACtBC,WAAYC,MAEDC,GAASC,GAAkB,UAC3BC,GAAOD,GAAkB,QAMtC,SAASA,GAAkBE,GACzB,MAAO,CACL3F,SAOF,SAAwBV,GACtB,IAAMlP,EAAOS,KACPqN,EAAarN,KAAKuP,OAAOlC,WAAWyH,GACpCD,EAAOpG,EAAQa,QAAQjC,EAAYzL,EAAOmT,GAChD,OAAOnT,EAGP,SAASA,EAAMkC,GACb,OAAOkR,EAAQlR,GAAQ+Q,EAAK/Q,GAAQiR,EAAQjR,EAC7C,CAGD,SAASiR,EAAQjR,GACf,GAAa,OAATA,EAOJ,OAFA2K,EAAQK,MAAM,QACdL,EAAQO,QAAQlL,GACTkC,EANLyI,EAAQO,QAAQlL,EAOnB,CAGD,SAASkC,EAAKlC,GACZ,OAAIkR,EAAQlR,IACV2K,EAAQQ,KAAK,QACN4F,EAAK/Q,KAGd2K,EAAQO,QAAQlL,GACTkC,EACR,CAMD,SAASgP,EAAQlR,GACf,GAAa,OAATA,EACF,OAAO,EAGT,IAAM0I,EAAOa,EAAWvJ,GACpBtC,GAAS,EAEb,GAAIgL,EACF,OAAShL,EAAQgL,EAAKvP,QAAQ,CAC5B,IAAMgT,EAAOzD,EAAKhL,GAElB,IAAKyO,EAAKb,UAAYa,EAAKb,SAASpQ,KAAKO,EAAMA,EAAK6P,UAClD,OAAO,CAEV,CAGH,OAAO,CACR,CACF,EAhECqF,WAAYC,GACA,SAAVI,EAAmBG,QAAyBpU,GAgEjD,CAMD,SAAS6T,GAAeQ,GACtB,OAGA,SAAwBzE,EAAQ4C,GAC9B,IAGIvE,EAHAtN,GAAS,EAMb,OAASA,GAASiP,EAAOxT,aACT4D,IAAViO,EACE2B,EAAOjP,IAAoC,SAA1BiP,EAAOjP,GAAO,GAAGuK,OACpC+C,EAAQtN,EACRA,KAEQiP,EAAOjP,IAAoC,SAA1BiP,EAAOjP,GAAO,GAAGuK,OAExCvK,IAAUsN,EAAQ,IACpB2B,EAAO3B,GAAO,GAAGjN,IAAM4O,EAAOjP,EAAQ,GAAG,GAAGK,IAC5C4O,EAAOlE,OAAOuC,EAAQ,EAAGtN,EAAQsN,EAAQ,GACzCtN,EAAQsN,EAAQ,GAGlBA,OAAQjO,GAIZ,OAAOqU,EAAgBA,EAAczE,EAAQ4C,GAAW5C,CACzD,CACF,CAaD,SAASwE,GAAuBxE,EAAQ4C,GAGtC,IAFA,IAAID,EAAa,IAERA,GAAc3C,EAAOxT,QAC5B,IACGmW,IAAe3C,EAAOxT,QACU,eAA/BwT,EAAO2C,GAAY,GAAGrH,OACW,SAAnC0E,EAAO2C,EAAa,GAAG,GAAGrH,KAC1B,CAUA,IATA,IAAM/F,EAAOyK,EAAO2C,EAAa,GAAG,GAC9B+B,EAAS9B,EAAQrB,YAAYhM,GAC/BxE,EAAQ2T,EAAOlY,OACfmY,GAAe,EACfvG,EAAO,EAGPwG,OAAI,EAED7T,KAAS,CACd,IAAM8T,EAAQH,EAAO3T,GAErB,GAAqB,kBAAV8T,EAAoB,CAG7B,IAFAF,EAAcE,EAAMrY,OAEyB,KAAtCqY,EAAMjS,WAAW+R,EAAc,IACpCvG,IACAuG,IAGF,GAAIA,EAAa,MACjBA,GAAe,CAChB,MACI,IAAe,IAAXE,EACPD,GAAO,EACPxG,SACK,IAAe,IAAXyG,EAEJ,CAEL9T,IACA,KACD,CACF,CAED,GAAIqN,EAAM,CACR,IAAMa,EAAQ,CACZ3D,KACEqH,IAAe3C,EAAOxT,QAAUoY,GAAQxG,EAAO,EAC3C,aACA,oBACNjN,MAAO,CACLH,KAAMuE,EAAKnE,IAAIJ,KACfC,OAAQsE,EAAKnE,IAAIH,OAASmN,EAC1B2C,OAAQxL,EAAKnE,IAAI2P,OAAS3C,EAC1B0G,OAAQvP,EAAKpE,MAAM2T,OAAS/T,EAC5BgU,aAAchU,EACV4T,EACApP,EAAKpE,MAAM4T,aAAeJ,GAEhCvT,IAAKvE,OAAO2M,OAAO,CAAC,EAAGjE,EAAKnE,MAE9BmE,EAAKnE,IAAMvE,OAAO2M,OAAO,CAAC,EAAGyF,EAAM9N,OAE/BoE,EAAKpE,MAAM4P,SAAWxL,EAAKnE,IAAI2P,OACjClU,OAAO2M,OAAOjE,EAAM0J,IAEpBe,EAAOlE,OACL6G,EACA,EACA,CAAC,QAAS1D,EAAO2D,GACjB,CAAC,OAAQ3D,EAAO2D,IAElBD,GAAc,EAEjB,CAEDA,GACD,CAGH,OAAO3C,CACR,CC3MM,SAASgE,GAAWpH,EAAYoD,EAAQ4C,GAK7C,IAHA,IAAM7L,EAAS,GACXhG,GAAS,IAEJA,EAAQ6L,EAAWpQ,QAAQ,CAClC,IAAMkO,EAAUkC,EAAW7L,GAAOiT,WAE9BtJ,IAAY3D,EAAOlB,SAAS6E,KAC9BsF,EAAStF,EAAQsF,EAAQ4C,GACzB7L,EAAOhH,KAAK2K,GAEf,CAED,OAAOsF,CACR,CCcM,SAASgF,GAAgBlG,EAAQmG,EAAY9I,GAElD,IAAIrL,EAAQjE,OAAO2M,OACjB2C,EACItP,OAAO2M,OAAO,CAAC,EAAG2C,GAClB,CACEnL,KAAM,EACNC,OAAQ,EACR8P,OAAQ,GAEd,CACE+D,OAAQ,EACRC,cAAe,IAKbG,EAAc,CAAC,EAGfC,EAAuB,GAGzBT,EAAS,GAGT7S,EAAQ,GAUNmM,EAAU,CACdO,QA2IF,SAAiBlL,GACXmK,GAAmBnK,IACrBvC,EAAME,OACNF,EAAMG,OAAS,EACfH,EAAMiQ,SAAoB,IAAV1N,EAAc,EAAI,EAClC+R,MACmB,IAAV/R,IACTvC,EAAMG,SACNH,EAAMiQ,UAGJjQ,EAAMiU,aAAe,EACvBjU,EAAMgU,UAENhU,EAAMiU,eAIFjU,EAAMiU,eAAiBL,EAAO5T,EAAMgU,QAAQtY,SAC9CsE,EAAMiU,cAAgB,EACtBjU,EAAMgU,WAIVlC,EAAQjE,SAAWtL,GAER,CACZ,EArKCgL,MAwKF,SAAe/C,EAAM+J,GAGnB,IAAMpG,EAAQoG,GAAU,CAAC,EAKzB,OAJApG,EAAM3D,KAAOA,EACb2D,EAAM9N,MAAQ2P,IACd8B,EAAQ5C,OAAOjQ,KAAK,CAAC,QAASkP,EAAO2D,IACrC/Q,EAAM9B,KAAKkP,GACJA,CACR,EAhLCT,KAmLF,SAAclD,GACZ,IAAM2D,EAAQpN,EAAMmG,MAGpB,OAFAiH,EAAM7N,IAAM0P,IACZ8B,EAAQ5C,OAAOjQ,KAAK,CAAC,OAAQkP,EAAO2D,IAC7B3D,CACR,EAvLCJ,QAASyG,GA8LX,SAA+BpX,EAAWqX,GACxCC,EAAUtX,EAAWqX,EAAKpJ,KAC3B,IA/LCsE,MAAO6E,EAAiBG,GACxBlF,UAAW+E,EAAiBG,EAAmB,CAC7ClF,WAAW,KASTqC,EAAU,CACdjE,SAAU,KACVtL,KAAM,KACNoM,eAAgB,CAAC,EACjBO,OAAQ,GACRlB,OAAAA,EACAyC,YAAAA,EACAoC,eA6CF,SAAwB1E,EAAOyG,GAC7B,OAsYJ,SAAyBhB,EAAQgB,GAC/B,IAMIC,EANA5U,GAAS,EAGP3B,EAAS,GAKf,OAAS2B,EAAQ2T,EAAOlY,QAAQ,CAC9B,IAAMqY,EAAQH,EAAO3T,GAGjBtD,OAAK,EAET,GAAqB,kBAAVoX,EACTpX,EAAQoX,OAER,OAAQA,GACN,KAAM,EACJpX,EAAQ,KACR,MAGF,KAAM,EACJA,EAAQ,KACR,MAGF,KAAM,EACJA,EAAQ,OACR,MAGF,KAAM,EACJA,EAAQiY,EAAa,IAAM,KAC3B,MAGF,KAAM,EACJ,IAAKA,GAAcC,EAAO,SAC1BlY,EAAQ,IACR,MAGF,QAEEA,EAAQ2M,OAAO0D,aAAa+G,GAIlCc,GAAmB,IAAXd,EACRzV,EAAOW,KAAKtC,EACb,CAED,OAAO2B,EAAOkE,KAAK,GACpB,CA9bUsS,CAAgBrE,EAAYtC,GAAQyG,EAC5C,EA9CC5E,IAAAA,EACAU,WA0DF,SAAoB/T,GAClByX,EAAYzX,EAAMuD,MAAQvD,EAAMwD,OAChCmU,GACD,EA5DC3D,MAwBF,SAAe/P,GAIb,GAHAgT,EAAS3U,GAAK2U,EAAQhT,GACtBmU,IAEkC,OAA9BnB,EAAOA,EAAOlY,OAAS,GACzB,MAAO,GAMT,OAHAgZ,EAAUP,EAAY,GAEtBrC,EAAQ5C,OAASgE,GAAWmB,EAAsBvC,EAAQ5C,OAAQ4C,GAC3DA,EAAQ5C,MAChB,GA5BG8F,EAAQb,EAAWvG,SAASnQ,KAAKqU,EAAS5E,GAa9C,OAJIiH,EAAWjB,YACbmB,EAAqBpV,KAAKkV,GAGrBrC,EA0BP,SAASrB,EAAYtC,GACnB,OA6VJ,SAAqByF,EAAQzF,GAC3B,IAMI8G,EANEC,EAAa/G,EAAM9N,MAAM2T,OACzBmB,EAAmBhH,EAAM9N,MAAM4T,aAC/BmB,EAAWjH,EAAM7N,IAAI0T,OACrBqB,EAAiBlH,EAAM7N,IAAI2T,aAK7BiB,IAAeE,EAEjBH,EAAO,CAACrB,EAAOsB,GAAYtU,MAAMuU,EAAkBE,KAEnDJ,EAAOrB,EAAOhT,MAAMsU,EAAYE,GAE5BD,GAAoB,IAEtBF,EAAK,GAAKA,EAAK,GAAGrU,MAAMuU,IAGtBE,EAAiB,GAEnBJ,EAAKhW,KAAK2U,EAAOwB,GAAUxU,MAAM,EAAGyU,KAIxC,OAAOJ,CACR,CAxXUK,CAAY1B,EAAQzF,EAC5B,CAGD,SAAS6B,IACP,OAAOjU,OAAO2M,OAAO,CAAC,EAAG1I,EAC1B,CAqBD,SAAS+U,IAIP,IAFA,IAAIQ,EAEGvV,EAAMgU,OAASJ,EAAOlY,QAAQ,CACnC,IAAMqY,EAAQH,EAAO5T,EAAMgU,QAE3B,GAAqB,kBAAVD,EAOT,IANAwB,EAAavV,EAAMgU,OAEfhU,EAAMiU,aAAe,IACvBjU,EAAMiU,aAAe,GAIrBjU,EAAMgU,SAAWuB,GACjBvV,EAAMiU,aAAeF,EAAMrY,QAE3B8Z,EAAGzB,EAAMjS,WAAW9B,EAAMiU,oBAG5BuB,EAAGzB,EAEN,CACF,CAQD,SAASyB,EAAGjT,QACCjD,EACIiD,EACfyS,EAAQA,EAAMzS,EACf,CAkED,SAASoS,EAAkBc,EAAGhB,GAC5BA,EAAKiB,SACN,CAQD,SAASlB,EAAiBmB,EAAUpB,GAClC,OAWA,SAAczI,EAAY8J,EAAaC,GAErC,IAAIC,EAGAC,EAGAzG,EAGAmF,EACJ,OAAOnM,MAAMC,QAAQuD,GAEjBkK,EAAuBlK,GACvB,aAAcA,EACdkK,EAAuB,CAAClK,IAS5B,SAA+BjH,GAC7B,OAAOxE,EAGP,SAASA,EAAMkC,GACb,IAAM0T,EAAe,OAAT1T,GAAiBsC,EAAItC,GAC3BuI,EAAe,OAATvI,GAAiBsC,EAAIkM,KAQjC,OAAOiF,EAPM,GAAH,eAIJ1N,MAAMC,QAAQ0N,GAAOA,EAAMA,EAAM,CAACA,GAAO,KAJrC,OAKJ3N,MAAMC,QAAQuC,GAAOA,EAAMA,EAAM,CAACA,GAAO,KAExCkL,CAA6BzT,EACrC,CACF,CAxBG2T,CAAsBpK,GAgC1B,SAASkK,EAAuB/K,GAI9B,OAHA6K,EAAmB7K,EACnB8K,EAAiB,EAEG,IAAhB9K,EAAKvP,OACAma,EAGFM,EAAgBlL,EAAK8K,GAC7B,CAQD,SAASI,EAAgB/Y,GACvB,OAGA,SAAemF,GAKbkS,EA4ER,WACE,IAAM2B,EAAapG,IACbqG,EAAgBvE,EAAQjE,SACxByI,EAAwBxE,EAAQxC,iBAChCiH,EAAmBzE,EAAQ5C,OAAOxT,OAClC8a,EAAalO,MAAM+C,KAAKtK,GAC9B,MAAO,CACL2U,QAAAA,EACArK,KAAMkL,GAQR,SAASb,IACP1V,EAAQoW,EACRtE,EAAQjE,SAAWwI,EACnBvE,EAAQxC,iBAAmBgH,EAC3BxE,EAAQ5C,OAAOxT,OAAS6a,EACxBxV,EAAQyV,EACRlC,GACD,CACF,CApGcmC,GACPnH,EAAmBlS,EAEdA,EAAU6T,UACba,EAAQxC,iBAAmBlS,GAG7B,GACEA,EAAUyD,MACViR,EAAQ9D,OAAOlC,WAAWgF,QAAQC,KAAKhM,SAAS3H,EAAUyD,MAE1D,OAAOgQ,EAAItO,GAGb,OAAOnF,EAAUwQ,SAASnQ,KAIxB8W,EAASxY,OAAO2M,OAAO3M,OAAOU,OAAOqV,GAAUyC,GAAUzC,EACzD5E,EACAC,EACA0D,EAPKzT,CAQLmF,EACH,CACF,CAGD,SAAS4K,EAAG5K,GAGV,OAFW,EACXoT,EAASrG,EAAkBmF,GACpBmB,CACR,CAGD,SAAS/E,EAAItO,GAIX,OAHW,EACXkS,EAAKiB,YAECK,EAAiBD,EAAiBpa,OAC/Bya,EAAgBL,EAAiBC,IAGnCF,CACR,CACF,CACF,CAOD,SAASnB,EAAUtX,EAAWiO,GACxBjO,EAAU8V,aAAemB,EAAqBtP,SAAS3H,IACzDiX,EAAqBpV,KAAK7B,GAGxBA,EAAUwM,SACZoB,GACE8G,EAAQ5C,OACR7D,EACAyG,EAAQ5C,OAAOxT,OAAS2P,EACxBjO,EAAUwM,QAAQkI,EAAQ5C,OAAOtO,MAAMyK,GAAOyG,IAI9C1U,EAAUsZ,YACZ5E,EAAQ5C,OAAS9R,EAAUsZ,UAAU5E,EAAQ5C,OAAQ4C,GAExD,CAuCD,SAASwC,IACHtU,EAAME,QAAQkU,GAAepU,EAAMG,OAAS,IAC9CH,EAAMG,OAASiU,EAAYpU,EAAME,MACjCF,EAAMiQ,QAAUmE,EAAYpU,EAAME,MAAQ,EAE7C,CACF,gBCneYyW,GAAgB,CAC3B9V,KAAM,gBACN+M,SAIF,SAA+BV,EAASC,EAAI0D,GAC1C,IAGI+F,EAHAtJ,EAAO,EAIX,OAGA,SAAe/K,GAGb,OAFA2K,EAAQK,MAAM,iBACdqJ,EAASrU,EACFkR,EAAQlR,EAChB,EAGD,SAASkR,EAAQlR,GACf,OAAIA,IAASqU,GACX1J,EAAQK,MAAM,yBACPsJ,EAAStU,IAGdoK,GAAcpK,GACT0K,GAAaC,EAASuG,EAAS,aAA/BxG,CAA6C1K,GAGlD+K,EAAO,GAAe,OAAT/K,IAAkBmK,GAAmBnK,GAC7CsO,EAAItO,IAGb2K,EAAQQ,KAAK,iBACNP,EAAG5K,GACX,CAGD,SAASsU,EAAStU,GAChB,OAAIA,IAASqU,GACX1J,EAAQO,QAAQlL,GAChB+K,IACOuJ,IAGT3J,EAAQQ,KAAK,yBACN+F,EAAQlR,GAChB,CACF,GCzCM,IAAM0I,GAAO,CAClBpK,KAAM,OACN+M,SAuBF,SAA2BV,EAASC,EAAI0D,GACtC,IAAM7S,EAAOS,KACPmU,EAAO5U,EAAKkR,OAAOlR,EAAKkR,OAAOxT,OAAS,GAC1Cob,EACFlE,GAAyB,eAAjBA,EAAK,GAAGpI,KACZoI,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAMlX,OACtC,EACF4R,EAAO,EACX,OAGA,SAAe/K,GACb,IAAMwU,EACJ/Y,EAAK2Q,eAAenE,OACV,KAATjI,GAAwB,KAATA,GAAwB,KAATA,EAC3B,gBACA,eAEN,GACW,kBAATwU,GACK/Y,EAAK2Q,eAAeiI,QAAUrU,IAASvE,EAAK2Q,eAAeiI,OAC5DzK,GAAW5J,GACf,CAQA,GAPKvE,EAAK2Q,eAAenE,OACvBxM,EAAK2Q,eAAenE,KAAOuM,EAC3B7J,EAAQK,MAAMwJ,EAAM,CAClBnF,YAAY,KAIH,kBAATmF,EAEF,OADA7J,EAAQK,MAAM,kBACE,KAAThL,GAAwB,KAATA,EAClB2K,EAAQyC,MAAMgH,GAAe9F,EAAKmG,EAAlC9J,CAA4C3K,GAC5CyU,EAASzU,GAGf,IAAKvE,EAAKyR,WAAsB,KAATlN,EAGrB,OAFA2K,EAAQK,MAAM,kBACdL,EAAQK,MAAM,iBACP0J,EAAO1U,EAEjB,CAED,OAAOsO,EAAItO,EACZ,EAGD,SAAS0U,EAAO1U,GACd,OAAI4J,GAAW5J,MAAW+K,EAAO,IAC/BJ,EAAQO,QAAQlL,GACT0U,KAILjZ,EAAKyR,WAAanC,EAAO,KAC1BtP,EAAK2Q,eAAeiI,OACjBrU,IAASvE,EAAK2Q,eAAeiI,OACpB,KAATrU,GAAwB,KAATA,IAEnB2K,EAAQQ,KAAK,iBACNsJ,EAASzU,IAGXsO,EAAItO,EACZ,CAKD,SAASyU,EAASzU,GAKhB,OAJA2K,EAAQK,MAAM,kBACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,kBACb1P,EAAK2Q,eAAeiI,OAAS5Y,EAAK2Q,eAAeiI,QAAUrU,EACpD2K,EAAQyC,MACbqB,GACAhT,EAAKyR,UAAYoB,EAAMqG,EACvBhK,EAAQa,QACNoJ,GACAC,EACAC,GAGL,CAGD,SAASH,EAAQ3U,GAGf,OAFAvE,EAAK2Q,eAAe2I,kBAAmB,EACvCR,IACOM,EAAY7U,EACpB,CAGD,SAAS8U,EAAY9U,GACnB,OAAIoK,GAAcpK,IAChB2K,EAAQK,MAAM,4BACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,4BACN0J,GAGFvG,EAAItO,EACZ,CAGD,SAAS6U,EAAY7U,GAInB,OAHAvE,EAAK2Q,eAAerB,KAClBwJ,EACA9Y,EAAK6U,eAAe3F,EAAQQ,KAAK,mBAAmB,GAAMhS,OACrDyR,EAAG5K,EACX,CACF,EAtICqM,aAAc,CACZhB,SA2IJ,SAAkCV,EAASC,EAAI0D,GAC7C,IAAM7S,EAAOS,KAEb,OADAT,EAAK2Q,eAAeI,gBAAazP,EAC1B4N,EAAQyC,MAAMqB,GAAWkG,EAASK,GAGzC,SAASL,EAAQ3U,GAMf,OALAvE,EAAK2Q,eAAe6I,kBAClBxZ,EAAK2Q,eAAe6I,mBACpBxZ,EAAK2Q,eAAe2I,iBAGfrK,GACLC,EACAC,EACA,iBACAnP,EAAK2Q,eAAerB,KAAO,EAJtBL,CAKL1K,EACH,CAGD,SAASgV,EAAShV,GAChB,OAAIvE,EAAK2Q,eAAe6I,oBAAsB7K,GAAcpK,IAC1DvE,EAAK2Q,eAAe6I,uBAAoBlY,EACxCtB,EAAK2Q,eAAe2I,sBAAmBhY,EAChCmY,EAAiBlV,KAG1BvE,EAAK2Q,eAAe6I,uBAAoBlY,EACxCtB,EAAK2Q,eAAe2I,sBAAmBhY,EAChC4N,EAAQa,QAAQ2J,GAAiBvK,EAAIsK,EAArCvK,CAAuD3K,GAC/D,CAGD,SAASkV,EAAiBlV,GAKxB,OAHAvE,EAAK2Q,eAAeI,YAAa,EAEjC/Q,EAAKyR,eAAYnQ,EACV2N,GACLC,EACAA,EAAQa,QAAQ9C,GAAMkC,EAAI0D,GAC1B,aACA7S,EAAKgQ,OAAOlC,WAAWgF,QAAQC,KAAKhM,SAAS,qBACzCzF,EACA,EANC2N,CAOL1K,EACH,CACF,GAzLCmL,KAuNF,SAAyBR,GACvBA,EAAQQ,KAAKjP,KAAKkQ,eAAenE,KAClC,GArNK2M,GAAoC,CACxCvJ,SA0NF,SAA0CV,EAASC,EAAI0D,GACrD,IAAM7S,EAAOS,KACb,OAAOwO,GACLC,GASF,SAAqB3K,GACnB,IAAMqQ,EAAO5U,EAAKkR,OAAOlR,EAAKkR,OAAOxT,OAAS,GAC9C,OAAQiR,GAAcpK,IACpBqQ,GACiB,6BAAjBA,EAAK,GAAGpI,KACN2C,EAAG5K,GACHsO,EAAItO,EACT,GAdC,2BACAvE,EAAKgQ,OAAOlC,WAAWgF,QAAQC,KAAKhM,SAAS,qBACzCzF,EACA,EAYP,EA7OC2R,SAAS,GAILyG,GAAkB,CACtB9J,SAoLF,SAAwBV,EAASC,EAAI0D,GACnC,IAAM7S,EAAOS,KACb,OAAOwO,GACLC,GAOF,SAAqB3K,GACnB,IAAMqQ,EAAO5U,EAAKkR,OAAOlR,EAAKkR,OAAOxT,OAAS,GAC9C,OAAOkX,GACY,mBAAjBA,EAAK,GAAGpI,MACRoI,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAMlX,SAAWsC,EAAK2Q,eAAerB,KACnEH,EAAG5K,GACHsO,EAAItO,EACT,GAZC,iBACAvE,EAAK2Q,eAAerB,KAAO,EAY9B,EArMC2D,SAAS,GC3BJ,IAAM0G,GAAa,CACxB9W,KAAM,aACN+M,SAQF,SAAiCV,EAASC,EAAI0D,GAC5C,IAAM7S,EAAOS,KACb,OAGA,SAAe8D,GACb,GAAa,KAATA,EAAa,CACf,IAAMyS,EAAQhX,EAAK2Q,eAanB,OAXKqG,EAAM4C,OACT1K,EAAQK,MAAM,aAAc,CAC1BqE,YAAY,IAEdoD,EAAM4C,MAAO,GAGf1K,EAAQK,MAAM,oBACdL,EAAQK,MAAM,oBACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,oBACNmK,CACR,CAED,OAAOhH,EAAItO,EACZ,EAGD,SAASsV,EAAMtV,GACb,OAAIoK,GAAcpK,IAChB2K,EAAQK,MAAM,8BACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,8BACbR,EAAQQ,KAAK,oBACNP,IAGTD,EAAQQ,KAAK,oBACNP,EAAG5K,GACX,CACF,EA9CCqM,aAAc,CACZhB,SAgDJ,SAAwCV,EAASC,EAAI0D,GACnD,OAAO5D,GACLC,EACAA,EAAQa,QAAQ4J,GAAYxK,EAAI0D,GAChC,aACApS,KAAKuP,OAAOlC,WAAWgF,QAAQC,KAAKhM,SAAS,qBAAkBzF,EAAY,EAE9E,GArDCoO,KAwDF,SAAcR,GACZA,EAAQQ,KAAK,aACd,GCnDM,SAASoK,GACd5K,EACAC,EACA0D,EACArG,EACAuN,EACAC,EACAC,EACAC,EACA9K,GAEA,IAAMC,EAAQD,GAAOlF,OAAOC,kBACxBgQ,EAAU,EACd,OAGA,SAAe5V,GACb,GAAa,KAATA,EAMF,OALA2K,EAAQK,MAAM/C,GACd0C,EAAQK,MAAMwK,GACd7K,EAAQK,MAAMyK,GACd9K,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAKsK,GACNI,EAGT,GAAa,OAAT7V,GAA0B,KAATA,GAAeiK,GAAajK,GAC/C,OAAOsO,EAAItO,GASb,OANA2K,EAAQK,MAAM/C,GACd0C,EAAQK,MAAM0K,GACd/K,EAAQK,MAAM2K,GACdhL,EAAQK,MAAM,cAAe,CAC3Ba,YAAa,WAERiK,EAAe9V,EACvB,EAGD,SAAS6V,EAA0B7V,GACjC,OAAa,KAATA,GACF2K,EAAQK,MAAMyK,GACd9K,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAKsK,GACb9K,EAAQQ,KAAKqK,GACb7K,EAAQQ,KAAKlD,GACN2C,IAGTD,EAAQK,MAAM2K,GACdhL,EAAQK,MAAM,cAAe,CAC3Ba,YAAa,WAERkK,EAAoB/V,GAC5B,CAGD,SAAS+V,EAAoB/V,GAC3B,OAAa,KAATA,GACF2K,EAAQQ,KAAK,eACbR,EAAQQ,KAAKwK,GACNE,EAA0B7V,IAGtB,OAATA,GAA0B,KAATA,GAAemK,GAAmBnK,GAC9CsO,EAAItO,IAGb2K,EAAQO,QAAQlL,GACA,KAATA,EAAcgW,EAA4BD,EAClD,CAGD,SAASC,EAA0BhW,GACjC,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChC2K,EAAQO,QAAQlL,GACT+V,GAGFA,EAAoB/V,EAC5B,CAGD,SAAS8V,EAAe9V,GACtB,OAAa,KAATA,IACI4V,EAAU9K,EAAcwD,EAAItO,IAClC2K,EAAQO,QAAQlL,GACT8V,GAGI,KAAT9V,EACG4V,KAQLjL,EAAQO,QAAQlL,GACT8V,IARLnL,EAAQQ,KAAK,eACbR,EAAQQ,KAAKwK,GACbhL,EAAQQ,KAAKuK,GACb/K,EAAQQ,KAAKlD,GACN2C,EAAG5K,IAOD,OAATA,GAAiBkK,GAA0BlK,GACzC4V,EAAgBtH,EAAItO,IACxB2K,EAAQQ,KAAK,eACbR,EAAQQ,KAAKwK,GACbhL,EAAQQ,KAAKuK,GACb/K,EAAQQ,KAAKlD,GACN2C,EAAG5K,IAGRiK,GAAajK,GAAcsO,EAAItO,IACnC2K,EAAQO,QAAQlL,GACA,KAATA,EAAciW,EAAuBH,EAC7C,CAGD,SAASG,EAAqBjW,GAC5B,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChC2K,EAAQO,QAAQlL,GACT8V,GAGFA,EAAe9V,EACvB,CACF,CCpIM,SAASkW,GAAavL,EAASC,EAAI0D,EAAKrG,EAAMkO,EAAYR,GAC/D,IAIIzT,EAJEzG,EAAOS,KACT6O,EAAO,EAIX,OAGA,SAAe/K,GAMb,OALA2K,EAAQK,MAAM/C,GACd0C,EAAQK,MAAMmL,GACdxL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAKgL,GACbxL,EAAQK,MAAM2K,GACPzE,CACR,EAGD,SAASA,EAAQlR,GACf,OACW,OAATA,GACS,KAATA,GACU,KAATA,IAAgBkC,GAQP,KAATlC,IACE+K,GACD,2BAA4BtP,EAAKgQ,OAAOlC,YAC1CwB,EAAO,IAEAuD,EAAItO,GAGA,KAATA,GACF2K,EAAQQ,KAAKwK,GACbhL,EAAQK,MAAMmL,GACdxL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAKgL,GACbxL,EAAQQ,KAAKlD,GACN2C,GAGLT,GAAmBnK,IACrB2K,EAAQK,MAAM,cACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,cACN+F,IAGTvG,EAAQK,MAAM,cAAe,CAC3Ba,YAAa,WAERuK,EAAMpW,GACd,CAGD,SAASoW,EAAMpW,GACb,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACAmK,GAAmBnK,IACnB+K,IAAS,KAETJ,EAAQQ,KAAK,eACN+F,EAAQlR,KAGjB2K,EAAQO,QAAQlL,GAChBkC,EAAOA,IAASkI,GAAcpK,GACd,KAATA,EAAcqW,EAAcD,EACpC,CAGD,SAASC,EAAYrW,GACnB,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChC2K,EAAQO,QAAQlL,GAChB+K,IACOqL,GAGFA,EAAMpW,EACd,CACF,CCzFM,SAASsW,GAAa3L,EAASC,EAAI0D,EAAKrG,EAAMkO,EAAYR,GAE/D,IAAItB,EACJ,OAGA,SAAerU,GAMb,OALA2K,EAAQK,MAAM/C,GACd0C,EAAQK,MAAMmL,GACdxL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAKgL,GACb9B,EAAkB,KAATrU,EAAc,GAAKA,EACrBuW,CACR,EAGD,SAASA,EAAkBvW,GACzB,OAAIA,IAASqU,GACX1J,EAAQK,MAAMmL,GACdxL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAKgL,GACbxL,EAAQQ,KAAKlD,GACN2C,IAGTD,EAAQK,MAAM2K,GACPa,EAAaxW,GACrB,CAGD,SAASwW,EAAaxW,GACpB,OAAIA,IAASqU,GACX1J,EAAQQ,KAAKwK,GACNY,EAAkBlC,IAGd,OAATrU,EACKsO,EAAItO,GAGTmK,GAAmBnK,IACrB2K,EAAQK,MAAM,cACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,cACNT,GAAaC,EAAS6L,EAAc,gBAG7C7L,EAAQK,MAAM,cAAe,CAC3Ba,YAAa,WAER4K,EAAMzW,GACd,CAGD,SAASyW,EAAMzW,GACb,OAAIA,IAASqU,GAAmB,OAATrU,GAAiBmK,GAAmBnK,IACzD2K,EAAQQ,KAAK,eACNqL,EAAaxW,KAGtB2K,EAAQO,QAAQlL,GACA,KAATA,EAAc0W,EAAcD,EACpC,CAGD,SAASC,EAAY1W,GACnB,OAAIA,IAASqU,GAAmB,KAATrU,GACrB2K,EAAQO,QAAQlL,GACTyW,GAGFA,EAAMzW,EACd,CACF,CChFM,SAAS2W,GAAkBhM,EAASC,GAEzC,IAAIyD,EACJ,OAGA,SAASvQ,EAAMkC,GACb,GAAImK,GAAmBnK,GAKrB,OAJA2K,EAAQK,MAAM,cACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,cACbkD,GAAO,EACAvQ,EAGT,GAAIsM,GAAcpK,GAChB,OAAO0K,GACLC,EACA7M,EACAuQ,EAAO,aAAe,aAHjB3D,CAIL1K,GAGJ,OAAO4K,EAAG5K,EACX,CACF,CC9BM,SAAS4W,GAAoBxc,GAClC,OACEA,EACGyc,QAAQ,cAAe,KACvBA,QAAQ,SAAU,IAMlBC,cACAC,aAEN,CCFM,IAAMC,GAAa,CACxB1Y,KAAM,aACN+M,SAUF,SAA4BV,EAASC,EAAI0D,GACvC,IAGI2I,EAHExb,EAAOS,KAIb,OAGA,SAAe8D,GAEb,OADA2K,EAAQK,MAAM,cACPkL,GAAahb,KAClBO,EACAkP,EACAuM,EACA5I,EACA,kBACA,wBACA,wBAPK4H,CAQLlW,EACH,EAGD,SAASkX,EAAWlX,GAKlB,OAJAiX,EAAaL,GACXnb,EAAK6U,eAAe7U,EAAKkR,OAAOlR,EAAKkR,OAAOxT,OAAS,GAAG,IAAIkF,MAAM,GAAI,IAG3D,KAAT2B,GACF2K,EAAQK,MAAM,oBACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,oBAENwL,GACLhM,EACA4K,GACE5K,EACAA,EAAQa,QACN2L,GACAzM,GAAaC,EAAS2K,EAAO,cAC7B5K,GAAaC,EAAS2K,EAAO,eAE/BhH,EACA,wBACA,+BACA,qCACA,2BACA,iCAKCA,EAAItO,EACZ,CAGD,SAASsV,EAAMtV,GACb,OAAa,OAATA,GAAiBmK,GAAmBnK,IACtC2K,EAAQQ,KAAK,cAER1P,EAAKgQ,OAAO2L,QAAQ5U,SAASyU,IAChCxb,EAAKgQ,OAAO2L,QAAQ1a,KAAKua,GAGpBrM,EAAG5K,IAGLsO,EAAItO,EACZ,CACF,GA1EKmX,GAAiB,CACrB9L,SA4EF,SAAuBV,EAASC,EAAI0D,GAClC,OAGA,SAAetO,GACb,OAAOkK,GAA0BlK,GAC7B2W,GAAkBhM,EAASlB,EAA3BkN,CAAmC3W,GACnCsO,EAAItO,EACT,EAGD,SAASyJ,EAAOzJ,GACd,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,EACzBsW,GACL3L,EACAD,GAAaC,EAAS2K,EAAO,cAC7BhH,EACA,kBACA,wBACA,wBANKgI,CAOLtW,GAGGsO,EAAItO,EACZ,CAGD,SAASsV,EAAMtV,GACb,OAAgB,OAATA,GAAiBmK,GAAmBnK,GAAQ4K,EAAG5K,GAAQsO,EAAItO,EACnE,CACF,EAzGC0O,SAAS,GCdJ,IAAM2I,GAAe,CAC1B/Y,KAAM,eACN+M,SAUF,SAA8BV,EAASC,EAAI0D,GACzC,IAAM7S,EAAOS,KACb,OAGA,SAAe8D,GAEb,OADA2K,EAAQK,MAAM,gBACPN,GAAaC,EAAS2M,EAAkB,aAAc,EAAtD5M,CAA6D1K,EACrE,EAGD,SAASsX,EAAiBtX,GACxB,IAAMqQ,EAAO5U,EAAKkR,OAAOlR,EAAKkR,OAAOxT,OAAS,GAC9C,OAAOkX,GACY,eAAjBA,EAAK,GAAGpI,MACRoI,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAMlX,QAAU,EAC9Coe,EAAYvX,GACZsO,EAAItO,EACT,CAGD,SAASuX,EAAYvX,GACnB,OAAa,OAATA,EACKsV,EAAMtV,GAGXmK,GAAmBnK,GACd2K,EAAQa,QAAQgM,GAAiBD,EAAajC,EAA9C3K,CAAqD3K,IAG9D2K,EAAQK,MAAM,iBACPI,EAAQpL,GAChB,CAGD,SAASoL,EAAQpL,GACf,OAAa,OAATA,GAAiBmK,GAAmBnK,IACtC2K,EAAQQ,KAAK,iBACNoM,EAAYvX,KAGrB2K,EAAQO,QAAQlL,GACToL,EACR,CAGD,SAASkK,EAAMtV,GAEb,OADA2K,EAAQQ,KAAK,gBACNP,EAAG5K,EACX,CACF,GAxDKwX,GAAkB,CACtBnM,SA0DF,SAAiCV,EAASC,EAAI0D,GAC5C,IAAM7S,EAAOS,KACb,OAAO4B,EAGP,SAASA,EAAMkC,GAEb,OAAIvE,EAAKgQ,OAAO+B,KAAK/R,EAAKgS,MAAM9P,MACvB2Q,EAAItO,GAGTmK,GAAmBnK,IACrB2K,EAAQK,MAAM,cACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,cACNrN,GAGF4M,GAAaC,EAAS4M,EAAa,aAAc,EAAjD7M,CAAwD1K,EAChE,CAGD,SAASuX,EAAYvX,GACnB,IAAMqQ,EAAO5U,EAAKkR,OAAOlR,EAAKkR,OAAOxT,OAAS,GAC9C,OAAOkX,GACY,eAAjBA,EAAK,GAAGpI,MACRoI,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAMlX,QAAU,EAC9CyR,EAAG5K,GACHmK,GAAmBnK,GACnBlC,EAAMkC,GACNsO,EAAItO,EACT,CACF,EAzFC0O,SAAS,GCHJ,IAAM+I,GAAa,CACxBnZ,KAAM,aACN+M,SA4DF,SAA4BV,EAASC,EAAI0D,GACvC,IAAM7S,EAAOS,KACT6O,EAAO,EACX,OAGA,SAAe/K,GAGb,OAFA2K,EAAQK,MAAM,cACdL,EAAQK,MAAM,sBACP0M,EAAgB1X,EACxB,EAGD,SAAS0X,EAAgB1X,GACvB,OAAa,KAATA,GAAe+K,IAAS,GAC1BJ,EAAQO,QAAQlL,GACT0X,GAGI,OAAT1X,GAAiBkK,GAA0BlK,IAC7C2K,EAAQQ,KAAK,sBACN1P,EAAKyR,UAAYtC,EAAG5K,GAAQ2X,EAAa3X,IAG3CsO,EAAItO,EACZ,CAGD,SAAS2X,EAAa3X,GACpB,OAAa,KAATA,GACF2K,EAAQK,MAAM,sBACPsJ,EAAStU,IAGL,OAATA,GAAiBmK,GAAmBnK,IACtC2K,EAAQQ,KAAK,cACNP,EAAG5K,IAGRoK,GAAcpK,GACT0K,GAAaC,EAASgN,EAAc,aAApCjN,CAAkD1K,IAG3D2K,EAAQK,MAAM,kBACP9I,EAAKlC,GACb,CAGD,SAASsU,EAAStU,GAChB,OAAa,KAATA,GACF2K,EAAQO,QAAQlL,GACTsU,IAGT3J,EAAQQ,KAAK,sBACNwM,EAAa3X,GACrB,CAGD,SAASkC,EAAKlC,GACZ,OAAa,OAATA,GAA0B,KAATA,GAAekK,GAA0BlK,IAC5D2K,EAAQQ,KAAK,kBACNwM,EAAa3X,KAGtB2K,EAAQO,QAAQlL,GACTkC,EACR,CACF,EA/HCmF,QAIF,SAA2BsF,EAAQ4C,GACjC,IAIInE,EAGA2F,EAPAd,EAAatD,EAAOxT,OAAS,EAC7BoS,EAAe,EAQkB,eAAjCoB,EAAOpB,GAAc,GAAGtD,OAC1BsD,GAAgB,GAIhB0E,EAAa,EAAI1E,GACc,eAA/BoB,EAAOsD,GAAY,GAAGhI,OAEtBgI,GAAc,GAIiB,uBAA/BtD,EAAOsD,GAAY,GAAGhI,OACrBsD,IAAiB0E,EAAa,GAC5BA,EAAa,EAAI1E,GACmB,eAAnCoB,EAAOsD,EAAa,GAAG,GAAGhI,QAE9BgI,GAAc1E,EAAe,IAAM0E,EAAa,EAAI,GAGlDA,EAAa1E,GAaf9C,GAAOkE,EAAQpB,EAAc0E,EAAa1E,EAAe,EAAG,CAC1D,CAAC,QAbHH,EAAU,CACRnD,KAAM,iBACNnK,MAAO6O,EAAOpB,GAAc,GAAGzN,MAC/BC,IAAK4O,EAAOsD,GAAY,GAAGlS,KAURwR,GACnB,CAAC,QATHwB,EAAO,CACL9I,KAAM,YACNnK,MAAO6O,EAAOpB,GAAc,GAAGzN,MAC/BC,IAAK4O,EAAOsD,GAAY,GAAGlS,IAE3B8N,YAAa,QAIG0D,GAChB,CAAC,OAAQwB,EAAMxB,GACf,CAAC,OAAQnE,EAASmE,KAItB,OAAO5C,CACR,GChEM,IAAMiL,GAAkB,CAC7BtZ,KAAM,kBACN+M,SA+DF,SAAiCV,EAASC,EAAI0D,GAC5C,IAII+F,EAGAwD,EAPEpc,EAAOS,KACTwB,EAAQjC,EAAKkR,OAAOxT,OAQxB,KAAOuE,KAGL,GACiC,eAA/BjC,EAAKkR,OAAOjP,GAAO,GAAGuK,MACS,eAA/BxM,EAAKkR,OAAOjP,GAAO,GAAGuK,MACS,YAA/BxM,EAAKkR,OAAOjP,GAAO,GAAGuK,KACtB,CACA4P,EAA2C,cAA/Bpc,EAAKkR,OAAOjP,GAAO,GAAGuK,KAClC,KACD,CAGH,OAGA,SAAejI,GACb,IAAKvE,EAAKgQ,OAAO+B,KAAK/R,EAAKgS,MAAM9P,QAAUlC,EAAKyR,WAAa2K,GAI3D,OAHAlN,EAAQK,MAAM,qBACdL,EAAQK,MAAM,6BACdqJ,EAASrU,EACF8X,EAAgB9X,GAGzB,OAAOsO,EAAItO,EACZ,EAGD,SAAS8X,EAAgB9X,GACvB,OAAIA,IAASqU,GACX1J,EAAQO,QAAQlL,GACT8X,IAGTnN,EAAQQ,KAAK,6BACNT,GAAaC,EAASoN,EAAoB,aAA1CrN,CAAwD1K,GAChE,CAGD,SAAS+X,EAAmB/X,GAC1B,OAAa,OAATA,GAAiBmK,GAAmBnK,IACtC2K,EAAQQ,KAAK,qBACNP,EAAG5K,IAGLsO,EAAItO,EACZ,CACF,EAvHCmU,UAIF,SAAkCxH,EAAQ4C,GACxC,IAGInE,EAGA2F,EAGAiG,EATAtZ,EAAQiP,EAAOxT,OAYnB,KAAOuE,KACL,GAAyB,UAArBiP,EAAOjP,GAAO,GAAgB,CAChC,GAA8B,YAA1BiP,EAAOjP,GAAO,GAAGuK,KAAoB,CACvCmD,EAAU1N,EACV,KACD,CAE6B,cAA1BiP,EAAOjP,GAAO,GAAGuK,OACnB8I,EAAOrT,EAEV,KAE+B,YAA1BiP,EAAOjP,GAAO,GAAGuK,MAEnB0E,EAAOlE,OAAO/K,EAAO,GAGlBsZ,GAAwC,eAA1BrK,EAAOjP,GAAO,GAAGuK,OAClC+O,EAAatZ,GAKnB,IAAMsa,EAAU,CACd/P,KAAM,gBACNnK,MAAOtE,OAAO2M,OAAO,CAAC,EAAGwG,EAAOoE,GAAM,GAAGjT,OACzCC,IAAKvE,OAAO2M,OAAO,CAAC,EAAGwG,EAAOA,EAAOxT,OAAS,GAAG,GAAG4E,MAGtD4O,EAAOoE,GAAM,GAAG9I,KAAO,oBAGnB+O,GACFrK,EAAOlE,OAAOsI,EAAM,EAAG,CAAC,QAASiH,EAASzI,IAC1C5C,EAAOlE,OAAOuO,EAAa,EAAG,EAAG,CAAC,OAAQrK,EAAOvB,GAAS,GAAImE,IAC9D5C,EAAOvB,GAAS,GAAGrN,IAAMvE,OAAO2M,OAAO,CAAC,EAAGwG,EAAOqK,GAAY,GAAGjZ,MAEjE4O,EAAOvB,GAAS,GAAK4M,EAIvB,OADArL,EAAOjQ,KAAK,CAAC,OAAQsb,EAASzI,IACvB5C,CACR,GC/DM,IAAMsL,GAAiB,CAC5B,UACA,UACA,QACA,OACA,WACA,aACA,OACA,UACA,SACA,MACA,WACA,KACA,UACA,SACA,MACA,MACA,KACA,KACA,WACA,aACA,SACA,SACA,OACA,QACA,WACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,KACA,OACA,SACA,SACA,KACA,OACA,OACA,OACA,WACA,MACA,WACA,KACA,WACA,SACA,IACA,QACA,UACA,UACA,QACA,QACA,KACA,QACA,KACA,QACA,QACA,KACA,QACA,MAaWC,GAAe,CAAC,MAAO,SAAU,QAAS,YClE1CC,GAAW,CACtB7Z,KAAM,WACN+M,SAkCF,SAA0BV,EAASC,EAAI0D,GACrC,IAGIkG,EAGA4D,EAGAnW,EAGAvE,EAGA2W,EAfE5Y,EAAOS,KAgBb,OAGA,SAAe8D,GAIb,OAHA2K,EAAQK,MAAM,YACdL,EAAQK,MAAM,gBACdL,EAAQO,QAAQlL,GACTqV,CACR,EAGD,SAASA,EAAKrV,GACZ,OAAa,KAATA,GACF2K,EAAQO,QAAQlL,GACTqY,GAGI,KAATrY,GACF2K,EAAQO,QAAQlL,GACTsY,GAGI,KAATtY,GACF2K,EAAQO,QAAQlL,GAChBwU,EAAO,EAGA/Y,EAAKyR,UAAYtC,EAAK2N,GAG3B7O,GAAW1J,IACb2K,EAAQO,QAAQlL,GAChBiC,EAAS8E,OAAO0D,aAAazK,GAC7BoY,GAAW,EACJI,GAGFlK,EAAItO,EACZ,CAGD,SAASqY,EAAiBrY,GACxB,OAAa,KAATA,GACF2K,EAAQO,QAAQlL,GAChBwU,EAAO,EACAiE,GAGI,KAATzY,GACF2K,EAAQO,QAAQlL,GAChBwU,EAAO,EACPvS,EAAS,SACTvE,EAAQ,EACDgb,GAGLhP,GAAW1J,IACb2K,EAAQO,QAAQlL,GAChBwU,EAAO,EACA/Y,EAAKyR,UAAYtC,EAAK2N,GAGxBjK,EAAItO,EACZ,CAGD,SAASyY,EAAkBzY,GACzB,OAAa,KAATA,GACF2K,EAAQO,QAAQlL,GACTvE,EAAKyR,UAAYtC,EAAK2N,GAGxBjK,EAAItO,EACZ,CAGD,SAAS0Y,EAAgB1Y,GACvB,OAAIA,IAASiC,EAAO1C,WAAW7B,MAC7BiN,EAAQO,QAAQlL,GACTtC,IAAUuE,EAAO9I,OACpBsC,EAAKyR,UACHtC,EACAyB,EACFqM,GAGCpK,EAAItO,EACZ,CAGD,SAASsY,EAActY,GACrB,OAAI0J,GAAW1J,IACb2K,EAAQO,QAAQlL,GAChBiC,EAAS8E,OAAO0D,aAAazK,GACtBwY,GAGFlK,EAAItO,EACZ,CAGD,SAASwY,EAAQxY,GACf,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACAkK,GAA0BlK,GAGf,KAATA,GACAoY,GACAF,GAAa1V,SAASP,EAAO6U,gBAE7BtC,EAAO,EACA/Y,EAAKyR,UAAYtC,EAAG5K,GAAQqM,EAAarM,IAG9CiY,GAAezV,SAASP,EAAO6U,gBACjCtC,EAAO,EAEM,KAATxU,GACF2K,EAAQO,QAAQlL,GACT2Y,GAGFld,EAAKyR,UAAYtC,EAAG5K,GAAQqM,EAAarM,KAGlDwU,EAAO,EAEA/Y,EAAKyR,YAAczR,EAAKgQ,OAAO+B,KAAK/R,EAAKgS,MAAM9P,MAClD2Q,EAAItO,GACJoY,EACAQ,EAA4B5Y,GAC5B6Y,EAAwB7Y,IAGjB,KAATA,GAAe8J,GAAkB9J,IACnC2K,EAAQO,QAAQlL,GAChBiC,GAAU8E,OAAO0D,aAAazK,GACvBwY,GAGFlK,EAAItO,EACZ,CAGD,SAAS2Y,EAAiB3Y,GACxB,OAAa,KAATA,GACF2K,EAAQO,QAAQlL,GACTvE,EAAKyR,UAAYtC,EAAKyB,GAGxBiC,EAAItO,EACZ,CAGD,SAAS6Y,EAAwB7Y,GAC/B,OAAIoK,GAAcpK,IAChB2K,EAAQO,QAAQlL,GACT6Y,GAGFC,EAAY9Y,EACpB,CAGD,SAAS4Y,EAA4B5Y,GACnC,OAAa,KAATA,GACF2K,EAAQO,QAAQlL,GACT8Y,GAGI,KAAT9Y,GAAwB,KAATA,GAAe0J,GAAW1J,IAC3C2K,EAAQO,QAAQlL,GACT+Y,GAGL3O,GAAcpK,IAChB2K,EAAQO,QAAQlL,GACT4Y,GAGFE,EAAY9Y,EACpB,CAGD,SAAS+Y,EAAsB/Y,GAC7B,OACW,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACA8J,GAAkB9J,IAElB2K,EAAQO,QAAQlL,GACT+Y,GAGFC,EAA2BhZ,EACnC,CAGD,SAASgZ,EAA2BhZ,GAClC,OAAa,KAATA,GACF2K,EAAQO,QAAQlL,GACTiZ,GAGL7O,GAAcpK,IAChB2K,EAAQO,QAAQlL,GACTgZ,GAGFJ,EAA4B5Y,EACpC,CAGD,SAASiZ,EAA6BjZ,GACpC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEOsO,EAAItO,GAGA,KAATA,GAAwB,KAATA,GACjB2K,EAAQO,QAAQlL,GAChBqU,EAASrU,EACFkZ,GAGL9O,GAAcpK,IAChB2K,EAAQO,QAAQlL,GACTiZ,IAGT5E,EAAS,KACF8E,EAA+BnZ,GACvC,CAGD,SAASkZ,EAA6BlZ,GACpC,OAAa,OAATA,GAAiBmK,GAAmBnK,GAC/BsO,EAAItO,GAGTA,IAASqU,GACX1J,EAAQO,QAAQlL,GACToZ,IAGTzO,EAAQO,QAAQlL,GACTkZ,EACR,CAGD,SAASC,EAA+BnZ,GACtC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACAkK,GAA0BlK,GAEnBgZ,EAA2BhZ,IAGpC2K,EAAQO,QAAQlL,GACTmZ,EACR,CAGD,SAASC,EAAkCpZ,GACzC,OAAa,KAATA,GAAwB,KAATA,GAAeoK,GAAcpK,GACvC4Y,EAA4B5Y,GAG9BsO,EAAItO,EACZ,CAGD,SAAS8Y,EAAY9Y,GACnB,OAAa,KAATA,GACF2K,EAAQO,QAAQlL,GACTqZ,GAGF/K,EAAItO,EACZ,CAGD,SAASqZ,EAAcrZ,GACrB,OAAIoK,GAAcpK,IAChB2K,EAAQO,QAAQlL,GACTqZ,GAGO,OAATrZ,GAAiBmK,GAAmBnK,GACvCqM,EAAarM,GACbsO,EAAItO,EACT,CAGD,SAASqM,EAAarM,GACpB,OAAa,KAATA,GAAwB,IAATwU,GACjB7J,EAAQO,QAAQlL,GACTsZ,GAGI,KAATtZ,GAAwB,IAATwU,GACjB7J,EAAQO,QAAQlL,GACTuZ,GAGI,KAATvZ,GAAwB,IAATwU,GACjB7J,EAAQO,QAAQlL,GACTwZ,GAGI,KAATxZ,GAAwB,IAATwU,GACjB7J,EAAQO,QAAQlL,GACTuY,GAGI,KAATvY,GAAwB,IAATwU,GACjB7J,EAAQO,QAAQlL,GACTyZ,IAGLtP,GAAmBnK,IAAmB,IAATwU,GAAuB,IAATA,EAQlC,OAATxU,GAAiBmK,GAAmBnK,GAC/B0Z,EAAyB1Z,IAGlC2K,EAAQO,QAAQlL,GACTqM,GAZE1B,EAAQyC,MACbuM,GACAH,EACAE,EAHK/O,CAIL3K,EASL,CAGD,SAAS0Z,EAAyB1Z,GAEhC,OADA2K,EAAQQ,KAAK,gBACNyO,EAAkB5Z,EAC1B,CAGD,SAAS4Z,EAAkB5Z,GACzB,OAAa,OAATA,EACK6D,EAAK7D,GAGVmK,GAAmBnK,GACd2K,EAAQa,QACb,CACEH,SAAUwO,EACVnL,SAAS,GAEXkL,EACA/V,EANK8G,CAOL3K,IAGJ2K,EAAQK,MAAM,gBACPqB,EAAarM,GACrB,CAGD,SAAS6Z,EAAYlP,EAASC,EAAI0D,GAChC,OAGA,SAAetO,GAIb,OAHA2K,EAAQK,MAAM,cACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,cACNQ,CACR,EAGD,SAASA,EAAU3L,GACjB,OAAOvE,EAAKgQ,OAAO+B,KAAK/R,EAAKgS,MAAM9P,MAAQ2Q,EAAItO,GAAQ4K,EAAG5K,EAC3D,CACF,CAGD,SAASsZ,EAA0BtZ,GACjC,OAAa,KAATA,GACF2K,EAAQO,QAAQlL,GACTuY,GAGFlM,EAAarM,EACrB,CAGD,SAASuZ,EAAuBvZ,GAC9B,OAAa,KAATA,GACF2K,EAAQO,QAAQlL,GAChBiC,EAAS,GACF6X,GAGFzN,EAAarM,EACrB,CAGD,SAAS8Z,EAAsB9Z,GAC7B,OAAa,KAATA,GAAekY,GAAa1V,SAASP,EAAO6U,gBAC9CnM,EAAQO,QAAQlL,GACTwZ,GAGL9P,GAAW1J,IAASiC,EAAO9I,OAAS,GACtCwR,EAAQO,QAAQlL,GAChBiC,GAAU8E,OAAO0D,aAAazK,GACvB8Z,GAGFzN,EAAarM,EACrB,CAGD,SAASyZ,EAAgCzZ,GACvC,OAAa,KAATA,GACF2K,EAAQO,QAAQlL,GACTuY,GAGFlM,EAAarM,EACrB,CAGD,SAASuY,EAA8BvY,GACrC,OAAa,KAATA,GACF2K,EAAQO,QAAQlL,GACTwZ,GAGI,KAATxZ,GAAwB,IAATwU,GACjB7J,EAAQO,QAAQlL,GACTuY,GAGFlM,EAAarM,EACrB,CAGD,SAASwZ,EAAkBxZ,GACzB,OAAa,OAATA,GAAiBmK,GAAmBnK,IACtC2K,EAAQQ,KAAK,gBACNtH,EAAK7D,KAGd2K,EAAQO,QAAQlL,GACTwZ,EACR,CAGD,SAAS3V,EAAK7D,GAEZ,OADA2K,EAAQQ,KAAK,YACNP,EAAG5K,EACX,CACF,EA7gBCmU,UAWF,SAA2BxH,GACzB,IAAIjP,EAAQiP,EAAOxT,OAEnB,KAAOuE,MACoB,UAArBiP,EAAOjP,GAAO,IAA4C,aAA1BiP,EAAOjP,GAAO,GAAGuK,QAKnDvK,EAAQ,GAAmC,eAA9BiP,EAAOjP,EAAQ,GAAG,GAAGuK,OAEpC0E,EAAOjP,GAAO,GAAGI,MAAQ6O,EAAOjP,EAAQ,GAAG,GAAGI,MAE9C6O,EAAOjP,EAAQ,GAAG,GAAGI,MAAQ6O,EAAOjP,EAAQ,GAAG,GAAGI,MAElD6O,EAAOlE,OAAO/K,EAAQ,EAAG,IAG3B,OAAOiP,CACR,EA7BCK,UAAU,GAIN2M,GAAqB,CACzBtO,SA0gBF,SAA2BV,EAASC,EAAI0D,GACtC,OAGA,SAAetO,GAKb,OAJA2K,EAAQQ,KAAK,gBACbR,EAAQK,MAAM,mBACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,mBACNR,EAAQa,QAAQiD,GAAW7D,EAAI0D,EACvC,CACF,EAphBCI,SAAS,GCfJ,IAAMqL,GAAa,CACxBzb,KAAM,aACN+M,SAKF,SAA4BV,EAASC,EAAI0D,GACvC,IAqBI+F,EArBE5Y,EAAOS,KAGP8d,EAAwB,CAC5B3O,SAuKF,SAA8BV,EAASC,EAAI0D,GACzC,IAAIvD,EAAO,EACX,OAAOL,GACLC,EACAsP,EACA,aACA/d,KAAKuP,OAAOlC,WAAWgF,QAAQC,KAAKhM,SAAS,qBACzCzF,EACA,GAIN,SAASkd,EAAqBja,GAG5B,OAFA2K,EAAQK,MAAM,mBACdL,EAAQK,MAAM,2BACP8M,EAAgB9X,EACxB,CAGD,SAAS8X,EAAgB9X,GACvB,OAAIA,IAASqU,GACX1J,EAAQO,QAAQlL,GAChB+K,IACO+M,GAGL/M,EAAOmP,EAAiB5L,EAAItO,IAChC2K,EAAQQ,KAAK,2BACNT,GAAaC,EAASoN,EAAoB,aAA1CrN,CAAwD1K,GAChE,CAGD,SAAS+X,EAAmB/X,GAC1B,OAAa,OAATA,GAAiBmK,GAAmBnK,IACtC2K,EAAQQ,KAAK,mBACNP,EAAG5K,IAGLsO,EAAItO,EACZ,CACF,EA9MC0O,SAAS,GAILyL,EAAc,CAClB9O,SA8IF,SAA6BV,EAASC,EAAI0D,GACxC,IAAM7S,EAAOS,KACb,OAAO4B,EAGP,SAASA,EAAMkC,GAIb,OAHA2K,EAAQK,MAAM,cACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,cACNQ,CACR,CAGD,SAASA,EAAU3L,GACjB,OAAOvE,EAAKgQ,OAAO+B,KAAK/R,EAAKgS,MAAM9P,MAAQ2Q,EAAItO,GAAQ4K,EAAG5K,EAC3D,CACF,EA7JC0O,SAAS,GAEL2B,EAAOnU,KAAKyQ,OAAOzQ,KAAKyQ,OAAOxT,OAAS,GACxCihB,EACJ/J,GAAyB,eAAjBA,EAAK,GAAGpI,KACZoI,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAMlX,OACtC,EACF+gB,EAAW,EAIf,OAGA,SAAela,GAKb,OAJA2K,EAAQK,MAAM,cACdL,EAAQK,MAAM,mBACdL,EAAQK,MAAM,2BACdqJ,EAASrU,EACFqa,EAAara,EACrB,EAGD,SAASqa,EAAara,GACpB,OAAIA,IAASqU,GACX1J,EAAQO,QAAQlL,GAChBka,IACOG,IAGT1P,EAAQQ,KAAK,2BACN+O,EAAW,EACd5L,EAAItO,GACJ0K,GAAaC,EAAS2P,EAAU,aAAhC5P,CAA8C1K,GACnD,CAGD,SAASsa,EAASta,GAChB,OAAa,OAATA,GAAiBmK,GAAmBnK,GAC/Bua,EAAUva,IAGnB2K,EAAQK,MAAM,uBACdL,EAAQK,MAAM,cAAe,CAC3Ba,YAAa,WAERqG,EAAKlS,GACb,CAGD,SAASkS,EAAKlS,GACZ,OAAa,OAATA,GAAiBkK,GAA0BlK,IAC7C2K,EAAQQ,KAAK,eACbR,EAAQQ,KAAK,uBACNT,GAAaC,EAAS6P,EAAW,aAAjC9P,CAA+C1K,IAG3C,KAATA,GAAeA,IAASqU,EAAe/F,EAAItO,IAC/C2K,EAAQO,QAAQlL,GACTkS,EACR,CAGD,SAASsI,EAAUxa,GACjB,OAAa,OAATA,GAAiBmK,GAAmBnK,GAC/Bua,EAAUva,IAGnB2K,EAAQK,MAAM,uBACdL,EAAQK,MAAM,cAAe,CAC3Ba,YAAa,WAER4O,EAAKza,GACb,CAGD,SAASya,EAAKza,GACZ,OAAa,OAATA,GAAiBmK,GAAmBnK,IACtC2K,EAAQQ,KAAK,eACbR,EAAQQ,KAAK,uBACNoP,EAAUva,IAGN,KAATA,GAAeA,IAASqU,EAAe/F,EAAItO,IAC/C2K,EAAQO,QAAQlL,GACTya,EACR,CAGD,SAASF,EAAUva,GAEjB,OADA2K,EAAQQ,KAAK,mBACN1P,EAAKyR,UAAYtC,EAAG5K,GAAQuL,EAAavL,EACjD,CAGD,SAASuL,EAAavL,GACpB,OAAa,OAATA,EACKsV,EAAMtV,GAGXmK,GAAmBnK,GACd2K,EAAQa,QACb2O,EACAxP,EAAQa,QACNwO,EACA1E,EACA8E,EACI1P,GACEC,EACAY,EACA,aACA6O,EAAgB,GAElB7O,GAEN+J,EAdK3K,CAeL3K,IAGJ2K,EAAQK,MAAM,iBACPmF,EAAgBnQ,GACxB,CAGD,SAASmQ,EAAgBnQ,GACvB,OAAa,OAATA,GAAiBmK,GAAmBnK,IACtC2K,EAAQQ,KAAK,iBACNI,EAAavL,KAGtB2K,EAAQO,QAAQlL,GACTmQ,EACR,CAGD,SAASmF,EAAMtV,GAEb,OADA2K,EAAQQ,KAAK,cACNP,EAAG5K,EACX,CA+DF,EAzNCgN,UAAU,GCZZ,IAAM0N,GAAU5O,SAAS6O,cAAc,KAMhC,SAASC,GAA8BxgB,GAC5C,IAAMygB,EAAqB,IAAMzgB,EAAQ,IACzCsgB,GAAQI,UAAYD,EACpB,IAAME,EAAOL,GAAQM,YAUrB,OAAyC,KAArCD,EAAKxb,WAAWwb,EAAK5hB,OAAS,IAAiC,SAAViB,KAQlD2gB,IAASF,GAA6BE,EAC9C,CCjBM,IAAMF,GAAqB,CAChCvc,KAAM,qBACN+M,SAIF,SAAoCV,EAASC,EAAI0D,GAC/C,IAIIzD,EAGAL,EAPE/O,EAAOS,KACT6O,EAAO,EAOX,OAGA,SAAe/K,GAKb,OAJA2K,EAAQK,MAAM,sBACdL,EAAQK,MAAM,4BACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,4BACNkK,CACR,EAGD,SAASA,EAAKrV,GACZ,OAAa,KAATA,GACF2K,EAAQK,MAAM,mCACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,mCACN8P,IAGTtQ,EAAQK,MAAM,2BACdH,EAAM,GACNL,EAAOV,GACA1P,EAAM4F,GACd,CAGD,SAASib,EAAQjb,GACf,OAAa,KAATA,GAAwB,MAATA,GACjB2K,EAAQK,MAAM,uCACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,uCACbR,EAAQK,MAAM,2BACdH,EAAM,EACNL,EAAOX,GACAzP,IAGTuQ,EAAQK,MAAM,2BACdH,EAAM,EACNL,EAAOZ,GACAxP,EAAM4F,GACd,CAGD,SAAS5F,EAAM4F,GAEb,IAAI4L,EAEJ,OAAa,KAAT5L,GAAe+K,GACjBa,EAAQjB,EAAQQ,KAAK,2BAGnBX,IAASV,IACR8Q,GAA8Bnf,EAAK6U,eAAe1E,KAKrDjB,EAAQK,MAAM,4BACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,4BACbR,EAAQQ,KAAK,sBACNP,GAPE0D,EAAItO,IAUXwK,EAAKxK,IAAS+K,IAASF,GACzBF,EAAQO,QAAQlL,GACT5F,GAGFkU,EAAItO,EACZ,CACF,GC/FM,IAAMkb,GAAkB,CAC7B5c,KAAM,kBACN+M,SAIF,SAAiCV,EAASC,EAAI0D,GAC5C,OAGA,SAAetO,GAKb,OAJA2K,EAAQK,MAAM,mBACdL,EAAQK,MAAM,gBACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,gBACNkK,CACR,EAGD,SAASA,EAAKrV,GACZ,OAAI+J,GAAiB/J,IACnB2K,EAAQK,MAAM,wBACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,wBACbR,EAAQQ,KAAK,mBACNP,GAGF0D,EAAItO,EACZ,CACF,GC7BM,IAAMmb,GAAa,CACxB7c,KAAM,aACN+M,SAIF,SAA4BV,EAASC,GACnC,OAGA,SAAe5K,GAIb,OAHA2K,EAAQK,MAAM,cACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,cACNT,GAAaC,EAASC,EAAI,aAClC,CACF,GCNM,IAAMwQ,GAAW,CACtB9c,KAAM,WACN+M,SAgJF,SAA0BV,EAASC,EAAI0D,GACrC,IAII+M,EAGAjE,EAPE3b,EAAOS,KACTwB,EAAQjC,EAAKkR,OAAOxT,OAQxB,KAAOuE,KACL,IACkC,eAA/BjC,EAAKkR,OAAOjP,GAAO,GAAGuK,MACU,cAA/BxM,EAAKkR,OAAOjP,GAAO,GAAGuK,QACvBxM,EAAKkR,OAAOjP,GAAO,GAAG4d,UACvB,CACAD,EAAa5f,EAAKkR,OAAOjP,GAAO,GAChC,KACD,CAGH,OAGA,SAAesC,GACb,IAAKqb,EACH,OAAO/M,EAAItO,GAGb,OAAIqb,EAAWE,UAAkBC,EAASxb,IAC1CoX,EAAU3b,EAAKgQ,OAAO2L,QAAQ5U,SAC5BoU,GACEnb,EAAK6U,eAAe,CAClBxS,MAAOud,EAAWtd,IAClBA,IAAKtC,EAAKgS,UAIhB9C,EAAQK,MAAM,YACdL,EAAQK,MAAM,eACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,eACbR,EAAQQ,KAAK,YACNsQ,EACR,EAGD,SAASA,EAAczb,GAErB,OAAa,KAATA,EACK2K,EAAQa,QACbkQ,GACA9Q,EACAwM,EAAUxM,EAAK4Q,EAHV7Q,CAIL3K,GAGS,KAATA,EACK2K,EAAQa,QACbmQ,GACA/Q,EACAwM,EACIzM,EAAQa,QAAQoQ,GAA6BhR,EAAI4Q,GACjDA,EALC7Q,CAML3K,GAGGoX,EAAUxM,EAAG5K,GAAQwb,EAASxb,EACtC,CAGD,SAASwb,EAASxb,GAEhB,OADAqb,EAAWC,WAAY,EAChBhN,EAAItO,EACZ,CACF,EA1NCmU,UA6CF,SAA2BxH,EAAQ4C,GACjC,IAII3D,EAGAyJ,EAGAwG,EAGAC,EAbApe,EAAQiP,EAAOxT,OACfuU,EAAS,EAcb,KAAOhQ,KAGL,GAFAkO,EAAQe,EAAOjP,GAAO,GAElB2X,EAAM,CAER,GACiB,SAAfzJ,EAAM3D,MACU,cAAf2D,EAAM3D,MAAwB2D,EAAM2P,UAErC,MAIuB,UAArB5O,EAAOjP,GAAO,IAAiC,cAAfkO,EAAM3D,OACxC2D,EAAM2P,WAAY,EAErB,MAAM,GAAIM,GACT,GACuB,UAArBlP,EAAOjP,GAAO,KACE,eAAfkO,EAAM3D,MAAwC,cAAf2D,EAAM3D,QACrC2D,EAAM0P,YAEPjG,EAAO3X,EAEY,cAAfkO,EAAM3D,MAAsB,CAC9ByF,EAAS,EACT,KACD,MAEqB,aAAf9B,EAAM3D,OACf4T,EAAQne,GAIZ,IAAMqe,EAAQ,CACZ9T,KAA+B,cAAzB0E,EAAO0I,GAAM,GAAGpN,KAAuB,OAAS,QACtDnK,MAAOtE,OAAO2M,OAAO,CAAC,EAAGwG,EAAO0I,GAAM,GAAGvX,OACzCC,IAAKvE,OAAO2M,OAAO,CAAC,EAAGwG,EAAOA,EAAOxT,OAAS,GAAG,GAAG4E,MAEhDqY,EAAQ,CACZnO,KAAM,QACNnK,MAAOtE,OAAO2M,OAAO,CAAC,EAAGwG,EAAO0I,GAAM,GAAGvX,OACzCC,IAAKvE,OAAO2M,OAAO,CAAC,EAAGwG,EAAOkP,GAAO,GAAG9d,MAEpCgT,EAAO,CACX9I,KAAM,YACNnK,MAAOtE,OAAO2M,OAAO,CAAC,EAAGwG,EAAO0I,EAAO3H,EAAS,GAAG,GAAG3P,KACtDA,IAAKvE,OAAO2M,OAAO,CAAC,EAAGwG,EAAOkP,EAAQ,GAAG,GAAG/d,QA+B9C,OAxBAge,EAAQpf,GALRof,EAAQ,CACN,CAAC,QAASC,EAAOxM,GACjB,CAAC,QAAS6G,EAAO7G,IAGC5C,EAAOtO,MAAMgX,EAAO,EAAGA,EAAO3H,EAAS,IAE3DoO,EAAQpf,GAAKof,EAAO,CAAC,CAAC,QAAS/K,EAAMxB,KAErCuM,EAAQpf,GACNof,EACAnL,GACEpB,EAAQ9D,OAAOlC,WAAWyS,WAAWxN,KACrC7B,EAAOtO,MAAMgX,EAAO3H,EAAS,EAAGmO,EAAQ,GACxCtM,IAIJuM,EAAQpf,GAAKof,EAAO,CAClB,CAAC,OAAQ/K,EAAMxB,GACf5C,EAAOkP,EAAQ,GACflP,EAAOkP,EAAQ,GACf,CAAC,OAAQzF,EAAO7G,KAGlBuM,EAAQpf,GAAKof,EAAOnP,EAAOtO,MAAMwd,EAAQ,IAEzCC,EAAQpf,GAAKof,EAAO,CAAC,CAAC,OAAQC,EAAOxM,KACrC9G,GAAOkE,EAAQ0I,EAAM1I,EAAOxT,OAAQ2iB,GAC7BnP,CACR,EA3ICgE,WAmBF,SAA4BhE,GAC1B,IAGIf,EAHAlO,GAAS,EAKb,OAASA,EAAQiP,EAAOxT,QAIL,gBAHjByS,EAAQe,EAAOjP,GAAO,IAGduK,MACS,cAAf2D,EAAM3D,MACS,aAAf2D,EAAM3D,OAGN0E,EAAOlE,OAAO/K,EAAQ,EAAkB,eAAfkO,EAAM3D,KAAwB,EAAI,GAC3D2D,EAAM3D,KAAO,OACbvK,KAIJ,OAAOiP,CACR,GArCK+O,GAAoB,CACxBrQ,SAuNF,SAA0BV,EAASC,EAAI0D,GACrC,OAGA,SAAetO,GAKb,OAJA2K,EAAQK,MAAM,YACdL,EAAQK,MAAM,kBACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,kBACNwL,GAAkBhM,EAAS0K,EACnC,EAGD,SAASA,EAAKrV,GACZ,OAAa,KAATA,EACKjC,EAAIiC,GAGNuV,GACL5K,EACAsR,EACA3N,EACA,sBACA,6BACA,mCACA,yBACA,4BACA,GATKiH,CAULvV,EACH,CAGD,SAASic,EAAiBjc,GACxB,OAAOkK,GAA0BlK,GAC7B2W,GAAkBhM,EAASuR,EAA3BvF,CAAoC3W,GACpCjC,EAAIiC,EACT,CAGD,SAASkc,EAAQlc,GACf,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,EACzBsW,GACL3L,EACAgM,GAAkBhM,EAAS5M,GAC3BuQ,EACA,gBACA,sBACA,sBANKgI,CAOLtW,GAGGjC,EAAIiC,EACZ,CAGD,SAASjC,EAAIiC,GACX,OAAa,KAATA,GACF2K,EAAQK,MAAM,kBACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,kBACbR,EAAQQ,KAAK,YACNP,GAGF0D,EAAItO,EACZ,CACF,GArRK2b,GAAyB,CAC7BtQ,SAuRF,SAA+BV,EAASC,EAAI0D,GAC1C,IAAM7S,EAAOS,KACb,OAGA,SAAe8D,GACb,OAAOkW,GAAahb,KAClBO,EACAkP,EACAwR,EACA7N,EACA,YACA,kBACA,kBAPK4H,CAQLlW,EACH,EAGD,SAASmc,EAAWnc,GAClB,OAAOvE,EAAKgQ,OAAO2L,QAAQ5U,SACzBoU,GACEnb,EAAK6U,eAAe7U,EAAKkR,OAAOlR,EAAKkR,OAAOxT,OAAS,GAAG,IAAIkF,MAAM,GAAI,KAGtEuM,EAAG5K,GACHsO,EAAItO,EACT,CACF,GA9SK4b,GAA8B,CAClCvQ,SAgTF,SAAoCV,EAASC,EAAI0D,GAC/C,OAGA,SAAetO,GAKb,OAJA2K,EAAQK,MAAM,aACdL,EAAQK,MAAM,mBACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,mBACNkK,CACR,EAGD,SAASA,EAAKrV,GACZ,OAAa,KAATA,GACF2K,EAAQK,MAAM,mBACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,mBACbR,EAAQQ,KAAK,aACNP,GAGF0D,EAAItO,EACZ,CACF,GCtWM,IAAMoc,GAAkB,CAC7B9d,KAAM,kBACN+M,SAKF,SAAiCV,EAASC,EAAI0D,GAC5C,IAAM7S,EAAOS,KACb,OAGA,SAAe8D,GAKb,OAJA2K,EAAQK,MAAM,cACdL,EAAQK,MAAM,oBACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,oBACNkK,CACR,EAGD,SAASA,EAAKrV,GACZ,OAAa,KAATA,GACF2K,EAAQK,MAAM,eACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,eACbR,EAAQQ,KAAK,cACNmK,GAGFhH,EAAItO,EACZ,CAGD,SAASsV,EAAMtV,GAQb,OAAgB,KAATA,GAAe,2BAA4BvE,EAAKgQ,OAAOlC,WAC1D+E,EAAItO,GACJ4K,EAAG5K,EACR,CACF,EA3CC2Q,WAAYyK,GAASzK,YCUhB,SAAS0L,GAAkBrc,GAChC,OACW,OAATA,GACAkK,GAA0BlK,IAC1BqK,GAAkBrK,GAEX,EAGLsK,GAAmBtK,GACd,OADT,CAGD,CClBM,IAAMsc,GAAY,CACvBhe,KAAM,YACN+M,SAwKF,SAA2BV,EAASC,GAClC,IAKIyJ,EALEkI,EAAmBrgB,KAAKuP,OAAOlC,WAAWgT,iBAAiB/N,KAC3DlD,EAAWpP,KAAKoP,SAChB7B,EAAS4S,GAAkB/Q,GAIjC,OAGA,SAAetL,GAGb,OAFA2K,EAAQK,MAAM,qBACdqJ,EAASrU,EACFsU,EAAStU,EACjB,EAGD,SAASsU,EAAStU,GAChB,GAAIA,IAASqU,EAEX,OADA1J,EAAQO,QAAQlL,GACTsU,EAGT,IAAM1I,EAAQjB,EAAQQ,KAAK,qBACrBmK,EAAQ+G,GAAkBrc,GAC1BqV,GACHC,GAAoB,IAAVA,GAAe7L,GAAW8S,EAAiB/Z,SAASxC,GAC3D6b,GACHpS,GAAsB,IAAXA,GAAgB6L,GAAUiH,EAAiB/Z,SAAS8I,GAGlE,OAFAM,EAAM4Q,MAAQxhB,QAAmB,KAAXqZ,EAAgBgB,EAAOA,IAAS5L,IAAWoS,IACjEjQ,EAAM6Q,OAASzhB,QAAmB,KAAXqZ,EAAgBwH,EAAQA,IAAUvG,IAAUD,IAC5DzK,EAAG5K,EACX,CACF,EAxMC2Q,WAQF,SAA6BhE,EAAQ4C,GACnC,IAGI8F,EAGA0G,EAGAhL,EAGA2L,EAGA5E,EAGAjT,EAGA8X,EAGAjP,EAxBAhQ,GAAS,EA6Bb,OAASA,EAAQiP,EAAOxT,QAEtB,GACuB,UAArBwT,EAAOjP,GAAO,IACY,sBAA1BiP,EAAOjP,GAAO,GAAGuK,MACjB0E,EAAOjP,GAAO,GAAG+e,OAIjB,IAFApH,EAAO3X,EAEA2X,KAEL,GACsB,SAApB1I,EAAO0I,GAAM,IACY,sBAAzB1I,EAAO0I,GAAM,GAAGpN,MAChB0E,EAAO0I,GAAM,GAAGmH,OAChBjN,EAAQe,eAAe3D,EAAO0I,GAAM,IAAI9V,WAAW,KACjDgQ,EAAQe,eAAe3D,EAAOjP,GAAO,IAAI6B,WAAW,GACtD,CAKA,IACGoN,EAAO0I,GAAM,GAAGoH,QAAU9P,EAAOjP,GAAO,GAAG8e,SAC3C7P,EAAOjP,GAAO,GAAGK,IAAI2P,OAASf,EAAOjP,GAAO,GAAGI,MAAM4P,QAAU,MAE7Df,EAAO0I,GAAM,GAAGtX,IAAI2P,OACnBf,EAAO0I,GAAM,GAAGvX,MAAM4P,OACtBf,EAAOjP,GAAO,GAAGK,IAAI2P,OACrBf,EAAOjP,GAAO,GAAGI,MAAM4P,QACzB,GAGF,SAGF7I,EACE8H,EAAO0I,GAAM,GAAGtX,IAAI2P,OAASf,EAAO0I,GAAM,GAAGvX,MAAM4P,OAAS,GAC5Df,EAAOjP,GAAO,GAAGK,IAAI2P,OAASf,EAAOjP,GAAO,GAAGI,MAAM4P,OAAS,EAC1D,EACA,EACN,IAAM5P,EAAQtE,OAAO2M,OAAO,CAAC,EAAGwG,EAAO0I,GAAM,GAAGtX,KAC1CA,EAAMvE,OAAO2M,OAAO,CAAC,EAAGwG,EAAOjP,GAAO,GAAGI,OAC/C8e,GAAU9e,GAAQ+G,GAClB+X,GAAU7e,EAAK8G,GACf6X,EAAkB,CAChBzU,KAAMpD,EAAM,EAAI,iBAAmB,mBACnC/G,MAAAA,EACAC,IAAKvE,OAAO2M,OAAO,CAAC,EAAGwG,EAAO0I,GAAM,GAAGtX,MAEzC+Z,EAAkB,CAChB7P,KAAMpD,EAAM,EAAI,iBAAmB,mBACnC/G,MAAOtE,OAAO2M,OAAO,CAAC,EAAGwG,EAAOjP,GAAO,GAAGI,OAC1CC,IAAAA,GAEFgT,EAAO,CACL9I,KAAMpD,EAAM,EAAI,aAAe,eAC/B/G,MAAOtE,OAAO2M,OAAO,CAAC,EAAGwG,EAAO0I,GAAM,GAAGtX,KACzCA,IAAKvE,OAAO2M,OAAO,CAAC,EAAGwG,EAAOjP,GAAO,GAAGI,QAE1Cie,EAAQ,CACN9T,KAAMpD,EAAM,EAAI,SAAW,WAC3B/G,MAAOtE,OAAO2M,OAAO,CAAC,EAAGuW,EAAgB5e,OACzCC,IAAKvE,OAAO2M,OAAO,CAAC,EAAG2R,EAAgB/Z,MAEzC4O,EAAO0I,GAAM,GAAGtX,IAAMvE,OAAO2M,OAAO,CAAC,EAAGuW,EAAgB5e,OACxD6O,EAAOjP,GAAO,GAAGI,MAAQtE,OAAO2M,OAAO,CAAC,EAAG2R,EAAgB/Z,KAC3D4e,EAAa,GAEThQ,EAAO0I,GAAM,GAAGtX,IAAI2P,OAASf,EAAO0I,GAAM,GAAGvX,MAAM4P,SACrDiP,EAAajgB,GAAKigB,EAAY,CAC5B,CAAC,QAAShQ,EAAO0I,GAAM,GAAI9F,GAC3B,CAAC,OAAQ5C,EAAO0I,GAAM,GAAI9F,MAI9BoN,EAAajgB,GAAKigB,EAAY,CAC5B,CAAC,QAASZ,EAAOxM,GACjB,CAAC,QAASmN,EAAiBnN,GAC3B,CAAC,OAAQmN,EAAiBnN,GAC1B,CAAC,QAASwB,EAAMxB,KAGlBoN,EAAajgB,GACXigB,EACAhM,GACEpB,EAAQ9D,OAAOlC,WAAWyS,WAAWxN,KACrC7B,EAAOtO,MAAMgX,EAAO,EAAG3X,GACvB6R,IAIJoN,EAAajgB,GAAKigB,EAAY,CAC5B,CAAC,OAAQ5L,EAAMxB,GACf,CAAC,QAASuI,EAAiBvI,GAC3B,CAAC,OAAQuI,EAAiBvI,GAC1B,CAAC,OAAQwM,EAAOxM,KAGd5C,EAAOjP,GAAO,GAAGK,IAAI2P,OAASf,EAAOjP,GAAO,GAAGI,MAAM4P,QACvDA,EAAS,EACTiP,EAAajgB,GAAKigB,EAAY,CAC5B,CAAC,QAAShQ,EAAOjP,GAAO,GAAI6R,GAC5B,CAAC,OAAQ5C,EAAOjP,GAAO,GAAI6R,MAG7B7B,EAAS,EAGXjF,GAAOkE,EAAQ0I,EAAO,EAAG3X,EAAQ2X,EAAO,EAAGsH,GAC3Cjf,EAAQ2X,EAAOsH,EAAWxjB,OAASuU,EAAS,EAC5C,KACD,CAKPhQ,GAAS,EAET,OAASA,EAAQiP,EAAOxT,QACQ,sBAA1BwT,EAAOjP,GAAO,GAAGuK,OACnB0E,EAAOjP,GAAO,GAAGuK,KAAO,QAI5B,OAAO0E,CACR,GAgDD,SAASiQ,GAAUnf,EAAOiQ,GACxBjQ,EAAMG,QAAU8P,EAChBjQ,EAAMiQ,QAAUA,EAChBjQ,EAAMiU,cAAgBhE,CACvB,CC7NM,IAAMmP,GAAW,CACtBve,KAAM,WACN+M,SAIF,SAA0BV,EAASC,EAAI0D,GACrC,IAAIvD,EAAO,EACX,OAGA,SAAe/K,GAMb,OALA2K,EAAQK,MAAM,YACdL,EAAQK,MAAM,kBACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,kBACbR,EAAQK,MAAM,oBACPqK,CACR,EAGD,SAASA,EAAKrV,GACZ,OAAI0J,GAAW1J,IACb2K,EAAQO,QAAQlL,GACT8c,GAGF9S,GAAWhK,GAAQ+c,EAAW/c,GAAQsO,EAAItO,EAClD,CAGD,SAAS8c,EAAmB9c,GAC1B,OAAgB,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAAe8J,GAAkB9J,GAClEgd,EAAyBhd,GACzB+c,EAAW/c,EAChB,CAGD,SAASgd,EAAyBhd,GAChC,OAAa,KAATA,GACF2K,EAAQO,QAAQlL,GACTid,IAIG,KAATjd,GAAwB,KAATA,GAAwB,KAATA,GAAe8J,GAAkB9J,KAChE+K,IAAS,IAETJ,EAAQO,QAAQlL,GACTgd,GAGFD,EAAW/c,EACnB,CAGD,SAASid,EAAUjd,GACjB,OAAa,KAATA,GACF2K,EAAQQ,KAAK,oBACNpN,EAAIiC,IAGA,OAATA,GAA0B,KAATA,GAAwB,KAATA,GAAeiK,GAAajK,GACvDsO,EAAItO,IAGb2K,EAAQO,QAAQlL,GACTid,EACR,CAGD,SAASF,EAAW/c,GAClB,OAAa,KAATA,GACF2K,EAAQO,QAAQlL,GAChB+K,EAAO,EACAmS,GAGLlT,GAAWhK,IACb2K,EAAQO,QAAQlL,GACT+c,GAGFzO,EAAItO,EACZ,CAGD,SAASkd,EAAiBld,GACxB,OAAO8J,GAAkB9J,GAAQmd,EAAWnd,GAAQsO,EAAItO,EACzD,CAGD,SAASmd,EAAWnd,GAClB,OAAa,KAATA,GACF2K,EAAQO,QAAQlL,GAChB+K,EAAO,EACAmS,GAGI,KAATld,GAEF2K,EAAQQ,KAAK,oBAAoBlD,KAAO,gBACjClK,EAAIiC,IAGNod,EAAWpd,EACnB,CAGD,SAASod,EAAWpd,GAClB,OAAc,KAATA,GAAe8J,GAAkB9J,KAAU+K,IAAS,IACvDJ,EAAQO,QAAQlL,GACA,KAATA,EAAcod,EAAaD,GAG7B7O,EAAItO,EACZ,CAGD,SAASjC,EAAIiC,GAKX,OAJA2K,EAAQK,MAAM,kBACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,kBACbR,EAAQQ,KAAK,YACNP,CACR,CACF,GC3HM,IAAMyS,GAAW,CACtB/e,KAAM,WACN+M,SAIF,SAA0BV,EAASC,EAAI0D,GACrC,IAGI+F,EAGApS,EAGAvE,EAGA2V,EAZE5X,EAAOS,KAab,OAGA,SAAe8D,GAIb,OAHA2K,EAAQK,MAAM,YACdL,EAAQK,MAAM,gBACdL,EAAQO,QAAQlL,GACTqV,CACR,EAGD,SAASA,EAAKrV,GACZ,OAAa,KAATA,GACF2K,EAAQO,QAAQlL,GACTsd,GAGI,KAATtd,GACF2K,EAAQO,QAAQlL,GACTsY,GAGI,KAATtY,GACF2K,EAAQO,QAAQlL,GACTud,GAGL7T,GAAW1J,IACb2K,EAAQO,QAAQlL,GACTwd,GAGFlP,EAAItO,EACZ,CAGD,SAASsd,EAAgBtd,GACvB,OAAa,KAATA,GACF2K,EAAQO,QAAQlL,GACTyd,GAGI,KAATzd,GACF2K,EAAQO,QAAQlL,GAChBiC,EAAS,SACTvE,EAAQ,EACDggB,GAGLhU,GAAW1J,IACb2K,EAAQO,QAAQlL,GACT2d,GAGFrP,EAAItO,EACZ,CAGD,SAASyd,EAAYzd,GACnB,OAAa,KAATA,GACF2K,EAAQO,QAAQlL,GACT4d,GAGFtP,EAAItO,EACZ,CAGD,SAAS4d,EAAa5d,GACpB,OAAa,OAATA,GAA0B,KAATA,EACZsO,EAAItO,GAGA,KAATA,GACF2K,EAAQO,QAAQlL,GACT6d,GAGFC,EAAQ9d,EAChB,CAGD,SAAS6d,EAAiB7d,GACxB,OAAa,OAATA,GAA0B,KAATA,EACZsO,EAAItO,GAGN8d,EAAQ9d,EAChB,CAGD,SAAS8d,EAAQ9d,GACf,OAAa,OAATA,EACKsO,EAAItO,GAGA,KAATA,GACF2K,EAAQO,QAAQlL,GACT+d,GAGL5T,GAAmBnK,IACrBqT,EAAcyK,EACPE,EAAahe,KAGtB2K,EAAQO,QAAQlL,GACT8d,EACR,CAGD,SAASC,EAAa/d,GACpB,OAAa,KAATA,GACF2K,EAAQO,QAAQlL,GACTjC,GAGF+f,EAAQ9d,EAChB,CAGD,SAAS0d,EAAU1d,GACjB,OAAIA,IAASiC,EAAO1C,WAAW7B,MAC7BiN,EAAQO,QAAQlL,GACTtC,IAAUuE,EAAO9I,OAAS8kB,EAAQP,GAGpCpP,EAAItO,EACZ,CAGD,SAASie,EAAMje,GACb,OAAa,OAATA,EACKsO,EAAItO,GAGA,KAATA,GACF2K,EAAQO,QAAQlL,GACTke,GAGL/T,GAAmBnK,IACrBqT,EAAc4K,EACPD,EAAahe,KAGtB2K,EAAQO,QAAQlL,GACTie,EACR,CAGD,SAASC,EAAWle,GAClB,OAAa,KAATA,GACF2K,EAAQO,QAAQlL,GACTme,GAGFF,EAAMje,EACd,CAGD,SAASme,EAASne,GAChB,OAAa,KAATA,EACKjC,EAAIiC,GAGA,KAATA,GACF2K,EAAQO,QAAQlL,GACTme,GAGFF,EAAMje,EACd,CAGD,SAAS2d,EAAY3d,GACnB,OAAa,OAATA,GAA0B,KAATA,EACZjC,EAAIiC,GAGTmK,GAAmBnK,IACrBqT,EAAcsK,EACPK,EAAahe,KAGtB2K,EAAQO,QAAQlL,GACT2d,EACR,CAGD,SAASJ,EAAYvd,GACnB,OAAa,OAATA,EACKsO,EAAItO,GAGA,KAATA,GACF2K,EAAQO,QAAQlL,GACToe,GAGLjU,GAAmBnK,IACrBqT,EAAckK,EACPS,EAAahe,KAGtB2K,EAAQO,QAAQlL,GACTud,EACR,CAGD,SAASa,EAAiBpe,GACxB,OAAgB,KAATA,EAAcjC,EAAIiC,GAAQud,EAAYvd,EAC9C,CAGD,SAASsY,EAActY,GACrB,OAAI0J,GAAW1J,IACb2K,EAAQO,QAAQlL,GACTqe,GAGF/P,EAAItO,EACZ,CAGD,SAASqe,EAASre,GAChB,OAAa,KAATA,GAAe8J,GAAkB9J,IACnC2K,EAAQO,QAAQlL,GACTqe,GAGFC,EAAgBte,EACxB,CAGD,SAASse,EAAgBte,GACvB,OAAImK,GAAmBnK,IACrBqT,EAAciL,EACPN,EAAahe,IAGlBoK,GAAcpK,IAChB2K,EAAQO,QAAQlL,GACTse,GAGFvgB,EAAIiC,EACZ,CAGD,SAASwd,EAAQxd,GACf,OAAa,KAATA,GAAe8J,GAAkB9J,IACnC2K,EAAQO,QAAQlL,GACTwd,GAGI,KAATxd,GAAwB,KAATA,GAAekK,GAA0BlK,GACnDue,EAAeve,GAGjBsO,EAAItO,EACZ,CAGD,SAASue,EAAeve,GACtB,OAAa,KAATA,GACF2K,EAAQO,QAAQlL,GACTjC,GAGI,KAATiC,GAAwB,KAATA,GAAe0J,GAAW1J,IAC3C2K,EAAQO,QAAQlL,GACTwe,GAGLrU,GAAmBnK,IACrBqT,EAAckL,EACPP,EAAahe,IAGlBoK,GAAcpK,IAChB2K,EAAQO,QAAQlL,GACTue,GAGFxgB,EAAIiC,EACZ,CAGD,SAASwe,EAAqBxe,GAC5B,OACW,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACA8J,GAAkB9J,IAElB2K,EAAQO,QAAQlL,GACTwe,GAGFC,EAA0Bze,EAClC,CAGD,SAASye,EAA0Bze,GACjC,OAAa,KAATA,GACF2K,EAAQO,QAAQlL,GACT0e,GAGLvU,GAAmBnK,IACrBqT,EAAcoL,EACPT,EAAahe,IAGlBoK,GAAcpK,IAChB2K,EAAQO,QAAQlL,GACTye,GAGFF,EAAeve,EACvB,CAGD,SAAS0e,EAA4B1e,GACnC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEOsO,EAAItO,GAGA,KAATA,GAAwB,KAATA,GACjB2K,EAAQO,QAAQlL,GAChBqU,EAASrU,EACF2e,GAGLxU,GAAmBnK,IACrBqT,EAAcqL,EACPV,EAAahe,IAGlBoK,GAAcpK,IAChB2K,EAAQO,QAAQlL,GACT0e,IAGT/T,EAAQO,QAAQlL,GAChBqU,OAAStX,EACF6hB,EACR,CAGD,SAASD,EAA4B3e,GACnC,OAAIA,IAASqU,GACX1J,EAAQO,QAAQlL,GACT6e,GAGI,OAAT7e,EACKsO,EAAItO,GAGTmK,GAAmBnK,IACrBqT,EAAcsL,EACPX,EAAahe,KAGtB2K,EAAQO,QAAQlL,GACT2e,EACR,CAGD,SAASE,EAAiC7e,GACxC,OAAa,KAATA,GAAwB,KAATA,GAAekK,GAA0BlK,GACnDue,EAAeve,GAGjBsO,EAAItO,EACZ,CAGD,SAAS4e,EAA8B5e,GACrC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEOsO,EAAItO,GAGA,KAATA,GAAekK,GAA0BlK,GACpCue,EAAeve,IAGxB2K,EAAQO,QAAQlL,GACT4e,EACR,CAKD,SAASZ,EAAahe,GAKpB,OAJA2K,EAAQQ,KAAK,gBACbR,EAAQK,MAAM,cACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,cACNT,GACLC,EACA4M,EACA,aACA9b,EAAKgQ,OAAOlC,WAAWgF,QAAQC,KAAKhM,SAAS,qBACzCzF,EACA,EAEP,CAGD,SAASwa,EAAYvX,GAEnB,OADA2K,EAAQK,MAAM,gBACPqI,EAAYrT,EACpB,CAGD,SAASjC,EAAIiC,GACX,OAAa,KAATA,GACF2K,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,gBACbR,EAAQQ,KAAK,YACNP,GAGF0D,EAAItO,EACZ,CACF,GCtdM,IAAM8e,GAAiB,CAC5BxgB,KAAM,iBACN+M,SAKF,SAAgCV,EAASC,EAAI0D,GAC3C,IAAM7S,EAAOS,KACb,OAGA,SAAe8D,GAMb,OALA2K,EAAQK,MAAM,aACdL,EAAQK,MAAM,eACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,eACbR,EAAQQ,KAAK,aACNmK,CACR,EAGD,SAASA,EAAMtV,GAQb,OAAgB,KAATA,GAAe,2BAA4BvE,EAAKgQ,OAAOlC,WAC1D+E,EAAItO,GACJ4K,EAAG5K,EACR,CACF,EA/BC2Q,WAAYyK,GAASzK,YCHhB,IAAMoO,GAAkB,CAC7BzgB,KAAM,kBACN+M,SAIF,SAAiCV,EAASC,EAAI0D,GAC5C,OAGA,SAAetO,GAIb,OAHA2K,EAAQK,MAAM,mBACdL,EAAQK,MAAM,gBACdL,EAAQO,QAAQlL,GACTqV,CACR,EAGD,SAASA,EAAKrV,GACZ,OAAImK,GAAmBnK,IACrB2K,EAAQQ,KAAK,gBACbR,EAAQQ,KAAK,mBACNP,EAAG5K,IAGLsO,EAAItO,EACZ,CACF,GCxBM,mBAAMgf,GAAW,CACtB1gB,KAAM,WACN+M,SA0EF,SAA0BV,EAASC,EAAI0D,GACrC,IAIIvD,EAGAa,EANAsO,EAAW,EAOf,OAGA,SAAela,GAGb,OAFA2K,EAAQK,MAAM,YACdL,EAAQK,MAAM,oBACP0R,EAAgB1c,EACxB,EAGD,SAAS0c,EAAgB1c,GACvB,OAAa,KAATA,GACF2K,EAAQO,QAAQlL,GAChBka,IACOwC,IAGT/R,EAAQQ,KAAK,oBACN8T,EAAIjf,GACZ,CAGD,SAASif,EAAIjf,GAEX,OAAa,OAATA,EACKsO,EAAItO,GAIA,KAATA,GACF4L,EAAQjB,EAAQK,MAAM,oBACtBD,EAAO,EACA+M,EAAgB9X,IAGZ,KAATA,GACF2K,EAAQK,MAAM,SACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,SACN8T,GAGL9U,GAAmBnK,IACrB2K,EAAQK,MAAM,cACdL,EAAQO,QAAQlL,GAChB2K,EAAQQ,KAAK,cACN8T,IAGTtU,EAAQK,MAAM,gBACP9I,EAAKlC,GACb,CAID,SAASkC,EAAKlC,GACZ,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACAmK,GAAmBnK,IAEnB2K,EAAQQ,KAAK,gBACN8T,EAAIjf,KAGb2K,EAAQO,QAAQlL,GACTkC,EACR,CAID,SAAS4V,EAAgB9X,GAEvB,OAAa,KAATA,GACF2K,EAAQO,QAAQlL,GAChB+K,IACO+M,GAGL/M,IAASmP,GACXvP,EAAQQ,KAAK,oBACbR,EAAQQ,KAAK,YACNP,EAAG5K,KAGZ4L,EAAM3D,KAAO,eACN/F,EAAKlC,GACb,CACF,EA3KCqH,QAKF,SAAyBsF,GACvB,IAIIjP,EAGAsN,EAPAkU,EAAgBvS,EAAOxT,OAAS,EAChCgmB,EAAiB,EAQrB,IACsC,eAAnCxS,EAAOwS,GAAgB,GAAGlX,MACU,UAAnC0E,EAAOwS,GAAgB,GAAGlX,QACO,eAAlC0E,EAAOuS,GAAe,GAAGjX,MACU,UAAlC0E,EAAOuS,GAAe,GAAGjX,MAI3B,IAFAvK,EAAQyhB,IAECzhB,EAAQwhB,GACf,GAA8B,iBAA1BvS,EAAOjP,GAAO,GAAGuK,KAAyB,CAE5C0E,EAAOwS,GAAgB,GAAGlX,KAAO,kBACjC0E,EAAOuS,GAAe,GAAGjX,KAAO,kBAChCkX,GAAkB,EAClBD,GAAiB,EACjB,KACD,CAILxhB,EAAQyhB,EAAiB,EACzBD,IAEA,OAASxhB,GAASwhB,QACFniB,IAAViO,EACEtN,IAAUwhB,GAA2C,eAA1BvS,EAAOjP,GAAO,GAAGuK,OAC9C+C,EAAQtN,GAGVA,IAAUwhB,GACgB,eAA1BvS,EAAOjP,GAAO,GAAGuK,OAEjB0E,EAAO3B,GAAO,GAAG/C,KAAO,eAEpBvK,IAAUsN,EAAQ,IACpB2B,EAAO3B,GAAO,GAAGjN,IAAM4O,EAAOjP,EAAQ,GAAG,GAAGK,IAC5C4O,EAAOlE,OAAOuC,EAAQ,EAAGtN,EAAQsN,EAAQ,GACzCkU,GAAiBxhB,EAAQsN,EAAQ,EACjCtN,EAAQsN,EAAQ,GAGlBA,OAAQjO,GAIZ,OAAO4P,CACR,EA5DCrB,SA+DF,SAAkBtL,GAEhB,OACW,KAATA,GACgD,oBAAhD9D,KAAKyQ,OAAOzQ,KAAKyQ,OAAOxT,OAAS,GAAG,GAAG8O,IAE1C,GCxDM,IAAM6D,IAAQ,kBAClB,GAAKpD,KADa,WAElB,GAAKA,KAFa,WAGlB,GAAKA,KAHa,WAIlB,GAAKA,KAJa,WAKlB,GAAKA,KALa,WAMlB,GAAKA,KANa,WAOlB,GAAKA,KAPa,WAQlB,GAAKA,KARa,WASlB,GAAKA,KATa,WAUlB,GAAKA,KAVa,WAWlB,GAAKA,KAXa,WAYlB,GAAKA,KAZa,WAalB,GAAKA,KAba,WAclB,GAAK0M,IAda,IAkBR1J,IAAiB,WAC3B,GAAKsL,IAIKxG,IAAW,mBACpB,EAAI6G,KADgB,YAEpB,EAAIA,KAFgB,WAGrB,GAAKA,IAHgB,IAOXzJ,IAAI,kBACd,GAAK6J,KADS,WAEd,GAAKrD,KAFS,WAGd,GAAK,CAACwD,GAAiBxD,MAHT,WAId,GAAK+D,KAJS,WAKd,GAAKP,KALS,WAMd,GAAKxD,KANS,WAOd,GAAK2F,KAPS,WAQd,IAAMA,IARQ,IAYJlJ,IAAM,kBAChB,GAAKgK,KADW,WAEhB,GAAKK,IAFW,IAMNnK,IAAI,mBACb,EAAIoK,KADS,YAEb,EAAIA,KAFS,YAGb,EAAIA,KAHS,WAId,GAAKiB,KAJS,WAKd,GAAKvB,KALS,WAMd,GAAKyB,KANS,WAOd,GAAK,CAACO,GAAUQ,MAPF,WAQd,GAAKyB,KARS,WASd,GAAK,CAACC,GAAiB7D,MATT,WAUd,GAAKE,KAVS,WAWd,GAAKkB,KAXS,WAYd,GAAK0C,IAZS,IAgBJhD,GAAa,CACxBxN,KAAM,CAAC8N,GAAW8C,KAIP7C,GAAmB,CAC9B/N,KAAM,CAAC,GAAI,KAIAD,GAAU,CACrBC,KAAM,ICzFR,IAAM6Q,GAAS,cCJR,SAASC,GAAgCllB,EAAO+J,GACrD,IAAMnE,EAAO2F,OAAO4Z,SAASnlB,EAAO+J,GAEpC,OAEEnE,EAAO,GACE,KAATA,GACCA,EAAO,IAAMA,EAAO,IACpBA,EAAO,KAAOA,EAAO,KACrBA,EAAO,OAASA,EAAO,OACvBA,EAAO,OAASA,EAAO,OACL,SAAX,MAAPA,IACkB,SAAX,MAAPA,IACDA,EAAO,QAEA,SAGF+G,OAAO0D,aAAazK,EAC5B,CC3BD,IAAMwf,GACJ,oEAWK,SAASC,GAAarlB,GAC3B,OAAOA,EAAMyc,QAAQ2I,GAA4BE,GAClD,CAQD,SAASA,GAAOC,EAAIC,EAAIC,GACtB,GAAID,EAEF,OAAOA,EAKT,GAAa,KAFAC,EAAGtgB,WAAW,GAEV,CACf,IAAMugB,EAAOD,EAAGtgB,WAAW,GACrBwgB,EAAe,MAATD,GAAyB,KAATA,EAC5B,OAAOR,GAAgCO,EAAGxhB,MAAM0hB,EAAM,EAAI,GAAIA,EAAM,GAAK,GAC1E,CAED,OAAOnF,GAA8BiF,IAAOF,CAC7C,CCqDD,IAAMta,GAAM,CAAC,EAAE0C,eAOFiY,GAcX,SAAU5lB,EAAOwI,EAAUZ,GAMzB,MALwB,kBAAbY,IACTZ,EAAUY,EACVA,OAAW7F,GAejB,WAAgC,IAAdiF,EAAc,uDAAJ,CAAC,EAGrBie,EAASC,GACb,CACEC,WAAY,GACZC,eAAgB,CACd,WACA,WACA,UACA,YACA,UAEFpV,MAAO,CACL6R,SAAUwD,EAAOC,IACjBC,iBAAkBC,EAClBC,cAAeD,EACfE,WAAYL,EAAOrI,IACnB5C,WAAYiL,EAAOjL,GACnB8F,gBAAiBsF,EACjB3F,mBAAoB2F,EACpBzG,WAAYsG,EAAOM,GACnBC,oBAAqB3e,EACrB4e,oBAAqB5e,EACrBoV,aAAcgJ,EAAOM,EAAU1e,GAC/B+c,SAAUqB,EAAOrB,EAAU/c,GAC3B6e,aAAcN,EACdte,KAAMse,EACNO,cAAeP,EACfxJ,WAAYqJ,EAAOrJ,GACnBgK,4BAA6B/e,EAC7Bgf,sBAAuBhf,EACvBif,sBAAuBjf,EACvBkf,SAAUd,EAAOc,GACjBpC,gBAAiBsB,EAAOe,IACxBC,kBAAmBhB,EAAOe,IAC1BjJ,SAAUkI,EAAOiB,GAAMrf,GACvBsf,aAAcf,EACdnD,SAAUgD,EAAOiB,GAAMrf,GACvBuf,aAAchB,EACdiB,MAAOpB,EAAOoB,IACdrL,MAAOnU,EACPqe,KAAMD,EAAOC,IACboB,SAAUrB,EAAOqB,IACjBC,cAAeC,EACfC,YAAaxB,EAAO3X,GAAMoZ,GAC1BC,cAAe1B,EAAO3X,IACtBmP,UAAWwI,EAAOxI,IAClBmK,UAAWC,EACXC,gBAAiBjgB,EACjBkgB,0BAA2BlgB,EAC3BmgB,oBAAqBngB,EACrBogB,cAAehC,EAAOrI,IACtBsK,OAAQjC,EAAOiC,IACflO,cAAeiM,EAAOjM,KAExBjJ,KAAM,CACJuV,WAAY6B,IACZC,mBAAoBC,EACpB5F,SAAU0F,IACV9B,cAAeiC,EACfnC,iBAAkBoC,EAClBvN,WAAYmN,IACZK,qBAAsBC,EACtBC,oCAAqCC,EACrCC,gCAAiCD,EACjCE,wBAAyBC,EACzBnJ,WAAYwI,EAAOY,GACnBC,gBAAiBC,EACjBzC,oBAAqB0C,EACrBzC,oBAAqB0C,EACrBxC,cAAe8B,EACfxL,aAAckL,EAAOiB,GACrBxE,SAAUuD,EAAOkB,GACjB3C,aAAc+B,EACd3gB,KAAM2gB,EACN7L,WAAYuL,IACZvB,4BAA6B0C,EAC7BzC,sBAAuB0C,EACvBzC,sBAAuB0C,EACvBzC,SAAUoB,IACVxD,gBAAiBwD,EAAOsB,GACxBxC,kBAAmBkB,EAAOsB,GAC1B1L,SAAUoK,EAAOuB,GACjBvC,aAAcsB,EACdxF,SAAUkF,EAAOwB,GACjBvC,aAAcqB,EACdpB,MAAOc,EAAOyB,GACd5N,MAAO6N,EACPC,UAAWC,EACXhJ,WAAYiJ,EACZ9D,KAAMiC,EAAO8B,GACb3C,SAAUa,IACVV,YAAaU,IACbR,cAAeQ,IACf1K,UAAW0K,IACXL,gBAAiBoC,EACjBnC,0BAA2BoC,EAC3BnC,oBAAqBoC,EACrBC,SAAUC,EACVrC,cAAeE,EAAOoC,GACtBC,0BAA2BC,EAC3BC,kBAAmBC,EACnBzC,OAAQC,IACRnO,cAAemO,MAGnBvgB,EAAQgjB,iBAAmB,IAIvB9iB,EAAO,CAAC,EACd,OAAOiF,EAMP,SAASA,EAAQwF,GA8Bf,IA5BA,IAAIpF,EAAO,CACTU,KAAM,OACNO,SAAU,IAONyc,EAAa,GAGbC,EAAY,GAGZ3V,EAAU,CACd/Q,MAVY,CAAC+I,GAWb0d,WAAAA,EACAhF,OAAAA,EACAjV,MAAAA,EACAG,KAAAA,EACAlJ,OAAAA,EACAkjB,OAAAA,EACAC,QAAAA,EACAC,QAAAA,GAEE3nB,GAAS,IAEJA,EAAQiP,EAAOxT,QAAQ,CAG9B,GAC4B,gBAA1BwT,EAAOjP,GAAO,GAAGuK,MACS,kBAA1B0E,EAAOjP,GAAO,GAAGuK,KAEjB,GAAyB,UAArB0E,EAAOjP,GAAO,GAChBwnB,EAAUxoB,KAAKgB,QAGfA,EAAQ4nB,EAAY3Y,EADPuY,EAAUvgB,MACWjH,EAGvC,CAID,IAFAA,GAAS,IAEAA,EAAQiP,EAAOxT,QAAQ,CAC9B,IAAMosB,EAAUtF,EAAOtT,EAAOjP,GAAO,IAEjC2H,GAAInK,KAAKqqB,EAAS5Y,EAAOjP,GAAO,GAAGuK,OACrCsd,EAAQ5Y,EAAOjP,GAAO,GAAGuK,MAAM/M,KAC7B1B,OAAO2M,OACL,CACEmK,eAAgB3D,EAAOjP,GAAO,GAAG4S,gBAEnCf,GAEF5C,EAAOjP,GAAO,GAGnB,CAED,GAAIunB,EAAW9rB,OAAS,EAAG,CACzB,IAAMkX,EAAO4U,EAAWA,EAAW9rB,OAAS,IAC5BkX,EAAK,IAAMmV,IACnBtqB,KAAKqU,OAASxS,EAAWsT,EAAK,GACvC,CAwBD,IAtBA9I,EAAK/J,SAAW,CACdM,MAAOL,EACLkP,EAAOxT,OAAS,EACZwT,EAAO,GAAG,GAAG7O,MACb,CACEH,KAAM,EACNC,OAAQ,EACR8P,OAAQ,IAGhB3P,IAAKN,EACHkP,EAAOxT,OAAS,EACZwT,EAAOA,EAAOxT,OAAS,GAAG,GAAG4E,IAC7B,CACEJ,KAAM,EACNC,OAAQ,EACR8P,OAAQ,KAIlBhQ,GAAS,IAEAA,EAAQuiB,EAAOE,WAAWhnB,QACjCoO,EAAO0Y,EAAOE,WAAWziB,GAAO6J,IAASA,EAG3C,OAAOA,CACR,CAQD,SAAS+d,EAAY3Y,EAAQ7O,EAAO3E,GAiBlC,IAhBA,IAKIuoB,EAGA7S,EAGA4W,EAGAhR,EAdA/W,EAAQI,EAAQ,EAChB4nB,GAAoB,EACpBC,GAAa,IAcRjoB,GAASvE,GAAQ,CACxB,IAAMyV,EAAQjC,EAAOjP,GAuCrB,GApCoB,kBAAlBkR,EAAM,GAAG3G,MACS,gBAAlB2G,EAAM,GAAG3G,MACS,eAAlB2G,EAAM,GAAG3G,MAEQ,UAAb2G,EAAM,GACR8W,IAEAA,IAGFjR,OAAW1X,GACgB,oBAAlB6R,EAAM,GAAG3G,KACD,UAAb2G,EAAM,MAEN8S,GACCjN,GACAiR,GACAD,IAEDA,EAAsB/nB,GAGxB+W,OAAW1X,GAGK,eAAlB6R,EAAM,GAAG3G,MACS,kBAAlB2G,EAAM,GAAG3G,MACS,mBAAlB2G,EAAM,GAAG3G,MACS,mBAAlB2G,EAAM,GAAG3G,MACS,6BAAlB2G,EAAM,GAAG3G,OAITwM,OAAW1X,IAIT2oB,GACa,UAAb9W,EAAM,IACY,mBAAlBA,EAAM,GAAG3G,OACY,IAAtByd,GACc,SAAb9W,EAAM,KACa,kBAAlBA,EAAM,GAAG3G,MACU,gBAAlB2G,EAAM,GAAG3G,MACb,CACA,GAAIyZ,EAAU,CACZ,IAAIkE,EAAYloB,EAGhB,IAFAmR,OAAY9R,EAEL6oB,KAAa,CAClB,IAAMC,EAAYlZ,EAAOiZ,GAEzB,GACwB,eAAtBC,EAAU,GAAG5d,MACS,oBAAtB4d,EAAU,GAAG5d,KACb,CACA,GAAqB,SAAjB4d,EAAU,GAAe,SAEzBhX,IACFlC,EAAOkC,GAAW,GAAG5G,KAAO,kBAC5B0d,GAAa,GAGfE,EAAU,GAAG5d,KAAO,aACpB4G,EAAY+W,CACb,MAAM,GACiB,eAAtBC,EAAU,GAAG5d,MACS,qBAAtB4d,EAAU,GAAG5d,MACS,+BAAtB4d,EAAU,GAAG5d,MACS,qBAAtB4d,EAAU,GAAG5d,MACS,mBAAtB4d,EAAU,GAAG5d,KAIb,KAEH,CAGCwd,KACE5W,GAAa4W,EAAsB5W,KAGrC6S,EAASoE,SAAU,GAGrBpE,EAAS3jB,IAAMvE,OAAO2M,OACpB,CAAC,EACD0I,EAAYlC,EAAOkC,GAAW,GAAG/Q,MAAQ8Q,EAAM,GAAG7Q,KAEpD4O,EAAOlE,OAAOoG,GAAanR,EAAO,EAAG,CAAC,OAAQgkB,EAAU9S,EAAM,KAC9DlR,IACAvE,GACD,CAEqB,mBAAlByV,EAAM,GAAG3G,OACXyZ,EAAW,CACTzZ,KAAM,WAEN6d,SAAS,EACThoB,MAAOtE,OAAO2M,OAAO,CAAC,EAAGyI,EAAM,GAAG9Q,QAGpC6O,EAAOlE,OAAO/K,EAAO,EAAG,CAAC,QAASgkB,EAAU9S,EAAM,KAClDlR,IACAvE,IACAssB,OAAsB1oB,EACtB0X,GAAW,EAEd,CACF,CAGD,OADA9H,EAAO7O,GAAO,GAAGgoB,QAAUH,EACpBxsB,CACR,CAMD,SAASisB,EAAQ1rB,EAAKU,GACpB8H,EAAKxI,GAAOU,CACb,CAQD,SAASirB,EAAQ3rB,GACf,OAAOwI,EAAKxI,EACb,CAMD,SAAS+D,EAAMsoB,GACb,MAAO,CACLpoB,KAAMooB,EAAEpoB,KACRC,OAAQmoB,EAAEnoB,OACV8P,OAAQqY,EAAErY,OAEb,CAOD,SAAS2S,EAAOnmB,EAAQ8rB,GACtB,OAAO3Q,EAOP,SAASA,EAAKzJ,GACZZ,EAAM9P,KAAKgB,KAAMhC,EAAO0R,GAAQA,GAC5Boa,GAAKA,EAAI9qB,KAAKgB,KAAM0P,EACzB,CACF,CAGD,SAAS3J,IACP/F,KAAKsC,MAAM9B,KAAK,CACduL,KAAM,WACNO,SAAU,IAEb,CAWD,SAASwC,EAAMhE,EAAM4E,EAAOqa,GAU1B,OATe/pB,KAAKsC,MAAMtC,KAAKsC,MAAMrF,OAAS,GAEvCqP,SAAS9L,KAAKsK,GACrB9K,KAAKsC,MAAM9B,KAAKsK,GAChB9K,KAAK+oB,WAAWvoB,KAAK,CAACkP,EAAOqa,IAE7Bjf,EAAKxJ,SAAW,CACdM,MAAOL,EAAMmO,EAAM9N,QAEdkJ,CACR,CAMD,SAASub,EAAOyD,GACd,OAAOnK,EAOP,SAASA,EAAMjQ,GACToa,GAAKA,EAAI9qB,KAAKgB,KAAM0P,GACxBT,EAAKjQ,KAAKgB,KAAM0P,EACjB,CACF,CASD,SAAST,EAAKS,EAAOsa,GACnB,IAAMlf,EAAO9K,KAAKsC,MAAMmG,MAClB0Q,EAAOnZ,KAAK+oB,WAAWtgB,MAE7B,IAAK0Q,EACH,MAAM,IAAIpW,MACR,iBACE2M,EAAM3D,KACN,MACA1K,EAAkB,CAChBO,MAAO8N,EAAM9N,MACbC,IAAK6N,EAAM7N,MAEb,yBAYN,OAVWsX,EAAK,GAAGpN,OAAS2D,EAAM3D,OAC5Bie,EACFA,EAAYhrB,KAAKgB,KAAM0P,EAAOyJ,EAAK,KAEnBA,EAAK,IAAMmQ,IACnBtqB,KAAKgB,KAAM0P,EAAOyJ,EAAK,KAInCrO,EAAKxJ,SAASO,IAAMN,EAAMmO,EAAM7N,KACzBiJ,CACR,CAMD,SAASme,IACP,OAAOloB,GAASf,KAAKsC,MAAMmG,MAC5B,CAMD,SAASmd,IACPsD,EAAQ,+BAA+B,EACxC,CAGD,SAASxD,EAAqBhW,GACxByZ,EAAQ,iCAGRnpB,KAAKsC,MAAMtC,KAAKsC,MAAMrF,OAAS,GACxB2E,MAAQ6H,OAAO4Z,SAASrjB,KAAKoU,eAAe1E,GAAQ,IAC7DwZ,EAAQ,+BAEX,CAGD,SAAS9B,IACP,IAAMphB,EAAOhG,KAAKipB,SAGhBjpB,KAAKsC,MAAMtC,KAAKsC,MAAMrF,OAAS,GAC5BgtB,KAAOjkB,CACb,CAGD,SAASqhB,IACP,IAAMrhB,EAAOhG,KAAKipB,SAGhBjpB,KAAKsC,MAAMtC,KAAKsC,MAAMrF,OAAS,GAC5BshB,KAAOvY,CACb,CAGD,SAASmhB,IAEHgC,EAAQ,oBACZnpB,KAAK+F,SACLmjB,EAAQ,kBAAkB,GAC3B,CAGD,SAASjC,IACP,IAAMjhB,EAAOhG,KAAKipB,SAGhBjpB,KAAKsC,MAAMtC,KAAKsC,MAAMrF,OAAS,GAC5BiB,MAAQ8H,EAAK2U,QAAQ,2BAA4B,IACtDuO,EAAQ,iBACT,CAGD,SAAS5B,IACP,IAAMthB,EAAOhG,KAAKipB,SAGhBjpB,KAAKsC,MAAMtC,KAAKsC,MAAMrF,OAAS,GAC5BiB,MAAQ8H,EAAK2U,QAAQ,eAAgB,GAC3C,CAGD,SAAS8M,EAA4B/X,GAEnC,IAAMwK,EAAQla,KAAKipB,SACbne,EAEJ9K,KAAKsC,MAAMtC,KAAKsC,MAAMrF,OAAS,GACjC6N,EAAKoP,MAAQA,EACbpP,EAAKiQ,WAAaL,GAChB1a,KAAKoU,eAAe1E,IACpBkL,aACH,CAGD,SAAS8M,IACP,IAAM1hB,EAAOhG,KAAKipB,SAGhBjpB,KAAKsC,MAAMtC,KAAKsC,MAAMrF,OAAS,GAC5Bsd,MAAQvU,CACd,CAGD,SAASwhB,IACP,IAAMxhB,EAAOhG,KAAKipB,SAGhBjpB,KAAKsC,MAAMtC,KAAKsC,MAAMrF,OAAS,GAC5B4F,IAAMmD,CACZ,CAGD,SAASugB,EAAyB7W,GAChC,IAAM5E,EAEJ9K,KAAKsC,MAAMtC,KAAKsC,MAAMrF,OAAS,GAEjC,IAAK6N,EAAKof,MAAO,CACf,IAAMA,EAAQlqB,KAAKoU,eAAe1E,GAAOzS,OACzC6N,EAAKof,MAAQA,CACd,CACF,CAGD,SAASrB,IACPK,EAAQ,gCAAgC,EACzC,CAGD,SAASP,EAAgCjZ,GAGrC1P,KAAKsC,MAAMtC,KAAKsC,MAAMrF,OAAS,GAC5BitB,MAAqD,KAA7ClqB,KAAKoU,eAAe1E,GAAOrM,WAAW,GAAY,EAAI,CACpE,CAGD,SAASolB,IACPS,EAAQ,+BACT,CAGD,SAAS5E,EAAY5U,GACnB,IAAMya,EAEJnqB,KAAKsC,MAAMtC,KAAKsC,MAAMrF,OAAS,GAG7BkX,EAAOgW,EAAO7d,SAAS6d,EAAO7d,SAASrP,OAAS,GAE/CkX,GAAsB,SAAdA,EAAKpI,QAEhBoI,EAAOU,MAEFvT,SAAW,CACdM,MAAOL,EAAMmO,EAAM9N,QAGrBuoB,EAAO7d,SAAS9L,KAAK2T,IAGvBnU,KAAKsC,MAAM9B,KAAK2T,EACjB,CAGD,SAASwS,EAAWjX,GAClB,IAAMyE,EAAOnU,KAAKsC,MAAMmG,MACxB0L,EAAKjW,OAAS8B,KAAKoU,eAAe1E,GAClCyE,EAAK7S,SAASO,IAAMN,EAAMmO,EAAM7N,IACjC,CAGD,SAASqmB,EAAiBxY,GACxB,IAAM2D,EAAUrT,KAAKsC,MAAMtC,KAAKsC,MAAMrF,OAAS,GAG/C,GAAIksB,EAAQ,eAIV,OAHa9V,EAAQ/G,SAAS+G,EAAQ/G,SAASrP,OAAS,GACnDqE,SAASO,IAAMN,EAAMmO,EAAM7N,UAChCqnB,EAAQ,gBAKPC,EAAQ,iCACTpF,EAAOG,eAAe5d,SAAS+M,EAAQtH,QAEvCuY,EAAYtlB,KAAKgB,KAAM0P,GACvBiX,EAAW3nB,KAAKgB,KAAM0P,GAEzB,CAGD,SAASiY,IACPuB,EAAQ,eAAe,EACxB,CAGD,SAAStB,IACP,IAAM5hB,EAAOhG,KAAKipB,SAGhBjpB,KAAKsC,MAAMtC,KAAKsC,MAAMrF,OAAS,GAC5BiB,MAAQ8H,CACd,CAGD,SAAS6hB,IACP,IAAM7hB,EAAOhG,KAAKipB,SAGhBjpB,KAAKsC,MAAMtC,KAAKsC,MAAMrF,OAAS,GAC5BiB,MAAQ8H,CACd,CAGD,SAASuhB,IACP,IAAMvhB,EAAOhG,KAAKipB,SAGhBjpB,KAAKsC,MAAMtC,KAAKsC,MAAMrF,OAAS,GAC5BiB,MAAQ8H,CACd,CAGD,SAASmiB,IACP,IAAM9U,EAEJrT,KAAKsC,MAAMtC,KAAKsC,MAAMrF,OAAS,GAE7BksB,EAAQ,gBACV9V,EAAQtH,MAAQ,YAEhBsH,EAAQ+W,cAAgBjB,EAAQ,kBAAoB,kBAE7C9V,EAAQxQ,WACRwQ,EAAQkH,eAGRlH,EAAQ0H,kBAER1H,EAAQ6G,OAGjBgP,EAAQ,gBACT,CAGD,SAASpB,IACP,IAAMzU,EAEJrT,KAAKsC,MAAMtC,KAAKsC,MAAMrF,OAAS,GAE7BksB,EAAQ,gBACV9V,EAAQtH,MAAQ,YAEhBsH,EAAQ+W,cAAgBjB,EAAQ,kBAAoB,kBAE7C9V,EAAQxQ,WACRwQ,EAAQkH,eAGRlH,EAAQ0H,kBAER1H,EAAQ6G,OAGjBgP,EAAQ,gBACT,CAGD,SAASjB,EAAgBvY,GACvB,IAAM2a,EAEJrqB,KAAKsC,MAAMtC,KAAKsC,MAAMrF,OAAS,GAC3B0X,EAAS3U,KAAKoU,eAAe1E,GACnC2a,EAASnQ,MAAQqJ,GAAa5O,GAC9B0V,EAAStP,WAAaL,GAAoB/F,GAAQiG,aACnD,CAGD,SAASmN,IACP,IAAMuC,EAEJtqB,KAAKsC,MAAMtC,KAAKsC,MAAMrF,OAAS,GAC3BiB,EAAQ8B,KAAKipB,SACbne,EAEJ9K,KAAKsC,MAAMtC,KAAKsC,MAAMrF,OAAS,GAEjCisB,EAAQ,eAAe,GAEL,SAAdpe,EAAKiB,KAEPjB,EAAKwB,SAAWge,EAAShe,SAEzBxB,EAAKsB,IAAMlO,CAEd,CAGD,SAASmqB,IACP,IAAMriB,EAAOhG,KAAKipB,SAGhBjpB,KAAKsC,MAAMtC,KAAKsC,MAAMrF,OAAS,GAC5B4F,IAAMmD,CACZ,CAGD,SAASsiB,IACP,IAAMtiB,EAAOhG,KAAKipB,SAGhBjpB,KAAKsC,MAAMtC,KAAKsC,MAAMrF,OAAS,GAC5Bsd,MAAQvU,CACd,CAGD,SAASwiB,IACPU,EAAQ,cACT,CAGD,SAASnD,IACPmD,EAAQ,gBAAiB,YAC1B,CAGD,SAASd,EAAsB1Y,GAC7B,IAAMwK,EAAQla,KAAKipB,SACbne,EAEJ9K,KAAKsC,MAAMtC,KAAKsC,MAAMrF,OAAS,GACjC6N,EAAKoP,MAAQA,EACbpP,EAAKiQ,WAAaL,GAChB1a,KAAKoU,eAAe1E,IACpBkL,cACFsO,EAAQ,gBAAiB,OAC1B,CAGD,SAASrC,EAA+BnX,GACtCwZ,EAAQ,yBAA0BxZ,EAAM3D,KACzC,CAGD,SAASib,EAA8BtX,GACrC,IAIIxR,EAJE8H,EAAOhG,KAAKoU,eAAe1E,GAC3B3D,EAAOod,EAAQ,0BAKjBpd,GACF7N,EAAQklB,GACNpd,EACS,oCAAT+F,EAA6C,GAAK,IAEpDmd,EAAQ,2BAKRhrB,EAAQwgB,GAA8B1Y,GAGxC,IAAMmO,EAAOnU,KAAKsC,MAAMmG,MACxB0L,EAAKjW,OAASA,EACdiW,EAAK7S,SAASO,IAAMN,EAAMmO,EAAM7N,IACjC,CAGD,SAAS4kB,EAAuB/W,GAC9BiX,EAAW3nB,KAAKgB,KAAM0P,GAGpB1P,KAAKsC,MAAMtC,KAAKsC,MAAMrF,OAAS,GAC5B4F,IAAM7C,KAAKoU,eAAe1E,EAChC,CAGD,SAAS8W,EAAoB9W,GAC3BiX,EAAW3nB,KAAKgB,KAAM0P,GAGpB1P,KAAKsC,MAAMtC,KAAKsC,MAAMrF,OAAS,GAC5B4F,IAAM,UAAY7C,KAAKoU,eAAe1E,EAC5C,CAMD,SAASwJ,IACP,MAAO,CACLnN,KAAM,aACNO,SAAU,GAEb,CAGD,SAASmY,IACP,MAAO,CACL1Y,KAAM,OACNke,KAAM,KACN1L,KAAM,KACNrgB,MAAO,GAEV,CAGD,SAAS4kB,IACP,MAAO,CACL/W,KAAM,aACN7N,MAAO,GAEV,CAGD,SAAS4c,IACP,MAAO,CACL/O,KAAM,aACNgP,WAAY,GACZb,MAAO,KACPK,MAAO,KACP1X,IAAK,GAER,CAGD,SAASoiB,IACP,MAAO,CACLlZ,KAAM,WACNO,SAAU,GAEb,CAGD,SAASwP,KAEP,MAAO,CACL/P,KAAM,UACNme,WAAOrpB,EACPyL,SAAU,GAEb,CAGD,SAAS4Y,KACP,MAAO,CACLnZ,KAAM,QAET,CAGD,SAASqZ,KACP,MAAO,CACLrZ,KAAM,OACN7N,MAAO,GAEV,CAGD,SAASqnB,KACP,MAAO,CACLxZ,KAAM,QACNwO,MAAO,KACP1X,IAAK,GACLuJ,IAAK,KAER,CAGD,SAASgY,KACP,MAAO,CACLrY,KAAM,OACNwO,MAAO,KACP1X,IAAK,GACLyJ,SAAU,GAEb,CAMD,SAASE,GAAKkD,GACZ,MAAO,CACL3D,KAAM,OACNwe,QAAwB,gBAAf7a,EAAM3D,KACfnK,MAAO,KAEP4oB,OAAQ9a,EAAMka,QACdtd,SAAU,GAEb,CAMD,SAASkZ,GAAS9V,GAChB,MAAO,CACL3D,KAAM,WAENye,OAAQ9a,EAAMka,QACda,QAAS,KACTne,SAAU,GAEb,CAGD,SAASqP,KACP,MAAO,CACL5P,KAAM,YACNO,SAAU,GAEb,CAGD,SAAS8Z,KACP,MAAO,CACLra,KAAM,SACNO,SAAU,GAEb,CAGD,SAASuI,KACP,MAAO,CACL9I,KAAM,OACN7N,MAAO,GAEV,CAGD,SAASga,KACP,MAAO,CACLnM,KAAM,gBAET,CACF,CA9gCU2e,CAAS5kB,EAAT4kB,CC9GJ,SAAqBja,GAC1B,MAAQgC,GAAYhC,KAIpB,OAAOA,CACR,CDyGKka,CErGC,WAA6B,IAAd7kB,EAAc,uDAAJ,CAAC,EAGzBuH,EAAaP,GAEjB,CAAC8d,GAAmBC,OAAO/kB,EAAQiH,YAAc,KAI7CwC,EAAS,CACb2L,QAAS,GACT5J,KAAM,CAAC,EACPjE,WAAAA,EACA6B,QAASlR,EAAOkR,IAChBU,SAAU5R,EAAO4R,IACjB8B,KAAM1T,EAAO0T,IACbiD,OAAQ3W,EAAO2W,IACfE,KAAM7W,EAAO6W,KAEf,OAAOtF,EAKP,SAASvR,EAAOqW,GACd,OAGA,SAAiBzH,GACf,OAAO6I,GAAgBlG,EAAQ8E,EAASzH,EACzC,CACF,CACF,CFsEOpC,CAAM1E,GAAS8J,WAAWsC,MHtG3B,WACL,IAOI4Y,EAPAppB,EAAS,EACTqE,EAAS,GAGTnE,GAAQ,EAIZ,OAGA,SAAsB1D,EAAOwI,EAAU7E,GAErC,IAGIkpB,EAGAriB,EAGA4K,EAGA0X,EAGAlnB,EAfEqR,EAAS,GA6Bf,IAZAjX,EAAQ6H,EAAS7H,EAAM6C,SAAS2F,GAChC4M,EAAgB,EAChBvN,EAAS,GAELnE,IAC0B,QAAxB1D,EAAMmF,WAAW,IACnBiQ,IAGF1R,OAAQf,GAGHyS,EAAgBpV,EAAMjB,QAAQ,CAOnC,GANAkmB,GAAO8H,UAAY3X,EAEnB0X,GADAD,EAAQ5H,GAAO+H,KAAKhtB,UAEO2C,IAAhBkqB,EAAMvpB,MAAsBupB,EAAMvpB,MAAQtD,EAAMjB,OAC3D6G,EAAO5F,EAAMmF,WAAW2nB,IAEnBD,EAAO,CACVhlB,EAAS7H,EAAMiE,MAAMmR,GACrB,KACD,CAED,GAAa,KAATxP,GAAewP,IAAkB0X,GAAeF,EAClD3V,EAAO3U,MAAM,GACbsqB,OAAmBjqB,OAYnB,OAVIiqB,IACF3V,EAAO3U,MAAM,GACbsqB,OAAmBjqB,GAGjByS,EAAgB0X,IAClB7V,EAAO3U,KAAKtC,EAAMiE,MAAMmR,EAAe0X,IACvCtpB,GAAUspB,EAAc1X,GAGlBxP,GACN,KAAK,EACHqR,EAAO3U,KAAK,OACZkB,IACA,MAGF,KAAK,EAIH,IAHAgH,EAA+B,EAAxByiB,KAAKC,KAAK1pB,EAAS,GAC1ByT,EAAO3U,MAAM,GAENkB,IAAWgH,GAAMyM,EAAO3U,MAAM,GAErC,MAGF,KAAK,GACH2U,EAAO3U,MAAM,GACbkB,EAAS,EACT,MAGF,QACEopB,GAAmB,EACnBppB,EAAS,EAKf4R,EAAgB0X,EAAc,CAC/B,CAQD,OANInpB,IACEipB,GAAkB3V,EAAO3U,MAAM,GAC/BuF,GAAQoP,EAAO3U,KAAKuF,GACxBoP,EAAO3U,KAAK,OAGP2U,CACR,CACF,CGPuCkW,GAAantB,EAAOwI,GAAU,KAGnE,EAghCH,SAASsd,GAAUsH,EAAUve,GAG3B,IAFA,IAAIvL,GAAS,IAEJA,EAAQuL,EAAW9P,QAAQ,CAClC,IAAMiB,EAAQ6O,EAAWvL,GAErBqI,MAAMC,QAAQ5L,GAChB8lB,GAAUsH,EAAUptB,GAEpB+O,GAAUqe,EAAUptB,EAEvB,CAED,OAAOotB,CACR,CAOD,SAASre,GAAUqe,EAAUre,GAE3B,IAAIzP,EAEJ,IAAKA,KAAOyP,EACV,GAAI9D,GAAInK,KAAKiO,EAAWzP,GAAM,CAC5B,IAAMgP,EAAe,mBAARhP,GAAoC,eAARA,EAInC2P,GAHQhE,GAAInK,KAAKssB,EAAU9tB,GAAO8tB,EAAS9tB,QAAOqD,KAGjCyqB,EAAS9tB,GAAOgP,EAAO,GAAK,CAAC,GAC9CY,EAAQH,EAAUzP,GAEpB4P,IACEZ,EAEF8e,EAAS9tB,GAAT,kBAAoB2P,IAApB,OAA6BC,IAE7B9P,OAAO2M,OAAOkD,EAAMC,GAGzB,CAEJ,CAGD,SAASkc,GAAenc,EAAMC,GAC5B,MAAID,EACI,IAAIpK,MACR,iBACEoK,EAAKpB,KACL,MACA1K,EAAkB,CAChBO,MAAOuL,EAAKvL,MACZC,IAAKsL,EAAKtL,MAEZ,0BACAuL,EAAMrB,KACN,MACA1K,EAAkB,CAChBO,MAAOwL,EAAMxL,MACbC,IAAKuL,EAAMvL,MAEb,aAGE,IAAIkB,MACR,oCACEqK,EAAMrB,KACN,MACA1K,EAAkB,CAChBO,MAAOwL,EAAMxL,MACbC,IAAKuL,EAAMvL,MAEb,kBAGP,CGxtCD,OCMe,SAAqBiE,GAAS,WAkB3CxI,OAAO2M,OAAOjK,KAAM,CAACoJ,OAhBN,SAACqB,GAEd,IAAMd,EAAmC,EAAK3D,KAAK,YAEnD,OAAO8d,GACLrZ,EACAnN,OAAO2M,OAAO,CAAC,EAAGN,EAAU7D,EAAS,CAInCiH,WAAY,EAAK/G,KAAK,wBAA0B,GAChD8iB,gBAAiB,EAAK9iB,KAAK,2BAA6B,KAG7D,GAGF,ECZUulB,GAST,SAAUxf,EAAMhP,EAAOmB,GAErB,IAAI4M,EAAO,CAACiB,KAAMlB,OAAOkB,IAiBzB,YAdalL,IAAV3C,GAAiC,OAAVA,GACN,kBAAVnB,IAAsB8M,MAAMC,QAAQ/M,GAI5CO,OAAO2M,OAAOa,EAAM/N,GAFpBmB,EAAQnB,EAKN8M,MAAMC,QAAQ5L,GAChB4M,EAAKwB,SAAWpO,OACG2C,IAAV3C,GAAiC,OAAVA,IAChC4M,EAAK5M,MAAQ2M,OAAO3M,IAGf4M,CACR,ECqEU0gB,GAkBT,SAAUld,GACR,QAAazN,IAATyN,GAA+B,OAATA,EACxB,OAAOI,GAGT,GAAoB,kBAATJ,EACT,OA+ER,SAAqB4C,GACnB,OAAOua,GAAY1f,GAKnB,SAASA,EAAKjB,GACZ,OAAOA,GAAQA,EAAKiB,OAASmF,CAC9B,CACF,CAxFcwa,CAAYpd,GAGrB,GAAoB,kBAATA,EACT,OAAOzE,MAAMC,QAAQwE,GAAQqd,GAAWrd,GAgDhD,SAAsB4C,GACpB,OAAOua,GAAYpf,GAMnB,SAASA,EAAIvB,GAEX,IAAItN,EAEJ,IAAKA,KAAO0T,EAEV,GAAIpG,EAAKtN,KAAS0T,EAAM1T,GAAM,OAAO,EAGvC,OAAO,CACR,CACF,CAlEuDouB,CAAatd,GAG/D,GAAoB,oBAATA,EACT,OAAOmd,GAAYnd,GAGrB,MAAM,IAAIvL,MAAM,+CACjB,EAML,SAAS4oB,GAAWE,GAKlB,IAHA,IAAMC,EAAS,GACXtqB,GAAS,IAEJA,EAAQqqB,EAAM5uB,QACrB6uB,EAAOtqB,GAASgqB,GAAQK,EAAMrqB,IAGhC,OAAOiqB,IAOP,WAA4B,IAC1B,IAAIjqB,GAAS,EADa,mBAAZiG,EAAY,yBAAZA,EAAY,gBAG1B,OAASjG,EAAQsqB,EAAO7uB,QAAQ,OAC9B,IAAI,EAAA6uB,EAAOtqB,IAAOxC,KAAd,SAAmBgB,MAAnB,OAA4ByH,IAAa,OAAO,CACrD,CAED,OAAO,CACR,GACF,CAqDD,SAASgkB,GAAYva,GACnB,OAOA,WAAkC,2BAAZzJ,EAAY,yBAAZA,EAAY,gBAEhC,OAAO3I,QAAQoS,EAAMlS,KAAN,MAAAkS,EAAK,CAAMlR,MAAN,OAAeyH,IACpC,CACF,CAGD,SAASiH,KACP,OAAO,CACR,CCzOM,IAkBMqd,GAcT,SAAU1gB,EAAMiD,EAAM0d,EAASC,GACT,oBAAT3d,GAA0C,oBAAZ0d,IACvCC,EAAUD,EAEVA,EAAU1d,EACVA,EAAO,MAGT,IAAM4d,EAAKV,GAAQld,GACb6d,EAAOF,GAAW,EAAI,GAS5B,SAASG,EAAQthB,EAAMtJ,EAAO6qB,GAG5B,IAEIjqB,EAFElE,EAAwB,kBAAT4M,GAA8B,OAATA,EAAgBA,EAAO,CAAC,EAIxC,kBAAf5M,EAAM6N,OACf3J,EAC2B,kBAAlBlE,EAAMoe,QACTpe,EAAMoe,QACgB,kBAAfpe,EAAMkE,KACblE,EAAMkE,UACNvB,EAENvD,OAAOC,eAAe+uB,EAAO,OAAQ,CACnCpuB,MACE,SACMA,EAAM6N,MAAQ3J,EAAO,IAAMA,EAAO,IAAM,IAC9C,OAIN,OAAOkqB,EAEP,SAASA,IAEP,IAEIC,EAEA/a,EAEAgb,EANA3sB,EAAS,GAQb,KAAKyO,GAAQ4d,EAAGphB,EAAMtJ,EAAO6qB,EAAQA,EAAQpvB,OAAS,IAAM,SAC1D4C,EAsCZ,SAAkB3B,GAChB,GAAI2L,MAAMC,QAAQ5L,GAChB,OAAOA,EAGT,GAAqB,kBAAVA,EACT,MAAO,CAlIa,KAkIFA,GAGpB,MAAO,CAACA,EACT,CAhDoBuuB,CAAST,EAAQlhB,EAAMuhB,IA9ExB,QAgFJxsB,EAAO,IACT,OAAOA,EAKX,GAAIiL,EAAKwB,UA1FC,SA0FWzM,EAAO,GAO1B,IALA2R,GAAUya,EAAUnhB,EAAKwB,SAASrP,QAAU,GAAKkvB,EAEjDK,EAAeH,EAAQxB,OAAO/f,GAGvB0G,GAAU,GAAKA,EAAS1G,EAAKwB,SAASrP,QAAQ,CAInD,GAjGM,SA+FNsvB,EAAYH,EAAQthB,EAAKwB,SAASkF,GAASA,EAAQgb,EAAvCJ,IAEE,GACZ,OAAOG,EAGT/a,EAC0B,kBAAjB+a,EAAU,GAAkBA,EAAU,GAAK/a,EAAS2a,CAC9D,CAGH,OAAOtsB,CACR,CACF,CAzEDusB,CAAQ/gB,EAAM,KAAM,GAApB+gB,EA0ED,EClHE,IAAME,GAcT,SAAUjhB,EAAMiD,EAAM0d,EAASC,GACT,oBAAT3d,GAA0C,oBAAZ0d,IACvCC,EAAUD,EACVA,EAAU1d,EACVA,EAAO,MAGTyd,GAAa1gB,EAAMiD,GAMnB,SAAkBxD,EAAMuhB,GACtB,IAAMlC,EAASkC,EAAQA,EAAQpvB,OAAS,GACxC,OAAO+uB,EACLlhB,EACAqf,EAASA,EAAO7d,SAAStL,QAAQ8J,GAAQ,KACzCqf,EAEH,GAbkC8B,EAcpC,EC1CQS,GAAanrB,GAAM,SACnBorB,GAAWprB,GAAM,OAiB9B,SAASA,GAAMwK,GACb,OAQA,SAAejB,GACb,IAAMvJ,EAASuJ,GAAQA,EAAKxJ,UAAYwJ,EAAKxJ,SAASyK,IAAU,CAAC,EAEjE,MAAO,CACLtK,KAAMF,EAAME,MAAQ,KACpBC,OAAQH,EAAMG,QAAU,KACxB8P,OAAQjQ,EAAMiQ,QAAU,EAAIjQ,EAAMiQ,OAAS,KAE9C,CACF,CC1CD,IAAMrI,GAAM,CAAC,EAAE0C,eA0Cf,SAAS+gB,GAAM1uB,GACb,OAAO2M,OAAO3M,GAAS,IAAI2c,aAC5B,CC1CD,IAAM1R,GAAM,CAAC,EAAE0C,eAOf,SAASghB,GAAQC,EAAGhiB,GAClB,IAAM9E,EAAO8E,EAAK9E,MAAQ,CAAC,EAE3B,MACE,UAAW8E,KAET3B,GAAInK,KAAKgH,EAAM,UACfmD,GAAInK,KAAKgH,EAAM,gBACfmD,GAAInK,KAAKgH,EAAM,cAGV8mB,EAAEC,QAAQjiB,EAAMygB,GAAE,OAAQzgB,EAAK5M,QAGjC4uB,EAAEhiB,EAAM,MAAOuB,GAAIygB,EAAGhiB,GAC9B,CAMM,SAASqB,GAAI2gB,EAAGhiB,EAAMqf,GAC3B,IAEIrpB,EAFEiL,EAAOjB,GAAQA,EAAKiB,KAK1B,IAAKA,EACH,MAAM,IAAIhJ,MAAM,uBAAyB+H,EAAO,KAWlD,OAAsB,oBAPpBhK,EADEqI,GAAInK,KAAK8tB,EAAEE,SAAUjhB,GAClB+gB,EAAEE,SAASjhB,GACP+gB,EAAEG,aAAeH,EAAEG,YAAY3mB,SAASyF,GAC5CmhB,GAEAJ,EAAEK,gBAG0BrsB,EAAK+rB,IAASC,EAAGhiB,EAAMqf,EAC3D,CAMD,SAAS+C,GAAWJ,EAAGhiB,GAErB,MAAO,aAAcA,GAAd,kBAAyBA,GAAzB,IAA+BwB,SAAUD,GAAIygB,EAAGhiB,KAASA,CACjE,CAMM,SAASuB,GAAIygB,EAAG3C,GAErB,IAAM5hB,EAAS,GAEf,GAAI,aAAc4hB,EAIhB,IAHA,IAAMiD,EAAQjD,EAAO7d,SACjB9K,GAAS,IAEJA,EAAQ4rB,EAAMnwB,QAAQ,CAC7B,IAAM4C,EAASsM,GAAI2gB,EAAGM,EAAM5rB,GAAQ2oB,GAEpC,GAAItqB,EAAQ,CACV,GAAI2B,GAAmC,UAA1B4rB,EAAM5rB,EAAQ,GAAGuK,OACvBlC,MAAMC,QAAQjK,IAA2B,SAAhBA,EAAOkM,OACnClM,EAAO3B,MAAQ2B,EAAO3B,MAAMyc,QAAQ,OAAQ,MAGzC9Q,MAAMC,QAAQjK,IAA2B,YAAhBA,EAAOkM,MAAoB,CACvD,IAAM6X,EAAO/jB,EAAOyM,SAAS,GAEzBsX,GAAsB,SAAdA,EAAK7X,OACf6X,EAAK1lB,MAAQ0lB,EAAK1lB,MAAMyc,QAAQ,OAAQ,IAE3C,CAGC9Q,MAAMC,QAAQjK,GAChB0I,EAAO/H,KAAP,MAAA+H,GAAM,OAAS1I,IAEf0I,EAAO/H,KAAKX,EAEf,CACF,CAGH,OAAO0I,CACR,CC3GD,IAAM8kB,GAAsB,CAAC,IAAK,OAAQ,IAAK,MAAO,IAAK,KAAM,IAAK,MCsB/D,SAASC,GAAYzqB,EAAKyC,GAC/B,IAAMpH,EDXD,SAAgBA,GACrB,OAAOA,EAAMyc,QAAQ,WAMrB,SAAiBzc,GAEf,MAAO,IAAMmvB,GAAoBnvB,GAAS,GAC3C,GACF,CCAeqvB,CAkChB,SAAsBrvB,GAEpB,IAAM2B,EAAS,GACX2B,GAAS,EACTI,EAAQ,EACR4rB,EAAO,EAEX,OAAShsB,EAAQtD,EAAMjB,QAAQ,CAC7B,IAAM6G,EAAO5F,EAAMmF,WAAW7B,GAG1BmZ,EAAU,GAEd,GACW,KAAT7W,GACA8J,GAAkB1P,EAAMmF,WAAW7B,EAAQ,KAC3CoM,GAAkB1P,EAAMmF,WAAW7B,EAAQ,IAE3CgsB,EAAO,OAEJ,GAAI1pB,EAAO,IACT,oBAAoBwK,KAAKzD,OAAO0D,aAAazK,MAChD6W,EAAU9P,OAAO0D,aAAazK,SAG7B,GAAIA,EAAO,OAASA,EAAO,MAAO,CACrC,IAAM4E,EAAOxK,EAAMmF,WAAW7B,EAAQ,GAElCsC,EAAO,OAAS4E,EAAO,OAASA,EAAO,OACzCiS,EAAU9P,OAAO0D,aAAazK,EAAM4E,GACpC8kB,EAAO,GAGP7S,EAAU,QAEb,MAECA,EAAU9P,OAAO0D,aAAazK,GAG5B6W,IACF9a,EAAOW,KAAKtC,EAAMiE,MAAMP,EAAOJ,GAAQisB,mBAAmB9S,IAC1D/Y,EAAQJ,EAAQgsB,EAAO,EACvB7S,EAAU,IAGR6S,IACFhsB,GAASgsB,EACTA,EAAO,EAEV,CAED,OAAO3tB,EAAOkE,KAAK,IAAM7F,EAAMiE,MAAMP,EACtC,CAvFsB8rB,CAAa7qB,GAAO,KAEzC,IAAKyC,EACH,OAAOpH,EAGT,IAAMyvB,EAAQzvB,EAAM8C,QAAQ,KACtB4sB,EAAe1vB,EAAM8C,QAAQ,KAC7B6sB,EAAa3vB,EAAM8C,QAAQ,KAC3B8sB,EAAQ5vB,EAAM8C,QAAQ,KAE5B,OAEE2sB,EAAQ,GACPG,GAAS,GAAKH,EAAQG,GACtBF,GAAgB,GAAKD,EAAQC,GAC7BC,GAAc,GAAKF,EAAQE,GAC5BvoB,EAASgJ,KAAKpQ,EAAMiE,MAAM,EAAGwrB,IAEtBzvB,EAGF,EACR,CChCM,SAASmJ,GAAK+lB,EAAOW,GAE1B,IAAMluB,EAAS,GACX2B,GAAS,EAMb,IAJIusB,GACFluB,EAAOW,KAAK+qB,GAAE,OAAQ,SAGf/pB,EAAQ4rB,EAAMnwB,QACjBuE,GAAO3B,EAAOW,KAAK+qB,GAAE,OAAQ,OACjC1rB,EAAOW,KAAK4sB,EAAM5rB,IAOpB,OAJIusB,GAASX,EAAMnwB,OAAS,GAC1B4C,EAAOW,KAAK+qB,GAAE,OAAQ,OAGjB1rB,CACR,CCrBM,SAASmuB,GAAkBlB,EAAGhiB,GACnC,IAIImjB,EAJEC,EAAKrjB,OAAOC,EAAKiQ,YACjBoT,EAASb,GAAYY,EAAGtT,eACxBpZ,EAAQsrB,EAAEsB,cAAcptB,QAAQktB,IAIvB,IAAX1sB,GACFsrB,EAAEsB,cAAc5tB,KAAK0tB,GACrBpB,EAAEuB,eAAeH,GAAM,EACvBD,EAAUnB,EAAEsB,cAAcnxB,SAE1B6vB,EAAEuB,eAAeH,KACjBD,EAAUzsB,EAAQ,GAGpB,IAAM8sB,EAAexB,EAAEuB,eAAeH,GAEtC,OAAOpB,EAAEhiB,EAAM,MAAO,CACpBgiB,EACEhiB,EAAKxJ,SACL,IACA,CACE4D,KAAM,IAAM4nB,EAAEyB,cAAgB,MAAQJ,EACtCD,GACEpB,EAAEyB,cACF,SACAJ,GACCG,EAAe,EAAI,IAAMA,EAAe,IAC3CE,iBAAiB,EACjBC,gBAAiB,kBAEnB,CAAClD,GAAE,OAAQ1gB,OAAOojB,OAGvB,gBC9BM,SAASS,GAAO5B,EAAGhiB,GACxB,IAAM6jB,EAAU7jB,EAAKsf,cACjBwE,EAAS,IAQb,GANgB,cAAZD,EACFC,GAAU,KACW,SAAZD,IACTC,GAAU,KAAO9jB,EAAKoP,OAASpP,EAAKiQ,YAAc,KAGlC,mBAAdjQ,EAAKiB,KACP,OAAOwf,GAAE,OAAQ,KAAOzgB,EAAKsB,IAAMwiB,GAGrC,IAAMC,EAAWxiB,GAAIygB,EAAGhiB,GAClB8Y,EAAOiL,EAAS,GAElBjL,GAAsB,SAAdA,EAAK7X,KACf6X,EAAK1lB,MAAQ,IAAM0lB,EAAK1lB,MAExB2wB,EAAShiB,QAAQ0e,GAAE,OAAQ,MAG7B,IAAMpX,EAAO0a,EAASA,EAAS5xB,OAAS,GAQxC,OANIkX,GAAsB,SAAdA,EAAKpI,KACfoI,EAAKjW,OAAS0wB,EAEdC,EAASruB,KAAK+qB,GAAE,OAAQqD,IAGnBC,CACR,CC4DD,SAASC,GAAchkB,GACrB,IAAM0f,EAAS1f,EAAK0f,OAEpB,YAAkB3pB,IAAX2pB,GAAmC,OAAXA,EAC3B1f,EAAKwB,SAASrP,OAAS,EACvButB,CACL,CCtED,SAASuE,GAAS7wB,EAAO0D,EAAOC,GAC9B,IAAI4U,EAAa,EACbE,EAAWzY,EAAMjB,OAErB,GAAI2E,EAGF,IAFA,IAAIkC,EAAO5F,EAAM8wB,YAAYvY,GAlDrB,IAoDD3S,GAnDG,KAmDaA,GACrB2S,IACA3S,EAAO5F,EAAM8wB,YAAYvY,GAI7B,GAAI5U,EAGF,IAFA,IAAIiC,EAAO5F,EAAM8wB,YAAYrY,EAAW,GA3DhC,IA6DD7S,GA5DG,KA4DaA,GACrB6S,IACA7S,EAAO5F,EAAM8wB,YAAYrY,EAAW,GAIxC,OAAOA,EAAWF,EAAavY,EAAMiE,MAAMsU,EAAYE,GAAY,EACpE,CC7CM,IAAMqW,GAAW,CACtBiC,WCZK,SAAoBnC,EAAGhiB,GAC5B,OAAOgiB,EAAEhiB,EAAM,aAAczD,GAAKgF,GAAIygB,EAAGhiB,IAAO,GACjD,EDWCokB,MEXK,SAAmBpC,EAAGhiB,GAC3B,MAAO,CAACgiB,EAAEhiB,EAAM,MAAOygB,GAAE,OAAQ,MAClC,EFUCznB,KGbK,SAAcgpB,EAAGhiB,GACtB,IAAM5M,EAAQ4M,EAAK5M,MAAQ4M,EAAK5M,MAAQ,KAAO,GAGzC+rB,EAAOnf,EAAKmf,MAAQnf,EAAKmf,KAAKc,MAAM,uBAEpChuB,EAAQ,CAAC,EAEXktB,IACFltB,EAAMoyB,UAAY,CAAC,YAAclF,IAGnC,IAAMnmB,EAAOgpB,EAAEhiB,EAAM,OAAQ/N,EAAO,CAACwuB,GAAE,OAAQrtB,KAM/C,OAJI4M,EAAKyT,OACPza,EAAKkC,KAAO,CAACuY,KAAMzT,EAAKyT,OAGnBuO,EAAEhiB,EAAKxJ,SAAU,MAAO,CAACwC,GACjC,EHLCsrB,OIhBK,SAAuBtC,EAAGhiB,GAC/B,OAAOgiB,EAAEhiB,EAAM,MAAOuB,GAAIygB,EAAGhiB,GAC9B,EJeCma,SKjBK,SAAkB6H,EAAGhiB,GAC1B,OAAOgiB,EAAEhiB,EAAM,KAAMuB,GAAIygB,EAAGhiB,GAC7B,ELgBCkjB,kBAAAA,GACAqB,SMZK,SAAkBvC,EAAGhiB,GAI1B,IAHA,IAAMwkB,EAAexC,EAAEwC,aACnBC,EAAK,EAEFA,KAAMD,GAAcC,IAE3B,IAAMxU,EAAalQ,OAAO0kB,GAS1B,OAPAD,EAAavU,GAAc,CACzBhP,KAAM,qBACNgP,WAAAA,EACAzO,SAAU,CAAC,CAACP,KAAM,YAAaO,SAAUxB,EAAKwB,WAC9ChL,SAAUwJ,EAAKxJ,UAGV0sB,GAAkBlB,EAAG,CAC1B/gB,KAAM,oBACNgP,WAAAA,EACAzZ,SAAUwJ,EAAKxJ,UAElB,ENPCwa,QOpBK,SAAiBgR,EAAGhiB,GACzB,OAAOgiB,EAAEhiB,EAAM,IAAMA,EAAKof,MAAO7d,GAAIygB,EAAGhiB,GACzC,EPmBCsa,KQnBK,SAAc0H,EAAGhiB,GACtB,OAAOgiB,EAAE0C,UAAY1C,EAAEC,QAAQjiB,EAAMygB,GAAE,MAAOzgB,EAAK5M,QAAU,IAC9D,ERkBCuxB,eSpBK,SAAwB3C,EAAGhiB,GAChC,IAAM0M,EAAMsV,EAAEhS,WAAWhQ,EAAKiQ,YAE9B,IAAKvD,EACH,OAAOkX,GAAO5B,EAAGhiB,GAInB,IAAM/N,EAAQ,CAAC2yB,IAAKxrB,GAAUsT,EAAI3U,KAAO,IAAKuJ,IAAKtB,EAAKsB,KAMxD,OAJkB,OAAdoL,EAAI+C,YAAgC1Z,IAAd2W,EAAI+C,QAC5Bxd,EAAMwd,MAAQ/C,EAAI+C,OAGbuS,EAAEhiB,EAAM,MAAO/N,EACvB,ETMCwoB,MUtBK,SAAeuH,EAAGhiB,GAEvB,IAAM/N,EAAQ,CAAC2yB,IAAKxrB,GAAU4G,EAAKjI,KAAMuJ,IAAKtB,EAAKsB,KAMnD,OAJmB,OAAftB,EAAKyP,YAAiC1Z,IAAfiK,EAAKyP,QAC9Bxd,EAAMwd,MAAQzP,EAAKyP,OAGduS,EAAEhiB,EAAM,MAAO/N,EACvB,EVcC4yB,WWxBK,SAAoB7C,EAAGhiB,GAC5B,OAAOgiB,EAAEhiB,EAAM,OAAQ,CAACygB,GAAE,OAAQzgB,EAAK5M,MAAMyc,QAAQ,YAAa,OACnE,EXuBCiV,cYtBK,SAAuB9C,EAAGhiB,GAC/B,IAAM0M,EAAMsV,EAAEhS,WAAWhQ,EAAKiQ,YAE9B,IAAKvD,EACH,OAAOkX,GAAO5B,EAAGhiB,GAInB,IAAM/N,EAAQ,CAACmI,KAAMhB,GAAUsT,EAAI3U,KAAO,KAM1C,OAJkB,OAAd2U,EAAI+C,YAAgC1Z,IAAd2W,EAAI+C,QAC5Bxd,EAAMwd,MAAQ/C,EAAI+C,OAGbuS,EAAEhiB,EAAM,IAAK/N,EAAOsP,GAAIygB,EAAGhiB,GACnC,EZQCsZ,KaxBK,SAAc0I,EAAGhiB,GAEtB,IAAM/N,EAAQ,CAACmI,KAAMhB,GAAU4G,EAAKjI,MAMpC,OAJmB,OAAfiI,EAAKyP,YAAiC1Z,IAAfiK,EAAKyP,QAC9Bxd,EAAMwd,MAAQzP,EAAKyP,OAGduS,EAAEhiB,EAAM,IAAK/N,EAAOsP,GAAIygB,EAAGhiB,GACnC,EbgBC0a,SFrBK,SAAkBsH,EAAGhiB,EAAMqf,GAChC,IASMxO,EATA9b,EAASwM,GAAIygB,EAAGhiB,GAChBijB,EAAQ5D,EA0EhB,SAAmBrf,GACjB,IAAIijB,EAAQjjB,EAAK0f,OACXle,EAAWxB,EAAKwB,SAClB9K,GAAS,EAEb,MAAQusB,KAAWvsB,EAAQ8K,EAASrP,QAClC8wB,EAAQe,GAAcxiB,EAAS9K,IAGjC,OAAO1C,QAAQivB,EAChB,CApFwB8B,CAAU1F,GAAU2E,GAAchkB,GAEnD/N,EAAQ,CAAC,EAET+yB,EAAU,GAEY,mBAAjBhlB,EAAK2f,UAKZ5qB,EAAO,IACY,YAAnBA,EAAO,GAAGkM,MACY,MAAtBlM,EAAO,GAAGyc,QAEVX,EAAY9b,EAAO,IAEnB8b,EAAYmR,EAAE,KAAM,IAAK,IACzBjtB,EAAOgN,QAAQ8O,IAGbA,EAAUrP,SAASrP,OAAS,GAC9B0e,EAAUrP,SAASO,QAAQ0e,GAAE,OAAQ,MAGvC5P,EAAUrP,SAASO,QACjBigB,EAAE,KAAM,QAAS,CACf/gB,KAAM,WACN0e,QAAS3f,EAAK2f,QACdsF,UAAU,KAMdhzB,EAAMoyB,UAAY,CAAC,mBAKrB,IAFA,IAAI3tB,GAAS,IAEJA,EAAQ3B,EAAO5C,QAAQ,CAC9B,IAAM+yB,EAAQnwB,EAAO2B,IAInBusB,GACU,IAAVvsB,GACe,YAAfwuB,EAAMjkB,MACY,MAAlBikB,EAAM1T,UAENwT,EAAQtvB,KAAK+qB,GAAE,OAAQ,OAGN,YAAfyE,EAAMjkB,MAAwC,MAAlBikB,EAAM1T,SAAoByR,EAGxD+B,EAAQtvB,KAAKwvB,GAFbF,EAAQtvB,KAAR,MAAAsvB,GAAO,OAASE,EAAM1jB,UAIzB,CAED,IAAM6H,EAAOtU,EAAOA,EAAO5C,OAAS,GAOpC,OAJIkX,IAAS4Z,GAAW,YAAa5Z,GAA0B,MAAjBA,EAAKmI,SACjDwT,EAAQtvB,KAAK+qB,GAAE,OAAQ,OAGlBuB,EAAEhiB,EAAM,KAAM/N,EAAO+yB,EAC7B,EEhDCtjB,KcxBK,SAAcsgB,EAAGhiB,GAEtB,IAAM/N,EAAQ,CAAC,EACTqF,EAAO0I,EAAKyf,QAAU,KAAO,KAC7B7d,EAAQL,GAAIygB,EAAGhiB,GACjBtJ,GAAS,EAOb,IAL0B,kBAAfsJ,EAAKlJ,OAAqC,IAAfkJ,EAAKlJ,QACzC7E,EAAM6E,MAAQkJ,EAAKlJ,SAIZJ,EAAQkL,EAAMzP,QAAQ,CAC7B,IAAMgT,EAAOvD,EAAMlL,GAEnB,GACgB,YAAdyO,EAAKlE,MACY,OAAjBkE,EAAKqM,SACLrM,EAAKggB,YACLpmB,MAAMC,QAAQmG,EAAKggB,WAAWd,YAC9Blf,EAAKggB,WAAWd,UAAU7oB,SAAS,kBACnC,CACAvJ,EAAMoyB,UAAY,CAAC,sBACnB,KACD,CACF,CAED,OAAOrC,EAAEhiB,EAAM1I,EAAMrF,EAAOsK,GAAKqF,GAAO,GACzC,EdHCiP,Ue7BK,SAAmBmR,EAAGhiB,GAC3B,OAAOgiB,EAAEhiB,EAAM,IAAKuB,GAAIygB,EAAGhiB,GAC5B,Ef4BColB,KgB5BK,SAAcpD,EAAGhiB,GAEtB,OAAOgiB,EAAEC,QAAQjiB,EAAMygB,GAAE,OAAQlkB,GAAKgF,GAAIygB,EAAGhiB,KAC9C,EhB0BCsb,OiB/BK,SAAgB0G,EAAGhiB,GACxB,OAAOgiB,EAAEhiB,EAAM,SAAUuB,GAAIygB,EAAGhiB,GACjC,EjB8BCqlB,MkB3BK,SAAerD,EAAGhiB,GAOvB,IANA,IAAMslB,EAAOtlB,EAAKwB,SACd9K,GAAS,EACP6uB,EAAQvlB,EAAKulB,OAAS,GAEtBxwB,EAAS,KAEN2B,EAAQ4uB,EAAKnzB,QAAQ,CAQ5B,IAPA,IAAMqzB,EAAMF,EAAK5uB,GAAO8K,SAClBlK,EAAiB,IAAVZ,EAAc,KAAO,KAE5B+uB,EAAM,GACRC,GAAa,EACXvzB,EAAS6N,EAAKulB,MAAQA,EAAMpzB,OAASqzB,EAAIrzB,SAEtCuzB,EAAYvzB,GAAQ,CAC3B,IAAMwzB,EAAOH,EAAIE,GACjBD,EAAI/vB,KACFssB,EAAE2D,EAAMruB,EAAM,CAACiuB,MAAOA,EAAMG,IAAaC,EAAOpkB,GAAIygB,EAAG2D,GAAQ,IAElE,CAED5wB,EAAO2B,GAASsrB,EAAEsD,EAAK5uB,GAAQ,KAAM6F,GAAKkpB,GAAK,GAChD,CAED,OAAOzD,EACLhiB,EACA,QACAzD,GACE,CAACylB,EAAEjtB,EAAO,GAAGyB,SAAU,QAAS+F,GAAK,CAACxH,EAAO,KAAK,KAAQgrB,OACxDhrB,EAAO,GACHitB,EACE,CACElrB,MAAO8qB,GAAW7sB,EAAO,IACzBgC,IAAK8qB,GAAS9sB,EAAOA,EAAO5C,OAAS,KAEvC,QACAoK,GAAKxH,EAAOsC,MAAM,IAAI,IAExB,KAEN,GAGL,ElBhBC0S,KmBhCK,SAAciY,EAAGhiB,GACtB,OAAOgiB,EAAEC,QAAQjiB,EAAMygB,GAAE,OpBDpB,SAAmBrtB,GAQxB,IAPA,IAAMsE,EAASqI,OAAO3M,GAChBilB,EAAS,YACX4H,EAAQ5H,EAAO+H,KAAK1oB,GACpBkuB,EAAO,EAELC,EAAQ,GAEP5F,GACL4F,EAAMnwB,KACJuuB,GAASvsB,EAAOL,MAAMuuB,EAAM3F,EAAMvpB,OAAQkvB,EAAO,GAAG,GACpD3F,EAAM,IAGR2F,EAAO3F,EAAMvpB,MAAQupB,EAAM,GAAG9tB,OAC9B8tB,EAAQ5H,EAAO+H,KAAK1oB,GAKtB,OAFAmuB,EAAMnwB,KAAKuuB,GAASvsB,EAAOL,MAAMuuB,GAAOA,EAAO,GAAG,IAE3CC,EAAM5sB,KAAK,GACnB,CoBpBkC6sB,CAAU/lB,OAAOC,EAAK5M,SACxD,EnB+BCga,coBlCK,SAAuB4U,EAAGhiB,GAC/B,OAAOgiB,EAAEhiB,EAAM,KAChB,EpBiCC+lB,KAAMC,GACNC,KAAMD,GACNhW,WAAYgW,GACZE,mBAAoBF,IAItB,SAASA,KACP,OAAO,IACR,CqB8CD,IAAM3nB,GAAM,CAAC,EAAE0C,eAQf,SAASugB,GAAQ/gB,EAAMvF,GACrB,IAAM6D,EAAW7D,GAAW,CAAC,EACvB0pB,EAAY7lB,EAASsnB,qBAAsB,EAE3C3B,EAAe,CAAC,EA+BtB,OA7BAxC,EAAE0C,UAAYA,EACd1C,EAAEyB,mBAC2B1tB,IAA3B8I,EAAS4kB,eAA0D,OAA3B5kB,EAAS4kB,cAC7C,gBACA5kB,EAAS4kB,cACfzB,EAAEoE,cAAgBvnB,EAASunB,eAAiB,YAC5CpE,EAAEqE,kBAAoBxnB,EAASwnB,mBAAqB,kBACpDrE,EAAEhS,W9B1GG,SAAqBhQ,GAE1B,IAAMsmB,EAAQ9zB,OAAOU,OAAO,MAE5B,IAAK8M,IAASA,EAAKiB,KACjB,MAAM,IAAIhJ,MAAM,wCAUlB,OAPAupB,GAAMxhB,EAAM,cAAc,SAACgQ,GACzB,IAAMoT,EAAKtB,GAAM9R,EAAWC,YACxBmT,IAAO/kB,GAAInK,KAAKoyB,EAAOlD,KACzBkD,EAAMlD,GAAMpT,EAEf,IAUD,SAAoBC,GAClB,IAAMmT,EAAKtB,GAAM7R,GACjB,OAAOmT,GAAM/kB,GAAInK,KAAKoyB,EAAOlD,GAAMkD,EAAMlD,GAAM,IAChD,CACF,C8B+EgBmD,CAAYhmB,GAC3ByhB,EAAEwC,aAAeA,EAEjBxC,EAAEsB,cAAgB,GAElBtB,EAAEuB,eAAiB,CAAC,EACpBvB,EAAEC,QAAUA,EACZD,EAAEE,UAAF,kBAAiBA,IAAarjB,EAASqjB,UACvCF,EAAEK,eAAiBxjB,EAASwjB,eAC5BL,EAAEG,YAActjB,EAASsjB,YAEzBX,GAAMjhB,EAAM,sBAAsB,SAACyP,GACjC,IAAMoT,EAAKrjB,OAAOiQ,EAAWC,YAAYF,cAIpC1R,GAAInK,KAAKswB,EAAcpB,KAC1BoB,EAAapB,GAAMpT,EAEtB,IAGMgS,EAQP,SAASC,EAAQ5f,EAAMC,GAErB,GAAID,GAAQ,SAAUA,GAAQA,EAAKnH,KAAM,CAEvC,IAAMA,EAAOmH,EAAKnH,KAEdA,EAAKsrB,QACY,YAAflkB,EAAMrB,OACRqB,EAAQ,CACNrB,KAAM,UACNuQ,QAAS,GACT2T,WAAY,CAAC,EACb3jB,SAAU,KAIdc,EAAMkP,QAAUtW,EAAKsrB,OAGJ,YAAflkB,EAAMrB,MAAsB/F,EAAKurB,cACnCnkB,EAAM6iB,YAAN,kBAAuB7iB,EAAM6iB,YAAejqB,EAAKurB,cAG/C,aAAcnkB,GAASA,EAAMd,UAAYtG,EAAKwrB,YAChDpkB,EAAMd,SAAWtG,EAAKwrB,UAEzB,CAED,GAAIrkB,EAAM,CACR,IAAMskB,EAAM,SAAUtkB,EAAOA,EAAO,CAAC7L,SAAU6L,ICjK3BrC,EDmKL2mB,IChKhB3mB,EAAKxJ,UACLwJ,EAAKxJ,SAASM,OACdkJ,EAAKxJ,SAASM,MAAMH,MACpBqJ,EAAKxJ,SAASM,MAAMF,QACpBoJ,EAAKxJ,SAASO,KACdiJ,EAAKxJ,SAASO,IAAIJ,MAClBqJ,EAAKxJ,SAASO,IAAIH,SD4Jf0L,EAAM9L,SAAW,CAACM,MAAO8qB,GAAW+E,GAAM5vB,IAAK8qB,GAAS8E,IAE3D,CCvKE,IAAmB3mB,EDyKtB,OAAOsC,CACR,CAOD,SAAS0f,EAAEhiB,EAAMwR,EAASvf,EAAOuP,GAO/B,OANIzC,MAAMC,QAAQ/M,KAChBuP,EAAWvP,EACXA,EAAQ,CAAC,GAIJgwB,EAAQjiB,EAAM,CACnBiB,KAAM,UACNuQ,QAAAA,EACA2T,WAAYlzB,GAAS,CAAC,EACtBuP,SAAUA,GAAY,IAEzB,CACF,CASM,SAASolB,GAAOrmB,EAAMvF,GAC3B,IAAMgnB,EAAIV,GAAQ/gB,EAAMvF,GAClBgF,EAAOqB,GAAI2gB,EAAGzhB,EAAM,MACpBsmB,EE/MD,SAAgB7E,GAKrB,IAJA,IAAItrB,GAAS,EAEPowB,EAAY,KAETpwB,EAAQsrB,EAAEsB,cAAcnxB,QAAQ,CACvC,IAAMua,EAAMsV,EAAEwC,aAAaxC,EAAEsB,cAAc5sB,GAAOqZ,eAElD,GAAKrD,EAAL,CAWA,IAPA,IAAMtI,EAAU7C,GAAIygB,EAAGtV,GACjB0W,EAAKrjB,OAAO2M,EAAIuD,YAChBoT,EAASb,GAAYY,EAAGtT,eAC1BiX,EAAiB,EAEfC,EAAiB,KAEdD,GAAkB/E,EAAEuB,eAAeH,IAAK,CAE/C,IAAM6D,EAAgB,CACpBhmB,KAAM,UACNuQ,QAAS,IACT2T,WAAY,CACV/qB,KACE,IACA4nB,EAAEyB,cACF,SACAJ,GACC0D,EAAiB,EAAI,IAAMA,EAAiB,IAC/CG,qBAAqB,EACrB7C,UAAW,CAAC,yBACZ8C,UAAWnF,EAAEqE,mBAEf7kB,SAAU,CAAC,CAACP,KAAM,OAAQ7N,MAAO,YAG/B2zB,EAAiB,GACnBE,EAAczlB,SAAS9L,KAAK,CAC1BuL,KAAM,UACNuQ,QAAS,MACThQ,SAAU,CAAC,CAACP,KAAM,OAAQ7N,MAAO2M,OAAOgnB,OAIxCC,EAAe70B,OAAS,GAC1B60B,EAAetxB,KAAK,CAACuL,KAAM,OAAQ7N,MAAO,MAG5C4zB,EAAetxB,KAAKuxB,EACrB,CAED,IAAM5d,EAAOjF,EAAQA,EAAQjS,OAAS,GAEtC,GAAIkX,GAAsB,YAAdA,EAAKpI,MAAuC,MAAjBoI,EAAKmI,QAAiB,OACrD4V,EAAW/d,EAAK7H,SAAS6H,EAAK7H,SAASrP,OAAS,GAClDi1B,GAA8B,SAAlBA,EAASnmB,KACvBmmB,EAASh0B,OAAS,IAElBiW,EAAK7H,SAAS9L,KAAK,CAACuL,KAAM,OAAQ7N,MAAO,OAG3C,EAAAiW,EAAK7H,UAAS9L,KAAd,QAAsBsxB,EACvB,MACC5iB,EAAQ1O,KAAR,MAAA0O,EAAgB4iB,GAIlB,IAAMtM,EAAW,CACfzZ,KAAM,UACNuQ,QAAS,KACT2T,WAAY,CAAC/B,GAAIpB,EAAEyB,cAAgB,MAAQJ,GAC3C7hB,SAAUjF,GAAK6H,GAAS,IAGtBsI,EAAIlW,WACNkkB,EAASlkB,SAAWkW,EAAIlW,UAG1BswB,EAAUpxB,KAAKglB,EAtEd,CAuEF,CAED,OAAyB,IAArBoM,EAAU30B,OACL,KAGF,CACL8O,KAAM,UACNuQ,QAAS,UACT2T,WAAY,CAACkC,eAAe,EAAMhD,UAAW,CAAC,cAC9C7iB,SAAU,CACR,CACEP,KAAM,UACNuQ,QAAS,KACT2T,WAAY,CAAC/B,GAAI,iBAAkBiB,UAAW,CAAC,YAC/C7iB,SAAU,CAACif,GAAE,OAAQuB,EAAEoE,iBAEzB,CAACnlB,KAAM,OAAQ7N,MAAO,MACtB,CACE6N,KAAM,UACNuQ,QAAS,KACT2T,WAAY,CAAC,EACb3jB,SAAUjF,GAAKuqB,GAAW,IAE5B,CAAC7lB,KAAM,OAAQ7N,MAAO,OAG3B,CFmGck0B,CAAOtF,GASpB,OAPI6E,GAIF7mB,EAAKwB,SAAS9L,KAAK+qB,GAAE,OAAQ,MAAOoG,GAG/B9nB,MAAMC,QAAQgB,GAAQ,CAACiB,KAAM,OAAQO,SAAUxB,GAAQA,CAC/D,CGtMD,IAUA,GAPI,SAAUc,EAAa9F,GACrB,OAAO8F,GAAe,QAASA,EAcrC,SAAgBA,EAAa9F,GAC3B,OAAO,SAACgF,EAAMlI,EAAM8F,GAClBkD,EAAYtD,IAAIopB,GAAO5mB,EAAMhF,GAAUlD,GAAM,SAACyC,GAC5CqD,EAAKrD,EACN,GACF,CACF,CAnBSgtB,CAAOzmB,EAAa9F,GA2B9B,SAAgBA,GAEd,OAAO,SAACgF,GAAD,OAAU4mB,GAAO5mB,EAAMhF,EAAvB,CACR,CA7BSwsB,CAAO1mB,GAAe9F,EAC3B,iBCpCQysB,GAAb,GAOE,WAAYC,EAAUC,EAAQC,GAAO,UACnC1yB,KAAKwyB,SAAWA,EAChBxyB,KAAKyyB,OAASA,EACVC,IACF1yB,KAAK0yB,MAAQA,EAEhB,ICPI,SAASC,GAAMtB,EAAaqB,GAOjC,IALA,IAAMF,EAAW,CAAC,EAEZC,EAAS,CAAC,EACZjxB,GAAS,IAEJA,EAAQ6vB,EAAYp0B,QAC3BK,OAAO2M,OAAOuoB,EAAUnB,EAAY7vB,GAAOgxB,UAC3Cl1B,OAAO2M,OAAOwoB,EAAQpB,EAAY7vB,GAAOixB,QAG3C,OAAO,IAAIF,GAAOC,EAAUC,EAAQC,EACrC,CCrBM,SAASxuB,GAAUhG,GACxB,OAAOA,EAAM0c,aACd,CFiBD2X,GAAO30B,UAAU40B,SAAW,CAAC,EAE7BD,GAAO30B,UAAU60B,OAAS,CAAC,EAE3BF,GAAO30B,UAAU80B,MAAQ,KG3BlB,IAAME,GAAb,GAME,WAAYJ,EAAUK,GAAW,UAE/B7yB,KAAKwyB,SAAWA,EAEhBxyB,KAAK6yB,UAAYA,CAClB,IAIHD,GAAKh1B,UAAU80B,MAAQ,KACvBE,GAAKh1B,UAAUk1B,SAAU,EACzBF,GAAKh1B,UAAUm1B,YAAa,EAC5BH,GAAKh1B,UAAUo1B,mBAAoB,EACnCJ,GAAKh1B,UAAUq1B,QAAS,EACxBL,GAAKh1B,UAAUs1B,gBAAiB,EAChCN,GAAKh1B,UAAUu1B,gBAAiB,EAChCP,GAAKh1B,UAAUw1B,uBAAwB,EACvCR,GAAKh1B,UAAUy1B,iBAAkB,EACjCT,GAAKh1B,UAAUsd,SAAU,ECxBzB,IAAIoY,GAAS,EAEAR,GAAUS,KACVR,GAAaQ,KACbP,GAAoBO,KACpBN,GAASM,KACTJ,GAAiBI,KACjBL,GAAiBK,KACjBH,GAAwBG,KAErC,SAASA,KACP,OAAO,KAAP,IAAO,IAAOD,GACf,CCPD,IAAMxH,GAASxuB,OAAOwO,KAAK0nB,GAEdC,GAAb,8BAQE,WAAYjB,EAAUK,EAAWa,EAAMhB,GAAO,gBAC5C,IAAIlxB,GAAS,EAMb,GAFAmyB,GAAK,EAFL,cAAMnB,EAAUK,IAEL,QAASH,GAEA,kBAATgB,EACT,OAASlyB,EAAQsqB,GAAO7uB,QAAQ,CAC9B,IAAMiU,EAAQ4a,GAAOtqB,GACrBmyB,GAAK,KAAM7H,GAAOtqB,IAASkyB,EAAOF,EAAMtiB,MAAYsiB,EAAMtiB,GAC3D,CAXyC,QAa7C,CArBH,aAAiC0hB,IA+BjC,SAASe,GAAKprB,EAAQ/K,EAAKU,GACrBA,IAEFqK,EAAO/K,GAAOU,EAEjB,CAZDu1B,GAAY71B,UAAUsd,SAAU,ECbhC,IAAM/R,GAAM,CAAC,EAAE0C,eAMR,SAAS7N,GAAO8c,GAErB,IAIIzU,EAJEmsB,EAAW,CAAC,EAEZC,EAAS,CAAC,EAIhB,IAAKpsB,KAAQyU,EAAWmV,WACtB,GAAI9mB,GAAInK,KAAK8b,EAAWmV,WAAY5pB,GAAO,CACzC,IAAMnI,EAAQ4c,EAAWmV,WAAW5pB,GAC9B2P,EAAO,IAAIyd,GACfptB,EACAyU,EAAW8Y,UAAU9Y,EAAW+Y,YAAc,CAAC,EAAGxtB,GAClDnI,EACA4c,EAAW4X,OAIX5X,EAAWuY,iBACXvY,EAAWuY,gBAAgB/sB,SAASD,KAEpC2P,EAAKqd,iBAAkB,GAGzBb,EAASnsB,GAAQ2P,EAEjByc,EAAOvuB,GAAUmC,IAASA,EAC1BosB,EAAOvuB,GAAU8R,EAAK6c,YAAcxsB,CACrC,CAGH,OAAO,IAAIksB,GAAOC,EAAUC,EAAQ3X,EAAW4X,MAChD,CCvDM,IAAMoB,GAAQ91B,GAAO,CAC1B00B,MAAO,QACPkB,UAF0B,SAEhB5c,EAAG3Q,GACX,MAAO,SAAWA,EAAKlE,MAAM,GAAGyY,aACjC,EACDqV,WAAY,CACV8D,aAAc,KACdC,aAAc,KACdC,UAAW,KACXC,UAAW,KACXC,UAAW,KACXC,WAAY,KACZC,UAAW,QCZFC,GAAMt2B,GAAO,CACxB00B,MAAO,MACPkB,UAFwB,SAEd5c,EAAG3Q,GACX,MAAO,OAASA,EAAKlE,MAAM,GAAGyY,aAC/B,EACDqV,WAAY,CAACsE,QAAS,KAAMC,QAAS,KAAMC,SAAU,QCFhD,SAASC,GAAuBb,EAAYhB,GACjD,OAAOA,KAAagB,EAAaA,EAAWhB,GAAaA,CAC1D,CCAM,SAAS8B,GAAyBd,EAAYrB,GACnD,OAAOkC,GAAuBb,EAAYrB,EAAS5X,cACpD,CCNM,IAAMga,GAAQ52B,GAAO,CAC1B00B,MAAO,QACPmB,WAAY,CAACgB,WAAY,eACzBjB,UAAWe,GACX1E,WAAY,CAAC2E,MAAO,KAAME,WAAY,QCJ3BC,GAAO/2B,GAAO,CACzB41B,UADyB,SACf5c,EAAG3Q,GACX,MAAgB,SAATA,EAAkBA,EAAO,QAAUA,EAAKlE,MAAM,GAAGyY,aACzD,EACDqV,WAAY,CACV+E,qBAAsB,KACtBC,WAAYlC,GACZmC,iBAAkB,KAClBC,SAAUpC,GACVqC,YAAarC,GACbsC,aAAcpC,GACdqC,aAAcrC,GACdsC,YAAatC,GACbuC,aAAcrC,GACdsC,YAAa,KACbhH,gBAAiB0E,GACjBuC,YAAa,KACbC,aAAc5C,GACd6C,eAAgBzC,GAChB0C,iBAAkB,KAClBC,aAAc/C,GACdgD,WAAY5C,GACZ6C,YAAajD,GACbkD,aAAc,KACdC,WAAYnD,GACZoD,YAAa,KACbC,iBAAkB,KAClBnE,UAAW,KACXoE,eAAgBlD,GAChBmD,UAAWrD,GACXsD,SAAU,KACVC,UAAWzD,GACX0D,cAAe1D,GACf2D,oBAAqB3D,GACrB4D,gBAAiB,KACjBC,SAAUzD,GACV0D,gBAAiB,KACjBC,aAAc7D,GACd8D,YAAahE,GACbiE,aAAcjE,GACdkE,aAAc,KACdC,aAAcnE,GACdoE,oBAAqBhE,GACrBiE,aAAcnE,GACdoE,aAAcpE,GACdqE,YAAarE,GACbsE,aAAcxE,GACdyE,YAAavE,GACbwE,SAAU,KACVC,aAAczE,GACd0E,aAAc1E,GACd2E,aAAc3E,GACd4E,cAAe,KACfC,KAAM,QC7CG1S,GAAOpnB,GAAO,CACzB00B,MAAO,OACPmB,WAAY,CACVkE,cAAe,iBACfC,UAAW,QACXC,QAAS,MACTC,UAAW,cAEbtE,UAAWe,GACXtB,gBAAiB,CAAC,UAAW,WAAY,QAAS,YAClDpD,WAAY,CAEVkI,KAAM,KACNC,OAAQlF,GACRmF,cAAelF,GACfmF,UAAWnF,GACXoF,OAAQ,KACRC,MAAO,KACPC,gBAAiB3F,GACjB4F,oBAAqB5F,GACrB6F,eAAgB7F,GAChB1mB,IAAK,KACLwsB,GAAI,KACJC,MAAO/F,GACPgG,eAAgB,KAChBC,aAAc5F,GACd6F,UAAWlG,GACXmG,SAAUnG,GACVoG,QAASpG,GACTqG,QAAS,KACT1O,QAASqI,GACTsG,KAAM,KACNjK,UAAWgE,GACXkG,KAAMpG,GACNqG,QAAS,KACTpqB,QAAS,KACTqqB,gBAAiBxG,GACjByG,SAAU1G,GACV2G,aAActG,GACduG,OAAQzG,GAASC,GACjByG,YAAa,KACb3zB,KAAM,KACN4zB,SAAU,KACVC,SAAU,KACVC,QAAShH,GACTiH,MAAOjH,GACPkH,IAAK,KACLC,QAAS,KACTlK,SAAU+C,GACVoH,SAAUlH,GACVmH,UAAWpH,GACXqH,QAAS,KACTC,aAAc,KACdC,KAAM,KACNC,WAAY,KACZC,YAAa,KACbC,WAAY,KACZC,eAAgB5H,GAChB6H,WAAY,KACZC,QAASzH,GACT0H,OAAQ5H,GACR6H,OAAQhI,GACRiI,KAAM9H,GACN/tB,KAAM,KACN81B,SAAU,KACVC,QAAS9H,GACT+H,UAAW/H,GACXjF,GAAI,KACJiN,WAAY,KACZC,YAAa,KACbC,UAAW,KACXC,UAAW,KACXpP,GAAI,KACJqP,MAAOzI,GACP0I,OAAQ,KACRC,SAAUtI,GACVuI,QAASvI,GACTwI,UAAW7I,GACX8I,SAAUzI,GACV7a,KAAM,KACN4B,MAAO,KACP+P,KAAM,KACN4R,SAAU,KACVrvB,KAAM,KACNsvB,QAAS,KACTC,KAAMjJ,GACNkJ,IAAK/I,GACLgJ,SAAU,KACVttB,IAAK,KACLutB,UAAWjJ,GACXrT,MAAO,KACPuc,OAAQ,KACRC,IAAK,KACLC,UAAWpJ,GACXqJ,SAAUxJ,GACVyJ,MAAOzJ,GACP1wB,KAAM,KACNo6B,MAAO,KACPC,SAAU3J,GACV4J,WAAY5J,GACZ6J,QAAS,KACTC,aAAc,KACdC,WAAY,KACZC,cAAe,KACfC,eAAgB,KAChBC,OAAQ,KACRC,SAAU,KACVC,UAAW,KACXC,iBAAkB,KAClBC,SAAU,KACVC,QAAS,KACTC,QAAS,KACTC,cAAe,KACfC,cAAe,KACfC,kBAAmB,KACnBC,OAAQ,KACRC,YAAa,KACbC,MAAO,KACPC,WAAY,KACZC,OAAQ,KACRC,UAAW,KACXC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,OAAQ,KACRC,iBAAkB,KAClBC,UAAW,KACXC,QAAS,KACTC,QAAS,KACTC,QAAS,KACTC,WAAY,KACZC,aAAc,KACdC,QAAS,KACTC,UAAW,KACXC,UAAW,KACXC,WAAY,KACZC,QAAS,KACTC,iBAAkB,KAClBC,OAAQ,KACRC,aAAc,KACdC,iBAAkB,KAClBC,UAAW,KACXC,YAAa,KACbC,UAAW,KACXC,eAAgB,KAChBC,YAAa,KACbC,aAAc,KACdC,aAAc,KACdC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,UAAW,KACXC,UAAW,KACXC,SAAU,KACVC,WAAY,KACZC,WAAY,KACZC,QAAS,KACTC,QAAS,KACTC,OAAQ,KACRC,UAAW,KACXC,WAAY,KACZC,WAAY,KACZC,aAAc,KACdC,mBAAoB,KACpBC,QAAS,KACTC,SAAU,KACVC,SAAU,KACVC,0BAA2B,KAC3BC,SAAU,KACVC,UAAW,KACXC,SAAU,KACVC,aAAc,KACdC,UAAW,KACXC,UAAW,KACXC,SAAU,KACVC,UAAW,KACXC,aAAc,KACdC,SAAU,KACVC,qBAAsB,KACtBC,SAAU,KACVC,eAAgB,KAChBC,UAAW,KACXC,QAAS,KACT5oB,KAAM2Z,GACNkP,QAAS/O,GACTgP,QAAS,KACTC,KAAM/O,GACNgP,YAAa,KACbC,YAAatP,GACbuP,OAAQ,KACRC,QAAS,KACTC,SAAUzP,GACV0P,eAAgB,KAChBC,IAAKtP,GACLuP,SAAU5P,GACV6P,SAAU7P,GACV1C,KAAM6C,GACN2P,QAAS3P,GACT4P,QAAS1P,GACT2P,MAAO,KACPC,OAAQjQ,GACRkQ,SAAUlQ,GACVmQ,SAAUnQ,GACVoQ,MAAO,KACPr0B,KAAMokB,GACNkQ,MAAO,KACPC,KAAM,KACNC,KAAMpQ,GACNqQ,WAAYvQ,GACZrD,IAAK,KACL6T,OAAQ,KACRC,QAAS,KACTC,OAAQ,KACR7hC,MAAOqxB,GACP9G,KAAM,KACNuX,MAAO,KACPC,SAAU1Q,GACVn2B,OAAQ,KACRyd,MAAO,KACPqpB,UAAW,KACX73B,KAAM,KACN83B,cAAe/Q,GACfgR,OAAQ,KACR5lC,MAAO60B,GACPgR,MAAO9Q,GACP5rB,KAAM,KAINgpB,MAAO,KACP2T,MAAO,KACPC,QAAS9Q,GACT+Q,KAAM,KACNC,WAAY,KACZC,QAAS,KACTC,OAAQpR,GACRqR,YAAa,KACbC,aAActR,GACduR,YAAa,KACbC,YAAa,KACb5lB,KAAM,KACN6lB,QAAS,KACTC,QAAS,KACTC,MAAO,KACP9gC,KAAM,KACN+gC,SAAU,KACVC,SAAU,KACVC,MAAO,KACPC,QAASlS,GACTmS,QAASnS,GACTpgB,MAAO,KACPwyB,KAAM,KACNC,MAAO,KACPC,YAAa,KACbC,OAAQpS,GACRqS,WAAYrS,GACZ7O,KAAM,KACNmhB,SAAU,KACVC,OAAQ,KACRC,aAAcxS,GACdyS,YAAazS,GACb0S,SAAU7S,GACV8S,OAAQ9S,GACR+S,QAAS/S,GACTgT,OAAQhT,GACRiT,OAAQ,KACRC,QAAS,KACTC,OAAQ,KACRC,IAAK,KACLC,YAAalT,GACbmT,MAAO,KACPC,OAAQ,KACRC,UAAWvT,GACXwT,QAAS,KACTC,QAAS,KACT3xB,KAAM,KACN4xB,UAAWxT,GACXyT,UAAW,KACXC,QAAS,KACTC,OAAQ,KACRC,MAAO,KACPC,OAAQ7T,GAGR8T,kBAAmB,KACnBC,YAAa,KACbC,SAAU,KACVC,wBAAyBpU,GACzBqU,sBAAuBrU,GACvB/jB,OAAQ,KACRyjB,SAAU,KACV4U,QAASnU,GACToU,SAAU,KACVC,aAAc,QCxSLC,GAAMvpC,GAAO,CACxB00B,MAAO,MACPmB,WAAY,CACV2T,aAAc,gBACdC,kBAAmB,qBACnBC,WAAY,cACZC,cAAe,iBACfC,UAAW,aACXzY,UAAW,QACX0Y,SAAU,YACVC,SAAU,YACVC,mBAAoB,sBACpBC,0BAA2B,8BAC3BC,aAAc,gBACdC,eAAgB,kBAChBvO,YAAa,cACbwO,SAAU,WACVC,iBAAkB,oBAClBC,iBAAkB,oBAClBC,YAAa,eACbC,SAAU,YACVC,WAAY,cACZC,aAAc,gBACdC,WAAY,cACZC,SAAU,YACVC,eAAgB,mBAChBC,YAAa,eACbC,UAAW,aACXC,YAAa,eACbC,WAAY,cACZC,UAAW,aACXC,2BAA4B,+BAC5BC,yBAA0B,6BAC1BnO,SAAU,WACVoO,UAAW,cACXC,aAAc,iBACdC,aAAc,iBACdC,eAAgB,kBAChBC,cAAe,iBACfC,cAAe,iBACfC,UAAW,aACXC,UAAW,aACXC,YAAa,eACbC,QAAS,WACTC,YAAa,gBACbC,aAAc,iBACdC,QAAS,WACTC,QAAS,WACTC,QAAS,WACTC,SAAU,YACVC,MAAO,SACPC,UAAW,cACXC,WAAY,eACZ3N,QAAS,UACT4N,WAAY,aACZ3N,aAAc,eACdE,cAAe,gBACf0N,QAAS,UACTvN,SAAU,WACVC,UAAW,YACXC,iBAAkB,mBAClBC,SAAU,WACVC,QAAS,UACTC,QAAS,UACTI,OAAQ,SACRC,YAAa,cACbC,MAAO,QACPC,WAAY,aACZC,OAAQ,SACRC,UAAW,YACXC,YAAa,cACbC,WAAY,aACZC,YAAa,cACbC,WAAY,aACZC,YAAa,cACbC,OAAQ,SACRC,iBAAkB,mBAClBC,UAAW,YACXkM,MAAO,QACPjM,QAAS,UACTC,QAAS,UACTC,QAAS,UACTgM,UAAW,YACXC,WAAY,aACZ/L,aAAc,eACdC,QAAS,UACTC,UAAW,YACXC,UAAW,YACXC,WAAY,aACZC,QAAS,UACTE,OAAQ,SACRC,aAAc,eACdC,iBAAkB,mBAClBE,YAAa,cACbC,UAAW,YACXE,YAAa,cACbC,aAAc,eACdC,aAAc,eACdC,YAAa,cACbC,WAAY,aACZC,YAAa,cACbC,UAAW,YACX4K,aAAc,eACd3K,UAAW,YACXC,SAAU,WACVC,WAAY,aACZC,WAAY,aACZC,QAAS,UACTC,QAAS,UACTC,OAAQ,SACRC,UAAW,YACXC,WAAY,aACZC,WAAY,aACZC,aAAc,eACdkK,SAAU,WACVhK,QAAS,UACTC,SAAU,WACVC,SAAU,WACVE,SAAU,WACVC,UAAW,YACXC,SAAU,WACV2J,OAAQ,SACRzJ,UAAW,YACXC,UAAW,YACXC,SAAU,WACVC,UAAW,YACXC,aAAc,eACdC,SAAU,WACVE,SAAU,WACVC,eAAgB,iBAChBC,UAAW,YACXiJ,OAAQ,SACRC,iBAAkB,oBAClBC,kBAAmB,qBACnBC,WAAY,cACZC,QAAS,WACTC,cAAe,iBACf5I,eAAgB,iBAChB6I,gBAAiB,mBACjBC,eAAgB,kBAChBC,UAAW,aACXC,YAAa,eACbC,sBAAuB,yBACvBC,uBAAwB,0BACxBC,gBAAiB,mBACjBC,iBAAkB,oBAClBC,cAAe,iBACfC,eAAgB,kBAChBC,iBAAkB,oBAClBC,cAAe,iBACfC,YAAa,eACbtI,SAAU,WACVuI,WAAY,cACZC,eAAgB,kBAChBC,cAAe,iBACfC,OAAQ,SACRC,kBAAmB,qBACnBC,mBAAoB,sBACpBC,YAAa,eACbC,aAAc,gBACdC,WAAY,eACZC,YAAa,eACbC,SAAU,YACVC,aAAc,gBACdC,cAAe,iBACfC,aAAc,gBACdC,SAAU,aACVC,YAAa,gBACbC,YAAa,gBACbC,YAAa,eACbC,YAAa,eACbC,QAAS,WAETC,cAAe,gBACfC,cAAe,iBAEjB3Z,UAAWc,GACXzE,WAAY,CACVud,MAAOpa,GACPoU,aAAcvU,GACdwa,WAAY,KACZC,SAAU,KACVjG,kBAAmB,KACnBkG,WAAY1a,GACZ2a,UAAW3a,GACXyU,WAAY,KACZmG,OAAQ5a,GACR6a,cAAe,KACfC,cAAe,KACfC,QAAS/a,GACTgb,UAAW,KACXtG,cAAe,KACfuG,cAAe,KACfC,YAAa,KACbC,KAAM,KACNC,MAAO,KACPC,KAAMrb,GACNsb,GAAI,KACJC,SAAU,KACV5G,UAAW3U,GACX9D,UAAWgE,GACXsb,KAAM,KACN5G,SAAU,KACV6G,cAAe,KACf5G,SAAU,KACV/C,MAAO,KACPgD,mBAAoB,KACpBC,0BAA2B,KAC3BC,aAAc,KACdC,eAAgB,KAChBh5B,QAAS,KACTy/B,kBAAmB,KACnBC,iBAAkB,KAClBjV,YAAa,KACbkV,OAAQ,KACRC,GAAI,KACJC,GAAI,KACJllB,EAAG,KACHse,SAAU,KACV6G,cAAe,KACfC,QAAShc,GACTic,gBAAiBjc,GACjBkc,UAAW,KACXC,QAAS,KACTC,IAAK,KACLC,QAASrc,GACTmV,iBAAkB,KAClBlO,SAAUpH,GACVyc,GAAI,KACJC,GAAI,KACJC,SAAU,KACVC,SAAU,KACVC,UAAW1c,GACXoV,iBAAkB,KAClBxmC,IAAK,KACL6Q,MAAO,KACPk9B,SAAU3c,GACV4c,0BAA2B,KAC3BC,KAAM,KACNxH,YAAarV,GACbsV,SAAU,KACVwH,OAAQ,KACRC,UAAW,KACXC,YAAa,KACbzH,WAAY,KACZC,aAAc,KACdyH,UAAW,KACXC,eAAgB,KAChBzH,WAAY,KACZC,SAAU,KACVC,eAAgB,KAChBC,YAAa,KACbC,UAAW,KACXC,YAAa,KACbC,WAAY,KACZoH,OAAQ,KACRC,GAAI,KACJzjC,KAAM,KACN0jC,GAAI,KACJC,GAAI,KACJC,GAAItd,GACJud,GAAIvd,GACJ+V,UAAW/V,GACXgW,2BAA4B,KAC5BC,yBAA0B,KAC1BuH,SAAU,KACVC,kBAAmB,KACnBC,cAAe,KACfvnB,QAAS,KACTwnB,QAAS5d,GACT6d,kBAAmB,KACnBC,WAAY,KACZlW,OAAQ,KACR31B,KAAM,KACN81B,SAAU,KACVoO,UAAWnW,GACXoW,aAAcpW,GACdqW,aAAcrW,GACd/E,GAAI,KACJ8iB,YAAa/d,GACbsW,eAAgB,KAChB0H,kBAAmB,KACnBC,GAAI,KACJC,IAAK,KACLC,UAAWne,GACXoe,EAAGpe,GACHqe,GAAIre,GACJse,GAAIte,GACJue,GAAIve,GACJwe,GAAIxe,GACJye,aAActe,GACdue,iBAAkB,KAClBC,UAAW,KACXC,WAAY,KACZC,SAAU,KACVC,QAAS,KACT9nB,KAAM,KACN+nB,aAAc,KACdxI,cAAe,KACfC,cAAe,KACfwI,kBAAmBhf,GACnBif,MAAO,KACPxI,UAAW,KACXC,UAAW,KACXC,YAAa,KACbuI,aAAc,KACdC,YAAa,KACbC,YAAa,KACb3e,KAAM,KACN4e,iBAAkB,KAClBC,UAAW,KACXC,aAAc,KACd7jC,IAAK,KACLiR,MAAO,KACP6yB,uBAAwB,KACxBC,sBAAuB,KACvBC,UAAW1f,GACX2f,UAAW,KACXzW,OAAQ,KACRC,IAAK,KACLyW,KAAM,KACNzwC,KAAM,KACNynC,QAAS,KACTC,YAAa,KACbC,aAAc,KACdC,QAAS,KACTC,QAAS,KACTC,QAAS,KACTC,SAAU,KACVC,MAAO,KACPC,UAAW,KACXC,WAAY,KACZwI,WAAY,KACZC,SAAU,KACVvhC,OAAQ,KACRmrB,QAAS,KACT4N,WAAY,KACZ3N,aAAc,KACdE,cAAe,KACf0N,QAAS,KACTvN,SAAU,KACVC,UAAW,KACXC,iBAAkB,KAClBC,SAAU,KACVC,QAAS,KACTC,QAAS,KACTI,OAAQ,KACRC,YAAa,KACbC,MAAO,KACPC,WAAY,KACZC,OAAQ,KACRC,UAAW,KACXC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,OAAQ,KACRC,iBAAkB,KAClBC,UAAW,KACXkM,MAAO,KACPjM,QAAS,KACTC,QAAS,KACTC,QAAS,KACTgM,UAAW,KACXC,WAAY,KACZ/L,aAAc,KACdC,QAAS,KACTC,UAAW,KACXC,UAAW,KACXC,WAAY,KACZC,QAAS,KACTE,OAAQ,KACRC,aAAc,KACdC,iBAAkB,KAClBE,YAAa,KACbC,UAAW,KACXE,YAAa,KACbC,aAAc,KACdC,aAAc,KACdC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,UAAW,KACX4K,aAAc,KACd3K,UAAW,KACXC,SAAU,KACVC,WAAY,KACZC,WAAY,KACZC,QAAS,KACTC,QAAS,KACTC,OAAQ,KACRC,UAAW,KACXC,WAAY,KACZC,WAAY,KACZC,aAAc,KACdkK,SAAU,KACVhK,QAAS,KACTC,SAAU,KACVC,SAAU,KACVE,SAAU,KACVC,UAAW,KACXC,SAAU,KACV2J,OAAQ,KACRzJ,UAAW,KACXC,UAAW,KACXC,SAAU,KACVC,UAAW,KACXC,aAAc,KACdC,SAAU,KACVE,SAAU,KACVC,eAAgB,KAChBC,UAAW,KACXiJ,OAAQ,KACRiI,QAAS,KACTC,SAAU,KACVrtC,MAAO,KACPstC,OAAQ,KACRC,YAAa,KACblxC,OAAQ,KACRmxC,SAAU,KACVC,QAAS,KACTrI,iBAAkB/X,GAClBgY,kBAAmBhY,GACnBiY,WAAY,KACZC,QAAS,KACTnoC,KAAM,KACNswC,WAAYrgB,GACZsgB,oBAAqB,KACrBC,iBAAkB,KAClBC,aAAc,KACdC,MAAO,KACPxR,KAAM/O,GACNwgB,MAAO,KACPrG,cAAe,KACflC,cAAe,KACfwI,OAAQ,KACRC,UAAW5gB,GACX6gB,UAAW7gB,GACX8gB,UAAW9gB,GACX+gB,cAAe,KACfC,oBAAqB,KACrBC,eAAgB,KAChBC,UAAW,KACX3hB,SAAUY,GACVghB,EAAG,KACHC,OAAQ,KACR7R,eAAgB,KAChB8R,KAAM,KACNC,KAAM,KACN9R,IAAKrP,GACL8S,IAAK9S,GACLiY,gBAAiB,KACjBmJ,YAAa,KACbC,UAAW,KACXC,mBAAoBthB,GACpBuhB,iBAAkBvhB,GAClBwhB,cAAexhB,GACfyhB,gBAAiBzhB,GACjB7K,SAAU,KACVusB,QAAS,KACTj1C,OAAQ,KACRk1C,OAAQ,KACRC,GAAI,KACJC,GAAI,KACJC,MAAO,KACPC,KAAM,KACN7J,eAAgB,KAChB8J,KAAM,KACNC,MAAO,KACPC,aAAc,KACdC,iBAAkBtiB,GAClBuiB,iBAAkBviB,GAClBwiB,aAAc,KACdC,QAAS,KACTC,YAAa,KACbC,aAAc,KACdC,MAAO,KACPC,MAAO,KACPC,YAAa,KACbxK,UAAW,KACXC,YAAa,KACbC,sBAAuBxY,GACvByY,uBAAwBzY,GACxBte,OAAQ,KACRqhC,OAAQ,KACRrK,gBAAiBvY,GACjBwY,iBAAkB,KAClBC,cAAe,KACfC,eAAgB,KAChBC,iBAAkB9Y,GAClB+Y,cAAe/Y,GACfgZ,YAAa,KACbvI,MAAO,KACPuS,aAAchjB,GACdijB,aAAc,KACdC,oBAAqB,KACrBC,WAAY,KACZC,cAAe,KACfC,qBAAsB,KACtBC,eAAgBnjB,GAChBuQ,SAAU1Q,GACVujB,YAAa,KACb15C,OAAQ,KACR25C,QAASxjB,GACTyjB,QAASzjB,GACTiZ,WAAY,KACZC,eAAgB,KAChBC,cAAe,KACfuK,WAAY,KACZpJ,cAAe,KACfhzB,MAAO,KACPq8B,kBAAmB,KACnB7qC,KAAM,KACNsgC,OAAQjZ,GACRyjB,GAAI,KACJjjB,UAAW,KACXkjB,GAAI,KACJC,GAAI,KACJzK,kBAAmBrZ,GACnBsZ,mBAAoBtZ,GACpB+jB,QAAS,KACTxK,YAAa,KACbC,aAAc,KACdC,WAAYzZ,GACZ1qB,OAAQ,KACRokC,YAAa1Z,GACb6Z,cAAe7Z,GACf8Z,aAAc,KACdH,SAAU3Z,GACV4Z,aAAc5Z,GACd0T,QAAS,KACTqG,SAAU/Z,GACVga,YAAaha,GACbia,YAAaja,GACbgkB,QAAS,KACTC,WAAY,KACZC,WAAY,KACZpT,MAAO,KACPqT,OAAQ,KACRjK,YAAa,KACbC,YAAa,KACbiK,EAAG,KACHC,GAAI,KACJC,GAAI,KACJC,iBAAkB,KAClBnK,QAASpa,GACTwkB,EAAG,KACHC,GAAI,KACJC,GAAI,KACJC,iBAAkB,KAClBC,EAAG,KACHC,WAAY,QCliBH1yB,GAAOuN,GAAM,CAAC2B,GAAKR,GAAOc,GAAOG,GAAMgjB,IAAW,QAClDxQ,GAAM5U,GAAM,CAAC2B,GAAKR,GAAOc,GAAOG,GAAMijB,IAAU,OCM9C,SAASC,GAAanyC,GACnC,GAAIA,EAAQoyC,iBAAmBpyC,EAAQqyC,mBACrC,MAAM,IAAIv7C,UACR,4EAIJ,GACEkJ,EAAQoyC,iBACRpyC,EAAQqyC,oBACRryC,EAAQsyC,aAER,OAAO,SAAC/sC,GACNihB,GAAMjhB,EAAM,WAAW,SAACP,EAAMtJ,EAAO62C,GACnC,IAEI5rC,EAFE0d,EAAsCkuB,EAc5C,GAVIvyC,EAAQoyC,gBACVzrC,GAAU3G,EAAQoyC,gBAAgB5xC,SAASwE,EAAKwR,SACvCxW,EAAQqyC,qBACjB1rC,EAAS3G,EAAQqyC,mBAAmB7xC,SAASwE,EAAKwR,WAG/C7P,GAAU3G,EAAQsyC,cAAiC,kBAAV52C,IAC5CiL,GAAU3G,EAAQsyC,aAAattC,EAAMtJ,EAAO2oB,IAG1C1d,GAA2B,kBAAVjL,EAAoB,CACQ,MAA/C,GAAIsE,EAAQwyC,kBAAoBxtC,EAAKwB,UACnC,EAAA6d,EAAO7d,UAASC,OAAhB,SAAuB/K,EAAO,GAA9B,eAAoCsJ,EAAKwB,iBAEzC6d,EAAO7d,SAASC,OAAO/K,EAAO,GAGhC,OAAOA,CACR,CAGF,GACF,CAEJ,CCjED,IAAM+2C,GAAY,CAAC,OAAQ,QAAS,SAAU,sBCIvC,SAASC,GAAWC,GAEzB,IAAIv6C,EAEFu6C,GAA0B,kBAAVA,GAAqC,SAAfA,EAAM1sC,KAExC0sC,EAAMv6C,OAAS,GACfu6C,EAIN,MAAwB,kBAAVv6C,GAA4D,KAAtCA,EAAMyc,QAAQ,eAAgB,GACnE,CCRD,IAAM+9B,GAAQ,kBACRC,GAAO,UACPC,GAAM,SA+CZ,SAASC,GAAMp1B,GACb,MAAO,IAAMA,EAAG7I,aACjB,CAMD,SAASk+B,GAAUr1B,GACjB,OAAOA,EAAGs1B,OAAO,GAAGl+B,aACrB,CCnEM,IAAMm+B,GAAc,CACzBrU,QAAS,UACTwD,SAAU,WACV3M,OAAQ,SACRmQ,gBAAiB,kBACjBC,iBAAkB,mBAClBC,cAAe,gBACfC,eAAgB,iBAChBC,iBAAkB,mBAClBM,OAAQ,SACRtY,aAAc,eACdC,aAAc,eACdC,UAAW,YACXC,UAAW,YACXC,UAAW,YACXC,WAAY,aACZC,UAAW,YACXS,WAAY,6BC2FR3rB,GAAM,CAAC,EAAE0C,eAITotC,GAAgB,IAAIC,IAAI,CAAC,QAAS,QAAS,QAAS,QAAS,OAM5D,SAASC,GAAgB9lC,EAASvI,GAOvC,IALA,IAGIklB,EAHE1jB,EAAW,GACb8sC,GAAc,IAITA,EAAatuC,EAAKwB,SAASrP,QAGf,aAFnB+yB,EAAQllB,EAAKwB,SAAS8sC,IAEZrtC,KACRO,EAAS9L,KAAK64C,GAAQhmC,EAAS2c,EAAOopB,EAAYtuC,IAC1B,SAAfklB,EAAMjkB,KASC,YAAdjB,EAAKiB,MACJktC,GAAch4C,IAAI6J,EAAKwR,UACvBk8B,GAAWxoB,IAEZ1jB,EAAS9L,KAAKwvB,EAAM9xB,OAEE,QAAf8xB,EAAMjkB,MAAmBsH,EAAQvN,QAAQwzC,UAElDhtC,EAAS9L,KAAKwvB,EAAM9xB,OAIxB,OAAOoO,CACR,CAQD,SAAS+sC,GAAQhmC,EAASvI,EAAMtJ,EAAO2oB,GACrC,IASIqI,EATE1sB,EAAUuN,EAAQvN,QAClByzC,EAAelmC,EAAQmmC,OAGvBp3C,EAAO0I,EAAKwR,QAEZ2T,EAAa,CAAC,EAChBupB,EAASD,EASb,GAL2B,SAAvBA,EAAa7mB,OAA6B,QAATtwB,IACnCo3C,EAASjS,GACTl0B,EAAQmmC,OAASA,GAGf1uC,EAAKmlB,WACP,IAAKuC,KAAY1nB,EAAKmlB,WAChB9mB,GAAInK,KAAK8L,EAAKmlB,WAAYuC,IAC5BinB,GAAYxpB,EAAYuC,EAAU1nB,EAAKmlB,WAAWuC,GAAWnf,GAKtD,OAATjR,GAA0B,OAATA,GACnBiR,EAAQqmC,YAGV,IAAMptC,EAAW6sC,GAAgB9lC,EAASvI,GAE7B,OAAT1I,GAA0B,OAATA,GACnBiR,EAAQqmC,YAIVrmC,EAAQmmC,OAASD,EAIjB,IA4OuB53C,EA5OjBL,EAAWwJ,EAAKxJ,UAAY,CAChCM,MAAO,CAACH,KAAM,KAAMC,OAAQ,KAAM8P,OAAQ,MAC1C3P,IAAK,CAACJ,KAAM,KAAMC,OAAQ,KAAM8P,OAAQ,OAEpCmoC,EACJ7zC,EAAQ8zC,YAAczwC,GAAInK,KAAK8G,EAAQ8zC,WAAYx3C,GAC/C0D,EAAQ8zC,WAAWx3C,GACnBA,EACAy3C,EAA6B,kBAAdF,GAA0BA,IAAcG,EAAAA,SAE7D,IAAKC,GAAAA,mBAA2BJ,GAC9B,MAAM,IAAI/8C,UAAJ,8BACoBwF,EADpB,uCA4DR,GAvDA6tB,EAAWzyB,IAAM,CACf4E,EACAd,EAASM,MAAMH,KACfH,EAASM,MAAMF,OACfF,GACAuC,KAAK,KAEM,MAAT3B,GAAgB0D,EAAQk0C,aAC1B/pB,EAAWnzB,OACqB,oBAAvBgJ,EAAQk0C,WACXl0C,EAAQk0C,WACNnvC,OAAOolB,EAAW/qB,MAAQ,IAC1B4F,EAAKwB,SACuB,kBAArB2jB,EAAW1V,MAAqB0V,EAAW1V,MAAQ,MAE5DzU,EAAQk0C,YAGH,MAAT53C,GAAgB0D,EAAQm0C,mBAC1BhqB,EAAW/qB,KAAOY,EAAQm0C,iBACxBpvC,OAAOolB,EAAW/qB,MAAQ,IAC1B4F,EAAKwB,SACuB,kBAArB2jB,EAAW1V,MAAqB0V,EAAW1V,MAAQ,OAK3Ds/B,GACQ,SAATz3C,GACgB,YAAhB+nB,EAAOpe,MACY,QAAnBoe,EAAO7N,UAEP2T,EAAWiqB,QAAS,GAInBL,GACS,OAATz3C,GACU,OAATA,GACS,OAATA,GACS,OAATA,GACS,OAATA,GACS,OAATA,IAEF6tB,EAAWkqB,MAAQ1wC,OAAO4Z,SAASjhB,EAAK22C,OAAO,GAAI,KAGxC,QAAT32C,GAAkB0D,EAAQs0C,oBAC5BnqB,EAAWP,IAAM5pB,EAAQs0C,kBACvBvvC,OAAOolB,EAAWP,KAAO,IACzB7kB,OAAOolB,EAAW7jB,KAAO,IACG,kBAArB6jB,EAAW1V,MAAqB0V,EAAW1V,MAAQ,QAIzDs/B,GAAkB,OAATz3C,GAAiC,YAAhB+nB,EAAOpe,KAAoB,CACxD,IAAMsuC,EA0DV,SAAyBvvC,GACvB,IAAItJ,GAAS,EAEb,OAASA,EAAQsJ,EAAKwB,SAASrP,QAAQ,CACrC,IAAM+yB,EAAQllB,EAAKwB,SAAS9K,GAE5B,GAAmB,YAAfwuB,EAAMjkB,MAAwC,UAAlBikB,EAAM1T,QACpC,OAAO0T,CAEV,CAED,OAAO,IACR,CAtEiBsqB,CAAgBxvC,GAC9BmlB,EAAWxF,QACT4vB,GAASA,EAAMpqB,WAAanxB,QAAQu7C,EAAMpqB,WAAWxF,SAAW,KAClEwF,EAAWzuB,MAAQ+4C,GAAuBpwB,EAAQrf,GAClDmlB,EAAW1F,QAA6B,OAAnBJ,EAAO7N,OAC7B,CA4CD,OA1CKu9B,GAAmB,OAATz3C,GAA0B,OAATA,IAC9B6tB,EAAW1F,QAAmB,OAATnoB,EACrB6tB,EAAW/F,MAAQ7W,EAAQqmC,WAGhB,OAATt3C,GAA0B,OAATA,IACf6tB,EAAWI,QACRJ,EAAWyT,QAAOzT,EAAWyT,MAAQ,CAAC,GAE3CzT,EAAWyT,MAAM8W,UAAYvqB,EAAWI,aACjCJ,EAAWI,OAGfwpB,IACH5pB,EAAWwqB,SAAoB,OAATr4C,IAIrBy3C,GAAkB,OAATz3C,GAAiC,YAAhB+nB,EAAOpe,OACpCkkB,EAAWwqB,SAAW37C,QAA2B,UAAnBqrB,EAAO7N,UAInCxW,EAAQ40C,YACVzqB,EAAW,kBAsIN,EADgBtuB,EArI0BL,GAuI3CM,MAAMH,KACV,IACAE,EAAIC,MAAMF,OACV,IACAC,EAAIE,IAAIJ,KACR,IACAE,EAAIE,IAAIH,QAEP0E,KAAI,SAACyjB,GAAD,OAAOhf,OAAOgf,EAAd,IACJ9lB,KAAK,MA7IH81C,GAAS/zC,EAAQ60C,eACpB1qB,EAAW2qB,eAAiB9vC,EAAKxJ,WAI9Bu4C,GAAS/zC,EAAQ+0C,sBACpB5qB,EAAWzuB,MAAQ+4C,GAAuBpwB,EAAQrf,GAClDmlB,EAAW6qB,aAAeP,GAAuBpwB,IAG9C0vB,IACH5pB,EAAWnlB,KAAOA,GAIbwB,EAASrP,OAAS,EACrB68C,EAAAA,cAAoBH,EAAW1pB,EAAY3jB,GAC3CwtC,EAAAA,cAAoBH,EAAW1pB,EACpC,CAyBD,SAASsqB,GAAuBpwB,EAAQrf,GAItC,IAHA,IAAItJ,GAAS,EACTu5C,EAAQ,IAEHv5C,EAAQ2oB,EAAO7d,SAASrP,QAC3BktB,EAAO7d,SAAS9K,KAAWsJ,GACK,YAAhCqf,EAAO7d,SAAS9K,GAAOuK,MAAoBgvC,IAGjD,OAAOA,CACR,CAQD,SAAStB,GAAY18C,EAAOsJ,EAAMnI,EAAOuzB,GACvC,IAAMzb,EF/VD,SAAcwjC,EAAQt7C,GAC3B,IAAMu0B,EAASvuB,GAAUhG,GACrBmI,EAAOnI,EACP88C,EAAOpoB,GAEX,GAAIH,KAAU+mB,EAAO/mB,OACnB,OAAO+mB,EAAOhnB,SAASgnB,EAAO/mB,OAAOA,IAGvC,GAAIA,EAAOx1B,OAAS,GAA4B,SAAvBw1B,EAAOtwB,MAAM,EAAG,IAAiBu2C,GAAMpqC,KAAKpQ,GAAQ,CAE3E,GAAwB,MAApBA,EAAM66C,OAAO,GAAY,CAE3B,IAAMkC,EAAO/8C,EAAMiE,MAAM,GAAGwY,QAAQg+B,GAAMG,IAC1CzyC,EAAO,OAAS40C,EAAKlC,OAAO,GAAGl+B,cAAgBogC,EAAK94C,MAAM,EAC3D,KAAM,CAEL,IAAM84C,EAAO/8C,EAAMiE,MAAM,GAEzB,IAAKw2C,GAAKrqC,KAAK2sC,GAAO,CACpB,IAAIC,EAASD,EAAKtgC,QAAQi+B,GAAKC,IAEN,MAArBqC,EAAOnC,OAAO,KAChBmC,EAAS,IAAMA,GAGjBh9C,EAAQ,OAASg9C,CAClB,CACF,CAEDF,EAAOvnB,EACR,CAED,OAAO,IAAIunB,EAAK30C,EAAMnI,EACvB,CE6Tci9C,CAAK1pB,EAAI+nB,OAAQnzC,GAC1BxG,EAAS3B,EAIE,OAAX2B,QAA8BgB,IAAXhB,GAAwBA,IAAWA,IAMtDgK,MAAMC,QAAQjK,KAChBA,EAASmW,EAAKkd,eC3UX,SAAmB3qB,EAAQzC,GAChC,IAAI6D,EAAW7D,GAAW,CAAC,EAO3B,MAJkC,KAA9ByC,EAAOA,EAAOtL,OAAS,KACzBsL,EAASA,EAAOsiB,OAAO,KAGlBtiB,EACJxE,MACE4F,EAASyxC,SAAW,IAAM,IACzB,MACsB,IAArBzxC,EAAS0xC,QAAoB,GAAK,MAEtCC,MACJ,CD4TkCC,CAAO17C,GAAiBA,EE1W3CkE,KAAK,KAAKu3C,QF6WF,UAAlBtlC,EAAKwc,UAA0C,kBAAX3yB,IACtCA,EAkBJ,SAAoB3B,GAElB,IAAM2B,EAAS,CAAC,EAEhB,IACE6jC,GAAMxlC,EAAOmB,EAGd,CAFC,SAED,CAED,OAAOQ,EAMP,SAASR,EAAS+C,EAAMo5C,GACtB,IAAMnK,EAAyB,SAArBjvC,EAAKD,MAAM,EAAG,GAAd,aAAoCC,EAAKD,MAAM,IAAOC,EAChEvC,EAAOwxC,EAAE12B,QAAQ,YAAa8gC,KAAkBD,CACjD,CACF,CAtCYE,CAAW77C,IAGlBmW,EAAK0c,OAAS1c,EAAKwc,SACrBz1B,EACEoM,GAAInK,KAAKg6C,GAAahjC,EAAKwc,UACvBwmB,GAAYhjC,EAAKwc,UACjBxc,EAAKwc,UACP3yB,EACKmW,EAAK6c,YACd91B,EAAMiZ,EAAK6c,WAAahzB,GAE3B,CAgCD,SAAS47C,GAAczkC,EAAG0M,GACxB,OAAOA,EAAG7I,aACX,CGzYD,IAAM1R,GAAM,CAAC,EAAE0C,eAKT8vC,GAAa,CACjBvxC,QAAS,CAACysC,GAAI,UAAW3oB,GAAI,mCAC7B0tB,UAAW,CAAC/E,GAAI,aAAc3oB,GAAI,kCAClC2tB,WAAY,CAAC3tB,GAAI,wCACjB+C,mBAAoB,CAAC/C,GAAI,wCACzB4tB,WAAY,CAAC5tB,GAAI,wCACjB1rB,OAAQ,CAACq0C,GAAI,WAAY3oB,GAAI,6BAC7B6tB,UAAW,CACTlF,GAAI,eACJ3oB,GAAI,sDAEN8tB,aAAc,CACZnF,GAAI,kBACJ3oB,GAAI,sDAEN+tB,gBAAiB,CACfpF,GAAI,qBACJ3oB,GAAI,sDAENguB,iBAAkB,CAChBrF,GAAI,sBACJ3oB,GAAI,mDAUD,SAASiuB,GAAcr2C,GAC5B,IAAK,IAAMtI,KAAOm+C,GAChB,GAAIxyC,GAAInK,KAAK28C,GAAYn+C,IAAQ2L,GAAInK,KAAK8G,EAAStI,GAAM,CACvD,IAAM4+C,EAAcT,GAAWn+C,GAC/B6+C,QAAQC,KAAR,2CAEIF,EAAYvF,GAAZ,eAA0BuF,EAAYvF,GAAtC,gBAA0D,SAF9D,aAGQr5C,EAHR,mBAtCJ,oEAsCI,YAGoC4+C,EAAYluB,GAHhD,4BAKOytB,GAAWn+C,EACnB,CAGH,IAAMyL,EAAYjB,IACfW,IAAI4zC,IACJ5zC,IAAI7C,EAAQ02C,eAAiB,IAC7B7zC,IAAI8zC,IAHW,kBAIX32C,EAAQ42C,qBAJG,IAKdzrB,oBAAoB,KAErBtoB,IAAI7C,EAAQ62C,eAAiB,IAC7Bh0C,IAAIsvC,GAAcnyC,GAEflD,EAAO,IAAIiD,EAEe,kBAArBC,EAAQwG,SACjB1J,EAAK1E,MAAQ4H,EAAQwG,cACSzL,IAArBiF,EAAQwG,UAA+C,OAArBxG,EAAQwG,UACnD+vC,QAAQC,KAAR,8EAC4Ex2C,EAAQwG,SADpF,OAKF,IAAMswC,EAAW3zC,EAAUqC,QAAQrC,EAAUuB,MAAM5H,GAAOA,GAE1D,GAAsB,SAAlBg6C,EAAS7wC,KACX,MAAM,IAAInP,UAAU,0BAItB,IAAIiD,EAASi6C,EAAAA,cACXA,EAAAA,SACA,CAAC,EACDX,GAAgB,CAACrzC,QAAAA,EAAS0zC,OAAQp0B,GAAMs0B,UAAW,GAAIkD,IAOzD,OAJI92C,EAAQqpB,YACVtvB,EAASi6C,EAAAA,cAAoB,MAAO,CAAC3qB,UAAWrpB,EAAQqpB,WAAYtvB,IAG/DA,CACR,CAEDs8C,GAAcU,aAAe,CAAC5C,iBPxHvB,SAAwB6C,GAC7B,IAAMj6C,GAAOi6C,GAAO,IAAIxB,OAClByB,EAAQl6C,EAAIk2C,OAAO,GAEzB,GAAc,MAAVgE,GAA2B,MAAVA,EACnB,OAAOl6C,EAGT,IAAM8qB,EAAQ9qB,EAAI7B,QAAQ,KAC1B,IAAe,IAAX2sB,EACF,OAAO9qB,EAKT,IAFA,IAAIrB,GAAS,IAEJA,EAAQ+2C,GAAUt7C,QAAQ,CACjC,IAAMqI,EAAWizC,GAAU/2C,GAE3B,GACEmsB,IAAUroB,EAASrI,QACnB4F,EAAIV,MAAM,EAAGmD,EAASrI,QAAQ2d,gBAAkBtV,EAEhD,OAAOzC,CAEV,CAGD,OAAe,KADfrB,EAAQqB,EAAI7B,QAAQ,OACA2sB,EAAQnsB,IAKb,KADfA,EAAQqB,EAAI7B,QAAQ,OACA2sB,EAAQnsB,EAJnBqB,EASF,oBACR,GOoFDs5C,GAAca,UAAY,CAExB1wC,SAAU2wC,GAAAA,OAEV9tB,UAAW8tB,GAAAA,OAEX7E,aAAc6E,GAAAA,KACd/E,gBAAiB+E,GAAAA,QAAkBA,GAAAA,QACnC9E,mBAAoB8E,GAAAA,QAAkBA,GAAAA,QACtC3E,iBAAkB2E,GAAAA,KAElBT,cAAeS,GAAAA,QACbA,GAAAA,UAAoB,CAClBA,GAAAA,OACAA,GAAAA,KACAA,GAAAA,QACEA,GAAAA,UAAoB,CAClBA,GAAAA,KACAA,GAAAA,OACAA,GAAAA,OACAA,GAAAA,KACAA,GAAAA,QAGEA,GAAAA,WAMVN,cAAeM,GAAAA,QACbA,GAAAA,UAAoB,CAClBA,GAAAA,OACAA,GAAAA,KACAA,GAAAA,QACEA,GAAAA,UAAoB,CAClBA,GAAAA,KACAA,GAAAA,OACAA,GAAAA,OACAA,GAAAA,KACAA,GAAAA,QAGEA,GAAAA,WAOVvC,UAAWuC,GAAAA,KACXtC,aAAcsC,GAAAA,KACd3D,SAAU2D,GAAAA,KACVpC,oBAAqBoC,GAAAA,KACrBhD,iBAAkBgD,GAAAA,UAAoB,CAACA,GAAAA,KAAgBA,GAAAA,OACvDjD,WAAYiD,GAAAA,UAAoB,CAACA,GAAAA,KAAgBA,GAAAA,SACjD7C,kBAAmB6C,GAAAA,KACnBrD,WAAYqD,GAAAA,qCCzJd,GAvBkB,WACd,MCRG,SACHp6C,GAEA,OAAwBq6C,EAAAA,EAAAA,UAAS,IAAjC,eAAOl3C,EAAP,KAAakjB,EAAb,KACA,GAA8Bg0B,EAAAA,EAAAA,WAAS,GAAvC,eAAOphB,EAAP,KAAgBqhB,EAAhB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAO73C,EAAP,KAAc+3C,EAAd,KAEA,SAASC,EAAqBC,GAC1BA,EACKzoC,OACA/M,MAAK,SAAC9B,GAAD,OAAUkjB,EAAQljB,EAAlB,IACLu3C,OAAM,SAACl4C,GAAD,OAAW+3C,EAAS/3C,EAApB,IACNm4C,SAAQ,kBAAML,GAAW,EAAjB,GAChB,CAUD,OARAM,EAAAA,EAAAA,YAAU,WACNN,GAAW,GACXO,MAAM76C,GACDiF,KAAKu1C,GACLE,OAAM,SAACl4C,GAAD,OAAW+3C,EAAS/3C,EAApB,IACNm4C,SAAQ,kBAAML,GAAW,EAAjB,GAChB,GAAE,CAACt6C,IAEG,CAACmD,EAAM81B,EAASz2B,EAC1B,CDhB0Cs4C,CAASC,EAAAA,IAAhD,eAAOC,EAAP,KAAqB/hB,EAArB,KAA8Bz2B,EAA9B,KAEA,OACI,kBAAK8pB,UAAW2uB,EAAhB,UACKhiB,GACG,UAAC,KAAD,IACAz2B,GACA,gBAAI8pB,UAAW2uB,EAAf,+NAIA,UAAC3B,GAAD,CAAehtB,UAAU,gBAAzB,SACK0uB,KAGT,UAAC,KAAD,CAAM1uB,UAAW2uB,EAAiBjH,GAAG,SAArC,oBAKX,iCE5BD,IAAIkH,EAASzgD,OAAOM,UAAUiO,eAC1BmyC,EAAQ1gD,OAAOM,UAAUmD,SACzBxD,EAAiBD,OAAOC,eACxB0gD,EAAO3gD,OAAO4gD,yBAEdp0C,EAAU,SAAiBjD,GAC9B,MAA6B,oBAAlBgD,MAAMC,QACTD,MAAMC,QAAQjD,GAGK,mBAApBm3C,EAAMh/C,KAAK6H,EAClB,EAEGM,EAAgB,SAAuBhI,GAC1C,IAAKA,GAA2B,oBAApB6+C,EAAMh/C,KAAKG,GACtB,OAAO,EAGR,IASI3B,EATA2gD,EAAoBJ,EAAO/+C,KAAKG,EAAK,eACrCi/C,EAAmBj/C,EAAIlB,aAAekB,EAAIlB,YAAYL,WAAamgD,EAAO/+C,KAAKG,EAAIlB,YAAYL,UAAW,iBAE9G,GAAIuB,EAAIlB,cAAgBkgD,IAAsBC,EAC7C,OAAO,EAMR,IAAK5gD,KAAO2B,GAEZ,MAAsB,qBAAR3B,GAAuBugD,EAAO/+C,KAAKG,EAAK3B,EACtD,EAGG6gD,EAAc,SAAqBvhD,EAAQgJ,GAC1CvI,GAAmC,cAAjBuI,EAAQ1D,KAC7B7E,EAAeT,EAAQgJ,EAAQ1D,KAAM,CACpCjF,YAAY,EACZC,cAAc,EACdc,MAAO4H,EAAQw4C,SACfjhD,UAAU,IAGXP,EAAOgJ,EAAQ1D,MAAQ0D,EAAQw4C,QAEhC,EAGGC,EAAc,SAAqBp/C,EAAKiD,GAC3C,GAAa,cAATA,EAAsB,CACzB,IAAK27C,EAAO/+C,KAAKG,EAAKiD,GACrB,OACM,GAAI67C,EAGV,OAAOA,EAAK9+C,EAAKiD,GAAMlE,KAExB,CAED,OAAOiB,EAAIiD,EACX,EAEDo8C,EAAOC,QAAU,SAASl0C,IACzB,IAAIzE,EAAS1D,EAAMstB,EAAKgvB,EAAMC,EAAaC,EACvC9hD,EAASmD,UAAU,GACnBjD,EAAI,EACJC,EAASgD,UAAUhD,OACnB4hD,GAAO,EAaX,IAVsB,mBAAX/hD,IACV+hD,EAAO/hD,EACPA,EAASmD,UAAU,IAAM,CAAC,EAE1BjD,EAAI,IAES,MAAVF,GAAqC,kBAAXA,GAAyC,oBAAXA,KAC3DA,EAAS,CAAC,GAGJE,EAAIC,IAAUD,EAGpB,GAAe,OAFf8I,EAAU7F,UAAUjD,IAInB,IAAKoF,KAAQ0D,EACZ4pB,EAAM6uB,EAAYzhD,EAAQsF,GAItBtF,KAHJ4hD,EAAOH,EAAYz4C,EAAS1D,MAKvBy8C,GAAQH,IAASv3C,EAAcu3C,KAAUC,EAAc70C,EAAQ40C,MAC9DC,GACHA,GAAc,EACdC,EAAQlvB,GAAO5lB,EAAQ4lB,GAAOA,EAAM,IAEpCkvB,EAAQlvB,GAAOvoB,EAAcuoB,GAAOA,EAAM,CAAC,EAI5C2uB,EAAYvhD,EAAQ,CAAEsF,KAAMA,EAAMk8C,SAAU/zC,EAAOs0C,EAAMD,EAAOF,MAGtC,qBAATA,GACjBL,EAAYvhD,EAAQ,CAAEsF,KAAMA,EAAMk8C,SAAUI,KAQjD,OAAO5hD,CACP,oBClHD,IAAIgiD,EAAgB,kCAEhBC,EAAgB,MAChBC,EAAmB,OAGnBC,EAAiB,yCACjBC,EAAc,QACdC,EAAc,uDACdC,EAAkB,UAGlBC,EAAa,aAMbC,EAAe,GA8OnB,SAAShE,EAAKiE,GACZ,OAAOA,EAAMA,EAAI5kC,QAAQ0kC,EAAYC,GAAgBA,CACtD,CAnODd,EAAOC,QAAU,SAAS/a,EAAO59B,GAC/B,GAAqB,kBAAV49B,EACT,MAAM,IAAI9mC,UAAU,mCAGtB,IAAK8mC,EAAO,MAAO,GAEnB59B,EAAUA,GAAW,CAAC,EAKtB,IAAI05C,EAAS,EACT99C,EAAS,EAOb,SAAS+9C,EAAeF,GACtB,IAAI5uB,EAAQ4uB,EAAIx0B,MAAMg0B,GAClBpuB,IAAO6uB,GAAU7uB,EAAM1zB,QAC3B,IAAID,EAAIuiD,EAAI76C,YAvCF,MAwCVhD,GAAU1E,EAAIuiD,EAAItiD,OAASD,EAAI0E,EAAS69C,EAAItiD,MAC7C,CAOD,SAASqE,IACP,IAAIM,EAAQ,CAAEH,KAAM+9C,EAAQ99C,OAAQA,GACpC,OAAO,SAASoJ,GAGd,OAFAA,EAAKxJ,SAAW,IAAIo+C,EAAS99C,GAC7B42C,IACO1tC,CACR,CACF,CAUD,SAAS40C,EAAS99C,GAChB5B,KAAK4B,MAAQA,EACb5B,KAAK6B,IAAM,CAAEJ,KAAM+9C,EAAQ99C,OAAQA,GACnC1B,KAAKwC,OAASsD,EAAQtD,MACvB,CAKDk9C,EAAS9hD,UAAUsR,QAAUw0B,EAE7B,IAAIic,EAAa,GAQjB,SAASt6C,EAAMu6C,GACb,IAAIC,EAAM,IAAI98C,MACZ+C,EAAQtD,OAAS,IAAMg9C,EAAS,IAAM99C,EAAS,KAAOk+C,GAQxD,GANAC,EAAI99C,OAAS69C,EACbC,EAAIC,SAAWh6C,EAAQtD,OACvBq9C,EAAIp+C,KAAO+9C,EACXK,EAAIn+C,OAASA,EACbm+C,EAAIr9C,OAASkhC,GAET59B,EAAQi6C,OAGV,MAAMF,EAFNF,EAAWn/C,KAAKq/C,EAInB,CAQD,SAAS90B,EAAMi1B,GACb,IAAIC,EAAID,EAAG90B,KAAKwY,GAChB,GAAKuc,EAAL,CACA,IAAIV,EAAMU,EAAE,GAGZ,OAFAR,EAAeF,GACf7b,EAAQA,EAAMvhC,MAAMo9C,EAAItiD,QACjBgjD,CAJO,CAKf,CAKD,SAASzH,IACPztB,EAAMi0B,EACP,CAQD,SAASkB,EAAS9Z,GAChB,IAAI+Z,EAEJ,IADA/Z,EAAQA,GAAS,GACT+Z,EAAIv+B,MACA,IAANu+B,GACF/Z,EAAM5lC,KAAK2/C,GAGf,OAAO/Z,CACR,CAQD,SAASxkB,IACP,IAAIjgB,EAAML,IACV,GAnJgB,KAmJKoiC,EAAMqV,OAAO,IAlJvB,KAkJyCrV,EAAMqV,OAAO,GAAjE,CAGA,IADA,IAAI/7C,EAAI,EAENsiD,GAAgB5b,EAAMqV,OAAO/7C,KAtJpB,KAuJI0mC,EAAMqV,OAAO/7C,IAxJZ,KAwJmC0mC,EAAMqV,OAAO/7C,EAAI,OAEhEA,EAIJ,GAFAA,GAAK,EAEDsiD,IAAiB5b,EAAMqV,OAAO/7C,EAAI,GACpC,OAAOqI,EAAM,0BAGf,IAAIk6C,EAAM7b,EAAMvhC,MAAM,EAAGnF,EAAI,GAM7B,OALA0E,GAAU,EACV+9C,EAAeF,GACf7b,EAAQA,EAAMvhC,MAAMnF,GACpB0E,GAAU,EAEHC,EAAI,CACToK,KApKa,UAqKb6V,QAAS29B,GAvBgE,CAyB5E,CAQD,SAAS99B,IACP,IAAI9f,EAAML,IAGN+E,EAAO0kB,EAAMk0B,GACjB,GAAK54C,EAAL,CAIA,GAHAub,KAGKmJ,EAAMm0B,GAAc,OAAO75C,EAAM,wBAGtC,IAAI+6C,EAAMr1B,EAAMo0B,GAEZkB,EAAM1+C,EAAI,CACZoK,KA7LiB,cA8LjBymB,SAAU8oB,EAAKj1C,EAAK,GAAGsU,QAAQmkC,EAAeQ,IAC9CphD,MAAOkiD,EACH9E,EAAK8E,EAAI,GAAGzlC,QAAQmkC,EAAeQ,IACnCA,IAMN,OAFAv0B,EAAMq0B,GAECiB,CApBU,CAqBlB,CAyBD,OADA7H,IAjBA,WACE,IAKI8H,EALAC,EAAQ,GAMZ,IAJAL,EAASK,GAIDD,EAAO7+B,MACA,IAAT6+B,IACFC,EAAM//C,KAAK8/C,GACXJ,EAASK,IAIb,OAAOA,CACR,CAGMC,EACR,oBCnPDhC,EAAOC,QAAU,SAAmBt/C,GAClC,OAAc,MAAPA,GAAkC,MAAnBA,EAAIlB,aACY,oBAA7BkB,EAAIlB,YAAYyN,UAA2BvM,EAAIlB,YAAYyN,SAASvM,EAC9E,iCCND,IAAIshD,EAAc,CAAC,EAsCnB,SAASlzB,EAAO5Y,EAAQ+rC,EAASC,GAC/B,IAAI3jD,EAAG4jD,EAAG98C,EAAM+8C,EAAUzvB,EACtBvxB,EAAS,GAcb,IAZuB,kBAAZ6gD,IAETC,EAAeD,EACfA,EAAUnzB,EAAOuzB,cAGQ,qBAAhBH,IACTA,GAAc,GAGhBvvB,EA9CF,SAAwBsvB,GACtB,IAAI1jD,EAAG+jD,EAAI3vB,EAAQqvB,EAAYC,GAC/B,GAAItvB,EAAS,OAAOA,EAIpB,IAFAA,EAAQqvB,EAAYC,GAAW,GAE1B1jD,EAAI,EAAGA,EAAI,IAAKA,IACnB+jD,EAAKl2C,OAAO0D,aAAavR,GAErB,cAAcsR,KAAKyyC,GAErB3vB,EAAM5wB,KAAKugD,GAEX3vB,EAAM5wB,KAAK,KAAO,IAAMxD,EAAE+D,SAAS,IAAI8Z,eAAe1Y,OAAO,IAIjE,IAAKnF,EAAI,EAAGA,EAAI0jD,EAAQzjD,OAAQD,IAC9Bo0B,EAAMsvB,EAAQr9C,WAAWrG,IAAM0jD,EAAQ1jD,GAGzC,OAAOo0B,CACR,CAwBS4vB,CAAeN,GAElB1jD,EAAI,EAAG4jD,EAAIjsC,EAAO1X,OAAQD,EAAI4jD,EAAG5jD,IAGpC,GAFA8G,EAAO6Q,EAAOtR,WAAWrG,GAErB2jD,GAAwB,KAAT78C,GAAyB9G,EAAI,EAAI4jD,GAC9C,iBAAiBtyC,KAAKqG,EAAOxS,MAAMnF,EAAI,EAAGA,EAAI,IAChD6C,GAAU8U,EAAOxS,MAAMnF,EAAGA,EAAI,GAC9BA,GAAK,OAKT,GAAI8G,EAAO,IACTjE,GAAUuxB,EAAMttB,QAIlB,GAAIA,GAAQ,OAAUA,GAAQ,MAA9B,CACE,GAAIA,GAAQ,OAAUA,GAAQ,OAAU9G,EAAI,EAAI4jD,IAC9CC,EAAWlsC,EAAOtR,WAAWrG,EAAI,KACjB,OAAU6jD,GAAY,MAAQ,CAC5ChhD,GAAU4tB,mBAAmB9Y,EAAO3X,GAAK2X,EAAO3X,EAAI,IACpDA,IACA,QACD,CAEH6C,GAAU,WAEX,MAEDA,GAAU4tB,mBAAmB9Y,EAAO3X,IAGtC,OAAO6C,CACR,CAED0tB,EAAOuzB,aAAiB,uBACxBvzB,EAAO0zB,eAAiB,YAGxBzC,EAAOC,QAAUlxB,mCCxFJ,IAA4bhC,EAAxb21B,EAAE9hD,OAAO+hD,IAAI,iBAAiBhB,EAAE/gD,OAAO+hD,IAAI,gBAAgBt3B,EAAEzqB,OAAO+hD,IAAI,kBAAkBliD,EAAEG,OAAO+hD,IAAI,qBAAqBC,EAAEhiD,OAAO+hD,IAAI,kBAAkBE,EAAEjiD,OAAO+hD,IAAI,kBAAkBr0B,EAAE1tB,OAAO+hD,IAAI,iBAAiB9P,EAAEjyC,OAAO+hD,IAAI,wBAAwBP,EAAExhD,OAAO+hD,IAAI,qBAAqBlB,EAAE7gD,OAAO+hD,IAAI,kBAAkBG,EAAEliD,OAAO+hD,IAAI,uBAAuBI,EAAEniD,OAAO+hD,IAAI,cAAcK,EAAEpiD,OAAO+hD,IAAI,cAAcM,EAAEriD,OAAO+hD,IAAI,mBACtb,SAAS3F,EAAEj7C,GAAG,GAAG,kBAAkBA,GAAG,OAAOA,EAAE,CAAC,IAAI6zC,EAAE7zC,EAAEmhD,SAAS,OAAOtN,GAAG,KAAK8M,EAAE,OAAO3gD,EAAEA,EAAEwL,MAAQ,KAAK8d,EAAE,KAAKu3B,EAAE,KAAKniD,EAAE,KAAKghD,EAAE,KAAKqB,EAAE,OAAO/gD,EAAE,QAAQ,OAAOA,EAAEA,GAAGA,EAAEmhD,UAAY,KAAKrQ,EAAE,KAAKvkB,EAAE,KAAK8zB,EAAE,KAAKY,EAAE,KAAKD,EAAE,KAAKF,EAAE,OAAO9gD,EAAE,QAAQ,OAAO6zC,GAAG,KAAK+L,EAAE,OAAO/L,EAAG,CAAC,CADiM7oB,EAAEnsB,OAAO+hD,IAAI,0BAC9M1C,EAAQkD,gBAAgB70B,EAAE2xB,EAAQmD,gBAAgBP,EAAE5C,EAAQoD,QAAQX,EAAEzC,EAAQqD,WAAWlB,EAAEnC,EAAQsD,SAASl4B,EAAE40B,EAAQuD,KAAKR,EAAE/C,EAAQwD,KAAKV,EAAE9C,EAAQyD,OAAO/B,EAAE1B,EAAQ0D,SAASf,EAAE3C,EAAQ2D,WAAWnjD,EAAEw/C,EAAQ4D,SAASpC,EAChexB,EAAQ6D,aAAahB,EAAE7C,EAAQ8D,YAAY,WAAW,OAAM,CAAG,EAAC9D,EAAQ+D,iBAAiB,WAAW,OAAM,CAAG,EAAC/D,EAAQgE,kBAAkB,SAASliD,GAAG,OAAOi7C,EAAEj7C,KAAKusB,CAAE,EAAC2xB,EAAQiE,kBAAkB,SAASniD,GAAG,OAAOi7C,EAAEj7C,KAAK8gD,CAAE,EAAC5C,EAAQkE,UAAU,SAASpiD,GAAG,MAAM,kBAAkBA,GAAG,OAAOA,GAAGA,EAAEmhD,WAAWR,CAAE,EAACzC,EAAQmE,aAAa,SAASriD,GAAG,OAAOi7C,EAAEj7C,KAAKqgD,CAAE,EAACnC,EAAQoE,WAAW,SAAStiD,GAAG,OAAOi7C,EAAEj7C,KAAKspB,CAAE,EAAC40B,EAAQqE,OAAO,SAASviD,GAAG,OAAOi7C,EAAEj7C,KAAKihD,CAAE,EAAC/C,EAAQsE,OAAO,SAASxiD,GAAG,OAAOi7C,EAAEj7C,KAAKghD,CAAE,EACxe9C,EAAQuE,SAAS,SAASziD,GAAG,OAAOi7C,EAAEj7C,KAAK4/C,CAAE,EAAC1B,EAAQwE,WAAW,SAAS1iD,GAAG,OAAOi7C,EAAEj7C,KAAK6gD,CAAE,EAAC3C,EAAQyE,aAAa,SAAS3iD,GAAG,OAAOi7C,EAAEj7C,KAAKtB,CAAE,EAACw/C,EAAQ0E,WAAW,SAAS5iD,GAAG,OAAOi7C,EAAEj7C,KAAK0/C,CAAE,EAACxB,EAAQ2E,eAAe,SAAS7iD,GAAG,OAAOi7C,EAAEj7C,KAAK+gD,CAAE,EACnP7C,EAAQ4E,mBAAmB,SAAS9iD,GAAG,MAAM,kBAAkBA,GAAG,oBAAoBA,GAAGA,IAAIspB,GAAGtpB,IAAI6gD,GAAG7gD,IAAItB,GAAGsB,IAAI0/C,GAAG1/C,IAAI+gD,GAAG/gD,IAAIkhD,GAAG,kBAAkBlhD,GAAG,OAAOA,IAAIA,EAAEmhD,WAAWF,GAAGjhD,EAAEmhD,WAAWH,GAAGhhD,EAAEmhD,WAAWL,GAAG9gD,EAAEmhD,WAAW50B,GAAGvsB,EAAEmhD,WAAWd,GAAGrgD,EAAEmhD,WAAWn2B,QAAG,IAAShrB,EAAE+iD,YAAmB,EAAC7E,EAAQpS,OAAOmP,qCCV/SgD,EAAOC,QAAU,EAAjBD,4BCHF,IAAIh0C,EAAQ+4C,EAAQ,MAyCpB/E,EAAOC,QA5BP,SAAuB/a,EAAOrkC,GAC5B,IAKIoiB,EALA1Z,EAAS,KACb,IAAK27B,GAA0B,kBAAVA,EACnB,OAAO37B,EAST,IALA,IAEIyqB,EACAt0B,EAHAsiD,EAAeh2C,EAAMk5B,GACrB8f,EAAkC,oBAAbnkD,EAIhBrC,EAAI,EAAGymD,EAAMjD,EAAavjD,OAAQD,EAAIymD,EAAKzmD,IAElDw1B,GADA/Q,EAAc++B,EAAaxjD,IACJw1B,SACvBt0B,EAAQujB,EAAYvjB,MAEhBslD,EACFnkD,EAASmzB,EAAUt0B,EAAOujB,GACjBvjB,IACT6J,IAAWA,EAAS,CAAC,GACrBA,EAAOyqB,GAAYt0B,GAIvB,OAAO6J,CACR,qCCvCc,SAAS27C,EAAiBC,GACvC,GAAsB,qBAAXvkD,QAAmD,MAAzBukD,EAAKvkD,OAAOC,WAA2C,MAAtBskD,EAAK,cAAuB,OAAO95C,MAAM+C,KAAK+2C,EACtH,wICEe,SAASC,EAAmB/8C,GACzC,OCJa,SAA4BA,GACzC,GAAIgD,MAAMC,QAAQjD,GAAM,OAAO,EAAAg9C,EAAA,GAAiBh9C,EAClD,CDES,CAAkBA,KAAQ,EAAAE,EAAA,GAAgBF,KAAQ,EAAAG,EAAA,GAA2BH,IELvE,WACb,MAAM,IAAIjK,UAAU,uIACtB,CFG8F,EAC9F","sources":["webpack://points-client/./src/pages/About/About.module.css?f428","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/unist-util-stringify-position/index.js","../node_modules/vfile-message/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/bail/index.js","../node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/unified/lib/index.js","../node_modules/mdast-util-to-string/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/micromark/lib/parse.js","../node_modules/remark-parse/index.js","../node_modules/remark-parse/lib/index.js","../node_modules/unist-builder/index.js","../node_modules/unist-util-is/index.js","../node_modules/unist-util-visit-parents/index.js","../node_modules/unist-util-visit/index.js","../node_modules/unist-util-position/index.js","../node_modules/mdast-util-definitions/index.js","../node_modules/mdast-util-to-hast/lib/traverse.js","../node_modules/micromark-util-encode/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/mdast-util-to-hast/lib/wrap.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/unist-util-generated/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/hast-util-whitespace/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/comma-separated-tokens/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/react-markdown/lib/react-markdown.js","pages/About/About.tsx","hooks/useFetch.ts","../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/is-buffer/index.js","../node_modules/mdurl/encode.js","../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-markdown/node_modules/react-is/index.js","../node_modules/style-to-object/index.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"About_content__VrTYQ\",\"error\":\"About_error__WZp2J\",\"backLink\":\"About_backLink__MTwXH\"};","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Constructor of a message for `reason` at `place` from `origin`.\n   * When an error is passed in as `reason`, copies the `stack`.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    this.message = typeof reason === 'object' ? reason.message : reason\n    this.stack = typeof reason === 'object' ? reason.stack : ''\n\n    /**\n     * Reason for message.\n     * @type {string}\n     */\n    this.reason = this.message\n    /**\n     * If true, marks associated file as no longer processable.\n     * @type {boolean?}\n     */\n    // eslint-disable-next-line no-unused-expressions\n    this.fatal\n    /**\n     * Starting line of error.\n     * @type {number?}\n     */\n    this.line = position.start.line\n    /**\n     * Starting column of error.\n     * @type {number?}\n     */\n    this.column = position.start.column\n    /**\n     * Namespace of warning.\n     * @type {string?}\n     */\n    this.source = parts[0]\n    /**\n     * Category of message.\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n    /**\n     * Full range information, when available.\n     * Has start and end properties, both set to an object with line and column, set to number?.\n     * @type {Position?}\n     */\n    this.position = position\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * You can use this to specify the source value that’s being reported, which\n     * is deemed incorrect.\n     * @type {string?}\n     */\n    this.actual\n    /**\n     * You can use this to suggest values that should be used instead of\n     * `actual`, one or more values that are deemed as acceptable.\n     * @type {Array<string>?}\n     */\n    this.expected\n    /**\n     * You may add a file property with a path of a file (used throughout the VFile ecosystem).\n     * @type {string?}\n     */\n    this.file\n    /**\n     * You may add a url property with a link to documentation for the message.\n     * @type {string?}\n     */\n    this.url\n    /**\n     * You may add a note property with a long form description of the message (supported by vfile-reporter).\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {StackItem[]} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Construct[]} */\n\n  const resolveAllConstructs = []\n  /** @type {Chunk[]} */\n\n  let chunks = []\n  /** @type {Token[]} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Construct[]|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Construct[]} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Construct[]} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Chunk[]} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Chunk[]}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Chunk[]} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Chunk[]} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {string[]} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Chunk[]}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Chunk[]} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Event[]} events\n * @returns {Event[]}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types').Action} Action\n * @typedef {import('./complex-types').Index} Index\n * @typedef {import('./complex-types').ActionTuple} ActionTuple\n * @typedef {import('./complex-types').VisitorResult} VisitorResult\n * @typedef {import('./complex-types').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass a test\n *\n * @param tree Abstract syntax tree to walk\n * @param test Test node, optional\n * @param visitor Function to run for each node\n * @param reverse Visit the tree in reverse order, defaults to false\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types').Visitor<Node>} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array.<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Object.<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array.<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types').Visitor} Visitor\n */\n\nimport {visitParents, CONTINUE, SKIP, EXIT} from 'unist-util-visit-parents'\n\nexport {CONTINUE, SKIP, EXIT}\n\n/**\n * Visit children of tree which pass a test\n *\n * @param tree Abstract syntax tree to walk\n * @param test Test, optional\n * @param visitor Function to run for each node\n * @param reverse Fisit the tree in reverse, defaults to false\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array.<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nexport const pointStart = point('start')\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `node`.\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /**\n   * Get a node from the bound definition cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","const characterReferences = {'\"': 'quot', '&': 'amp', '<': 'lt', '>': 'gt'}\n\n/**\n * Encode only the dangerous HTML characters.\n *\n * This ensures that certain characters which have special meaning in HTML are\n * dealt with.\n * Technically, we can skip `>` and `\"` in many cases, but CM includes them.\n *\n * @param {string} value\n * @returns {string}\n */\nexport function encode(value) {\n  return value.replace(/[\"&<>]/g, replace)\n\n  /**\n   * @param {string} value\n   * @returns {string}\n   */\n  function replace(value) {\n    // @ts-expect-error Hush, it’s fine.\n    return '&' + characterReferences[value] + ';'\n  }\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nfunction normalizeUri(value) {\n  /** @type {string[]} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = sanitizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n *\n * @todo\n *   `footnote` (or “inline note”) are a pandoc footnotes feature (`^[a note]`)\n *   that does not exist in GFM.\n *   We still have support for it, so that things remain working with\n *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future\n *   we might be able to remove it?\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalize(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalize(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalize(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalize(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    /** @type {Array<Content>} */\n    const out = []\n    let cellIndex = -1\n    const length = node.align ? align.length : row.length\n\n    while (++cellIndex < length) {\n      const cell = row[cellIndex]\n      out.push(\n        h(cell, name, {align: align[cellIndex]}, cell ? all(h, cell) : [])\n      )\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {trimLines} from 'trim-lines'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(node, u('text', trimLines(String(node.value))))\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName] Defines the tag name of an element\n * @property {Properties} [hProperties] Defines the properties of an element\n * @property {Array<Content>} [hChildren] Defines the (hast) children of an element\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} Data unist data with embedded hast fields\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData unist node with embedded hast data\n *\n * @callback Handler\n * @param {H} h Handle context\n * @param {any} node mdast node to handle\n * @param {Parent|null} parent Parent of `node`\n * @returns {Content|Array<Content>|null|undefined} hast node\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Properties} props Properties\n * @param {Array<Content>?} [children] hast content\n * @returns {Element}\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Array<Content>?} [children] hast content\n * @returns {Element}\n *\n * @typedef HFields\n * @property {boolean} dangerous Whether HTML is allowed\n * @property {string} clobberPrefix Prefix to use to prevent DOM clobbering\n * @property {string} footnoteLabel Label to use to introduce the footnote section\n * @property {string} footnoteBackLabel Label to use to go back to a footnote call from the footnote section\n * @property {(identifier: string) => Definition|null} definition Definition cache\n * @property {Record<string, FootnoteDefinition>} footnoteById Footnote cache\n * @property {Array<string>} footnoteOrder Order in which footnotes occur\n * @property {Record<string, number>} footnoteCounts Counts the same footnote was used\n * @property {Handlers} handlers Applied handlers\n * @property {Handler} unknownHandler Handler for any none not in `passThrough` or otherwise handled\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment Like `h` but lower-level and usable on non-elements.\n * @property {Array<string>} passThrough List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n * @property {boolean} [allowDangerousHtml=false]\n *   Whether to allow `html` nodes and inject them as `raw` HTML\n * @property {string} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute to prevent it from *clobbering*.\n *   attributes.\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=x></p>\n *   <script>alert(x)</script>\n *   ```\n *\n *   Elements by their ID are made available in browsers on the `window` object.\n *   Using a prefix prevents this from being a problem.\n * @property {string} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {string} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {Handlers} [handlers]\n *   Object mapping mdast nodes to functions handling them\n * @property {Array<string>} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H\n *   Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to transform.\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {H} `h` function\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  h.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  h.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  h.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  h.footnoteCounts = {}\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n","/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\n\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n */\nexport function footer(h) {\n  let index = -1\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const content = all(h, def)\n    const id = String(def.identifier)\n    const safeId = sanitizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            h.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: h.clobberPrefix + 'fn-' + safeId},\n      children: wrap(content, true)\n    }\n\n    if (def.position) {\n      listItem.position = def.position\n    }\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: 'h2',\n        properties: {id: 'footnote-label', className: ['sr-only']},\n        children: [u('text', h.footnoteLabel)]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","export const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'table'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: boolean}} TableCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableCellProps>} TableCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map((d) => String(d))\n    .join('')\n}\n","/**\n * @typedef {Object} StringifyOptions\n * @property {boolean} [padLeft=true] Whether to pad a space before a token (`boolean`, default: `true`).\n * @property {boolean} [padRight=false] Whether to pad a space after a token (`boolean`, default: `false`).\n */\n\n/**\n * Parse comma separated tokens to an array.\n *\n * @param {string} value\n * @returns {Array.<string>}\n */\nexport function parse(value) {\n  /** @type {Array.<string>} */\n  var tokens = []\n  var input = String(value || '')\n  var index = input.indexOf(',')\n  var start = 0\n  /** @type {boolean} */\n  var end\n  /** @type {string} */\n  var token\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings to comma separated tokens.\n *\n * @param {Array.<string|number>} values\n * @param {StringifyOptions} [options]\n * @returns {string}\n */\nexport function stringify(values, options) {\n  var settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === '') {\n    values = values.concat('')\n  }\n\n  return values\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space separated tokens to an array of strings.\n *\n * @param {string} value Space separated tokens\n * @returns {Array.<string>} Tokens\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated tokens.\n *\n * @param {Array.<string|number>} values Tokens\n * @returns {string} Space separated tokens\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {uriTransformer} from './uri-transformer.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'plugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.defaultProps = {transformLinkUri: uriTransformer}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","import { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ABOUT_URL } from '../../data/constants';\r\nimport styles from './About.module.css';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport '../../../node_modules/github-markdown-css/github-markdown.css';\r\nimport Loader from '../../components/Loader/LoaderIndicator';\r\nimport { useFetch } from '../../hooks/useFetch';\r\n\r\nconst About: FC = () => {\r\n    const [aboutContent, loading, error] = useFetch(ABOUT_URL);\r\n\r\n    return (\r\n        <div className={styles.content}>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <h3 className={styles.error}>\r\n                    Произошла ошибка при загрузке описания\r\n                </h3>\r\n            ) : (\r\n                <ReactMarkdown className=\"markdown-body\">\r\n                    {aboutContent}\r\n                </ReactMarkdown>\r\n            )}\r\n            <Link className={styles.backLink} to=\"/menu/\">\r\n                Back\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;\r\n","import { useEffect, useState } from 'react';\r\n\r\nexport function useFetch(\r\n    url: string\r\n): [string, boolean, string] {\r\n    const [data, setData] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    function handleResponseAsText(response: Response) {\r\n        response\r\n            .text()\r\n            .then((data) => setData(data))\r\n            .catch((error) => setError(error))\r\n            .finally(() => setLoading(false));\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        fetch(url)\r\n            .then(handleResponseAsText)\r\n            .catch((error) => setError(error))\r\n            .finally(() => setLoading(false));\r\n    }, [url]);\r\n\r\n    return [data, loading, error];\r\n}\r\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\n","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_inherits","subClass","superClass","create","constructor","value","setPrototypeOf","_getPrototypeOf","o","getPrototypeOf","bind","__proto__","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","call","e","_typeof","obj","Symbol","iterator","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","_createSuper","Derived","hasNativeReflectConstruct","result","Super","NewTarget","this","arguments","apply","_construct","Parent","args","Class","a","push","Function","_wrapNativeSuper","_cache","Map","undefined","fn","toString","indexOf","has","get","set","Wrapper","stringifyPosition","position","point","index","line","column","pos","start","end","VFileMessage","reason","place","origin","parts","slice","name","message","stack","fatal","source","ruleId","actual","expected","file","url","note","Error","path","basename","ext","assertPath","seenNonSlash","charCodeAt","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","code","join","joined","segments","normalize","sep","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","lastIndexOf","normalizeString","JSON","stringify","proc","cwd","isUrl","fileURLOrPath","href","urlToPath","URL","error","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","options","buffer","data","messages","history","stored","map","prop","includes","assertNonEmpty","assertPart","stem","encoding","part","_toArray","arr","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","bail","isPlainObject","toStringTag","wrap","middleware","callback","called","parameters","fnExpectsCallback","done","exception","Promise","then","output","unified","base","frozen","transformers","fns","pipeline","run","values","middlewareIndex","pop","next","use","middelware","trough","attachers","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","Number","POSITIVE_INFINITY","settings","addPlugin","Array","isArray","addList","addPreset","assign","add","plugin","plugins","entry","isPlainObj","extend","parse","doc","vfile","assertParser","newable","String","node","assertCompiler","assertNode","compile","executor","resolve","reject","tree","runSync","complete","assertDone","process","isBuffer","processSync","destination","hasOwnProperty","keys","type","asyncName","looksLikeAVFile","includeImageAlt","one","alt","all","children","splice","list","remove","items","chunkStart","from","unshift","combineExtensions","extensions","syntaxExtension","extension","hook","left","right","constructs","existing","before","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","test","fromCharCode","factorySpace","effects","ok","max","limit","size","enter","prefix","consume","exit","content","tokenize","previous","contentStart","attempt","parser","contentInitial","lineStart","token","contentType","document","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","disable","null","blankLine","partial","subtokenize","event","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","context","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","string","initializeFactory","text","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","info","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","state","view","startIndex","startBufferIndex","endIndex","endBufferIndex","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","factoryWhitespace","normalizeIdentifier","replace","toLowerCase","toUpperCase","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","element","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","media","group","insideSpan","destinationAfter","between","afterLabel","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","declaration","commentStart","commentStartDash","comment","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","resolveText","search","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decodeString","decode","$0","$1","$2","head","hex","fromMarkdown","config","configure","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","tokenStack","listStack","resume","setData","getData","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","d","and","errorHandler","onExitError","lang","depth","parent","referenceType","ancestor","fragment","ordered","spread","checked","compiler","postprocess","defaultConstructs","concat","atCarriageReturn","match","endPosition","lastIndex","exec","Math","ceil","preprocess","combined","u","convert","castFactory","typeFactory","anyFactory","propsFactory","tests","checks","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","pointStart","pointEnd","clean","unknown","h","augment","handlers","passThrough","returnNode","unknownHandler","nodes","characterReferences","sanitizeUri","encode","skip","encodeURIComponent","normalizeUri","colon","questionMark","numberSign","slash","loose","footnoteReference","counter","id","safeId","footnoteOrder","footnoteCounts","reuseCounter","clobberPrefix","dataFootnoteRef","ariaDescribedBy","revert","subtype","suffix","contents","listItemLoose","trimLine","codePointAt","blockquote","break","className","delete","footnote","footnoteById","no","dangerous","imageReference","src","inlineCode","linkReference","listLoose","wrapped","disabled","child","properties","root","table","rows","align","row","out","cellIndex","cell","last","lines","trimLines","toml","ignore","yaml","footnoteDefinition","allowDangerousHtml","footnoteLabel","footnoteBackLabel","cache","definitions","hName","hProperties","hChildren","ctx","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","footer","bridge","mutate","Schema","property","normal","space","merge","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","types","DefinedInfo","mask","mark","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","style","tabIndex","translate","typeMustMatch","useMap","width","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","protocols","whitespace","thing","valid","dash","cap","kebab","camelcase","charAt","hastToReact","tableElements","Set","childrenToReact","childIndex","toReact","skipHtml","parentSchema","schema","addProperty","listDepth","component","components","basic","React","ReactIs","linkTarget","transformLinkUri","inline","level","transformImageUri","input","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","Type","rest","dashes","find","padRight","padLeft","trim","commas","v","styleReplacer","parseStyle","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkParse","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","hastNode","defaultProps","uri","first","propTypes","PropTypes","useState","setLoading","setError","handleResponseAsText","response","catch","finally","useEffect","fetch","useFetch","ABOUT_URL","aboutContent","styles","hasOwn","toStr","gOPD","getOwnPropertyDescriptor","hasOwnConstructor","hasIsPrototypeOf","setProperty","newValue","getProperty","module","exports","copy","copyIsArray","clone","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","str","lineno","updatePosition","Position","errorsList","msg","err","filename","silent","re","m","comments","c","val","ret","decl","decls","declarations","encodeCache","exclude","keepEscaped","l","nextCode","defaultChars","ch","getEncodeCache","componentChars","b","for","f","g","n","p","q","t","$$typeof","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","require","hasIterator","len","_iterableToArray","iter","_toConsumableArray","arrayLikeToArray"],"sourceRoot":""}