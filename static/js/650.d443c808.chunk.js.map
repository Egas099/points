{"version":3,"file":"static/js/650.d443c808.chunk.js","mappings":"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","sources":["hooks/useSaves.ts","utils/core/constructors/createSave.ts","hooks/useTypedSelector.ts","webpack://points-client/./src/components/GameField/Cell/CellItem.module.css?68e2","components/GameField/Cell/points.tsx","components/GameField/Cell/CellItem.tsx","webpack://points-client/./src/components/GameField/GameField.module.css?6eab","components/GameField/GameField.tsx","webpack://points-client/./src/components/HeaderPanel/HeaderPanel.module.css?a5c8","components/HeaderPanel/HeaderPanel.tsx","webpack://points-client/./src/components/ModalWindows/Popup.module.css?2cc1","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/react-transition-group/esm/CSSTransition.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","components/ModalWindows/PopupWrapper/PopupWrapper.tsx","components/ModalWindows/AlertPopup.tsx","components/ModalWindows/MenuPopup.tsx","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","utils/AI/aiHelpers.ts","utils/AI/aiBehavior.ts","utils/AI/normal.ts","utils/AI/index.ts","utils/AI/simple.ts","webpack://points-client/./src/components/PlayersForm/ChosePlayerButton/ChosePlayerButton.module.css?a9f0","components/PlayersForm/ChosePlayerButton/ChosePlayerButton.tsx","webpack://points-client/./src/components/PlayersForm/PlayersForm.module.css?313e","components/PlayersForm/PlayersForm.tsx","utils/core/getPlayersFromTemplate.ts","utils/core/constructors/createProfile.ts","hooks/useGameProcess.ts","utils/core/findOverflowCell.ts","webpack://points-client/./src/pages/GamePlay/GamePlay.module.css?03eb","pages/GamePlay/Game.tsx","store/actionCreator.ts","webpack://points-client/./src/css/colorClasses.module.css?3e88","utils/helpers/getColorClassByPlayer.ts","../node_modules/use-local-storage/dist/index.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useLocalStorage from 'use-local-storage';\r\nimport { RootState } from '../store';\r\nimport * as actionCreator from '../store/actionCreator';\r\nimport { createSave } from '../utils/core/constructors/createSave';\r\n\r\nexport function useSaves() {\r\n    const [savesList, setSavesList] = useLocalStorage<Save[]>('saves', []);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (!Array.isArray(savesList)) setSavesList([]);\r\n    }, [savesList]);\r\n\r\n    return {\r\n        savesList: savesList,\r\n        saveGame: (state: RootState) => {\r\n            const save = createSave(state);\r\n            setSavesList([save, ...savesList]);\r\n        },\r\n        deleteSave: (id: number) =>\r\n            setSavesList(savesList.filter(save => save.date !== id)),\r\n        deleteAllSaves: () => setSavesList([]),\r\n        loadSave: (id: number) => {\r\n            const save = savesList.find(save => save.date === id);\r\n            if (save) {\r\n                dispatch(actionCreator.loadGame(save.state));\r\n                history.push('/single');\r\n            } else {\r\n                console.error('The save requested for loading was not found.');\r\n            }\r\n        }\r\n    };\r\n}\r\n","import { APP_VERSION } from \"../../../data/constants\";\r\nimport { RootState } from \"../../../store\";\r\n\r\nexport const createSave = (state: RootState): Save => ({\r\n    date: Date.now(),\r\n    appVersion: APP_VERSION,\r\n    state: {\r\n        field: state.field,\r\n        gameState: state.gameState\r\n    }\r\n});","import { TypedUseSelectorHook, useSelector } from 'react-redux';\r\nimport { RootState } from '../store';\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CellItem_wrapper__l0x3z\",\"content\":\"CellItem_content__ri7Ap\",\"mover\":\"CellItem_mover__YWLuu\"};","const points: { [key in number]: JSX.Element } = {\r\n    0: <></>,\r\n    1: <>•</>,\r\n    2: <>•&nbsp;•</>,\r\n    3: (\r\n        <>\r\n            •<br />\r\n            •&nbsp;•\r\n        </>\r\n    ),\r\n    4: (\r\n        <>\r\n            •&nbsp;•\r\n            <br />\r\n            •&nbsp;•\r\n        </>\r\n    ),\r\n    5: (\r\n        <>\r\n            •&nbsp;•\r\n            <br />•<br />\r\n            •&nbsp;•\r\n        </>\r\n    )\r\n};\r\nexport default points;\r\n","import React, { FC } from 'react';\r\nimport style from './CellItem.module.css';\r\nimport { getColorClassByPlayer as getCellColor } from '../../../utils/helpers/getColorClassByPlayer';\r\nimport { Player } from '../../../data/enums';\r\nimport points from './points';\r\n\r\ninterface Props {\r\n    id: number;\r\n    count: number;\r\n    player: Player;\r\n    exist: boolean;\r\n    isMover: boolean;\r\n    move: (cell: Cell) => void;\r\n}\r\n\r\nconst CellItem: FC<Props> = ({ id, count, player, exist, isMover, move }) => {\r\n    const wrapperClasses = `${style.wrapper} ${isMover ? style.mover : ''}`;\r\n    const contentClasses = `${style.content} ${getCellColor(player, count)}`;\r\n\r\n    function onPlayerClick() {\r\n        isMover && move({ id, player, count, exist });\r\n    }\r\n\r\n    return (\r\n        <div className={wrapperClasses} draggable=\"false\">\r\n            {exist && (\r\n                <div\r\n                    className={contentClasses}\r\n                    onClick={onPlayerClick}\r\n                    draggable=\"false\"\r\n                >\r\n                    <span>{points[count]}</span>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(CellItem);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"GameField_wrapper__vQ7pO\",\"row\":\"GameField_row__NuLkh\"};","import { FC } from 'react';\r\nimport { Player, PlayerEntity } from '../../data/enums';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport CellItem from './Cell/CellItem';\r\nimport styles from './GameField.module.css';\r\n\r\ninterface Props {\r\n    field: Cell[][];\r\n    move: (cell: Cell) => void;\r\n}\r\n\r\nconst GameField: FC<Props> = ({ field, move }) => {\r\n    const gameState = useTypedSelector(state => state.gameState);\r\n\r\n    const currentPlayerEntity = gameState.players.find(\r\n        cell => cell.player === gameState.mover\r\n    )?.entity.playerEntity;\r\n\r\n    const isMoveAllowed = (player: Player) =>\r\n        currentPlayerEntity === PlayerEntity.localPlayer &&\r\n        !gameState.moveBlock &&\r\n        gameState.mover === player &&\r\n        gameState.gameStarted;\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            {field.map((row, i) => (\r\n                <div className={styles.row} key={i}>\r\n                    {row.map(cell => (\r\n                        <CellItem\r\n                            key={cell.id}\r\n                            id={cell.id}\r\n                            count={cell.count}\r\n                            player={cell.player}\r\n                            exist={cell.exist}\r\n                            isMover={isMoveAllowed(cell.player)}\r\n                            move={move}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GameField;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"HeaderPanel_wrapper__C+g7W\",\"content\":\"HeaderPanel_content__H26-q\",\"button\":\"HeaderPanel_button__258y0\"};","import { FC } from 'react';\r\n\r\nimport styles from './HeaderPanel.module.css';\r\n\r\ninterface HeaderButtonPanel {\r\n    showMenu: () => void;\r\n}\r\n\r\nconst HeaderButtonPanel: FC<HeaderButtonPanel> = ({ showMenu }) => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.content}>\r\n                <button onClick={showMenu} className={styles.button}>\r\n                    Menu\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HeaderButtonPanel;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"mask\":\"Popup_mask__G9eqc\",\"wrapper\":\"Popup_wrapper__iGwMR\",\"content\":\"Popup_content__LC1gO\",\"main\":\"Popup_main__qYsN9\",\"title\":\"Popup_title__PxX9-\",\"button\":\"Popup_button__jWlFu components_button__Oqs6L\"};","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","export default {\n  disabled: false\n};","import React from 'react';\nexport default React.createContext(null);","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import { FC } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { POPUP_TIMEOUT } from '../../../data/constants';\r\nimport styles from '../Popup.module.css';\r\nimport './popupTransitions.css';\r\n\r\ninterface Props {\r\n    show: boolean;\r\n    timeout?: number;\r\n}\r\n\r\nconst PopupWrapper: FC<Props> = ({\r\n    show,\r\n    timeout = POPUP_TIMEOUT,\r\n    children\r\n}) => {\r\n    return (\r\n        <CSSTransition\r\n            unmountOnExit\r\n            in={show}\r\n            timeout={timeout}\r\n            classNames=\"mask\"\r\n        >\r\n            <div className={styles.mask}>\r\n            <CSSTransition in={show} timeout={timeout} classNames=\"popup\">\r\n                {children}\r\n            </CSSTransition>\r\n            </div>\r\n        </CSSTransition>\r\n    );\r\n};\r\n\r\nexport default PopupWrapper;\r\n","import { FC } from 'react';\r\nimport styles from './Popup.module.css';\r\nimport PopupWrapper from './PopupWrapper/PopupWrapper';\r\n\r\ninterface Props {\r\n    show: boolean;\r\n    callback: () => void;\r\n    title: string;\r\n    text?: string;\r\n    buttonText?: string;\r\n}\r\n\r\nconst AlertPopup: FC<Props> = ({ show, title, text, callback, buttonText }) => {\r\n    return (\r\n        <PopupWrapper show={show}>\r\n            <div className={styles.wrapper}>\r\n                <div className={styles.content}>\r\n                    <div className={styles.main}>\r\n                        <h2 id={styles.title}>{title}</h2>\r\n                        {text && <p>{text}</p>}\r\n                    </div>\r\n                    <button\r\n                        className={styles.button}\r\n                        onClick={() => callback()}\r\n                    >\r\n                        {buttonText ? buttonText : 'Ok'}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </PopupWrapper>\r\n    );\r\n};\r\n\r\nexport default AlertPopup;\r\n","import { FC } from 'react';\r\nimport styles from './Popup.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport PopupWrapper from './PopupWrapper/PopupWrapper';\r\n\r\nexport interface MenuPopupActions {\r\n    continue: () => void;\r\n    save?: () => void;\r\n    reset?: () => void;\r\n}\r\ninterface Props {\r\n    show: boolean;\r\n    actions: MenuPopupActions;\r\n}\r\n\r\nconst MenuPopup: FC<Props> = ({ show, actions }) => {\r\n    return (\r\n        <PopupWrapper show={show}>\r\n            <div className={styles.wrapper}>\r\n                <div className={styles.content}>\r\n                    <h2>Pause</h2>\r\n                    <button\r\n                        className={styles.button}\r\n                        onClick={actions.continue}\r\n                    >\r\n                        Continue\r\n                    </button>\r\n\r\n                    <button\r\n                        className={styles.button}\r\n                        disabled={actions.save === undefined}\r\n                        onClick={actions.save}\r\n                    >\r\n                        Save\r\n                    </button>\r\n                    <Link to=\"/menu/play/load\" className={styles.button}>\r\n                        Load\r\n                    </Link>\r\n                    <Link to=\"/menu/settings\" className={styles.button}>\r\n                        Settings\r\n                    </Link>\r\n                    <button\r\n                        className={styles.button}\r\n                        disabled={actions.reset === undefined}\r\n                        onClick={actions.reset}\r\n                    >\r\n                        Reset\r\n                    </button>\r\n                    <Link to=\"/menu/\" className={styles.button}>\r\n                        Main menu\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </PopupWrapper>\r\n    );\r\n};\r\n\r\nexport default MenuPopup;\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { getCellPositionById } from '../core/getCellPositionById';\r\nimport { trying } from '../helpers/trying';\r\n\r\nexport function filterCellsByCount(cells: Cell[], count: number) {\r\n    return cells.filter(cell => cell.count === count);\r\n}\r\n\r\nexport function amountCellWithPoints(cells: Cell[], count: number) {\r\n    return cells.reduce(\r\n        (amount, cur) => (cur.count === count ? amount + 1 : amount),\r\n        0\r\n    );\r\n}\r\nexport function amountEmptyNeighs(field: Cell[][], cell: Cell) {\r\n    return getNeighbors(field, cell).reduce(\r\n        (amount, cur) => (cur.player === null ? amount + 1 : amount),\r\n        0\r\n    );\r\n}\r\n\r\nexport function amountEnemyNeighs(field: Cell[][], cell: Cell) {\r\n    return getNeighbors(field, cell).reduce(\r\n        (amount, cur) =>\r\n            cur.player !== cell.player && cur.player !== null\r\n                ? amount + 1\r\n                : amount,\r\n        0\r\n    );\r\n}\r\n\r\nexport function maxNeighsCount(field: Cell[][], cell: Cell) {\r\n    return Math.max(...getNeighbors(field, cell).map(c => c.count));\r\n}\r\n\r\nexport function maxNeighsEnemiesCount(field: Cell[][], cell: Cell) {\r\n    return Math.max(\r\n        ...getNeighbors(field, cell).map(c =>\r\n            c.player !== cell.player ? c.count : 0\r\n        )\r\n    );\r\n}\r\n\r\nexport function getNeighbors(field: Cell[][], cell: Cell): Cell[] {\r\n    const [x, y] = getCellPositionById(cell.id);\r\n    return [\r\n        trying(() => field[x + 1][y]),\r\n        trying(() => field[x][y + 1]),\r\n        trying(() => field[x - 1][y]),\r\n        trying(() => field[x][y - 1])\r\n    ].filter(Boolean) as Cell[];\r\n}\r\n\r\nexport function randomElementFrom<T>(array: Array<T>): T {\r\n    if (Array.isArray(array))\r\n        return array[Math.floor(Math.random() * array.length)];\r\n    throw new Error('The argument is not an array.');\r\n}\r\n","import { RootState } from '../../store';\r\nimport {\r\n    amountEmptyNeighs,\r\n    amountEnemyNeighs,\r\n    filterCellsByCount,\r\n    maxNeighsEnemiesCount,\r\n    randomElementFrom\r\n} from './aiHelpers';\r\n\r\n//\r\nexport function chooseRandomCellFrom(ownCells: Cell[]): Cell {\r\n    return randomElementFrom(ownCells);\r\n}\r\n\r\nexport function chooseMaxCountRandomCellFrom(ownCells: Cell[]): Cell {\r\n    return randomElementFrom(maxCountCellMove(ownCells));\r\n}\r\n\r\n//\r\nexport function maxCountCellMove(ownCells: Cell[]) {\r\n    const maxCount = ownCells.reduce(\r\n        (maxCount, cell) => (cell.count > maxCount ? cell.count : maxCount),\r\n        0\r\n    );\r\n    return filterCellsByCount(ownCells, maxCount);\r\n}\r\n\r\nexport function threePointPriorityMove(ownCells: Cell[]) {\r\n    return filterCellsByCount(ownCells, 3);\r\n}\r\nexport function expand(state: RootState, ownCells: Cell[]) {\r\n    let filteredCells = ownCells;\r\n\r\n    for (let i = 4; i > 0; i--) {\r\n        filteredCells = ownCells.filter(\r\n            cell => amountEmptyNeighs(state.field, cell) === i\r\n        );\r\n        if (filteredCells.length) {\r\n            break;\r\n        }\r\n    }\r\n    return filteredCells;\r\n}\r\nexport function dontPickBattles(state: RootState, ownCells: Cell[]) {\r\n    return ownCells.filter(\r\n        cell => maxNeighsEnemiesCount(state.field, cell) !== 3\r\n    );\r\n}\r\nexport function attackThreePointEnemy(state: RootState, ownCells: Cell[]) {\r\n    return ownCells.filter(\r\n        cell => maxNeighsEnemiesCount(state.field, cell) === 3\r\n    );\r\n}\r\n\r\nexport function attackEnemy(state: RootState, ownCells: Cell[]) {\r\n    return ownCells.filter(cell => amountEnemyNeighs(state.field, cell) > 0);\r\n}\r\n\r\nexport function accumulate(ownCells: Cell[]) {\r\n    for (let i = 1; i < 3; i++) {\r\n        const filteredCells = filterCellsByCount(ownCells, i);\r\n        if (filteredCells.length > 0) {\r\n            return filteredCells;\r\n        }\r\n    }\r\n    return []\r\n}\r\n\r\n","import { BotProfile } from '.';\r\nimport { RootState } from '../../store';\r\nimport {\r\n    attackEnemy,\r\n    attackThreePointEnemy,\r\n    chooseMaxCountRandomCellFrom,\r\n    chooseRandomCellFrom,\r\n    dontPickBattles,\r\n    expand,\r\n    threePointPriorityMove\r\n} from './aiBehavior';\r\n\r\nconst normalBots: BotProfile[] = [\r\n    {\r\n        name: 'b1',\r\n        difficulty: 'normal',\r\n        description:\r\n            'Priority for capturing enemy cells with three dots, if they are next to their own cells with three dots.',\r\n        implementation: (state: RootState, ownCells: Cell[]): Cell | void => {\r\n            const threePoint = threePointPriorityMove(ownCells);\r\n            if (threePoint.length) {\r\n                const canAttack = attackThreePointEnemy(state, threePoint);\r\n\r\n                if (canAttack.length) {\r\n                    return chooseRandomCellFrom(canAttack);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {\r\n        name: 'b2',\r\n        difficulty: 'normal',\r\n        description: '',\r\n        implementation: (state: RootState, ownCells: Cell[]): Cell | void => {\r\n            const threePoint = threePointPriorityMove(ownCells);\r\n            if (threePoint.length) {\r\n                const canAttack = attackThreePointEnemy(state, threePoint);\r\n\r\n                if (canAttack.length) {\r\n                    return chooseRandomCellFrom(canAttack);\r\n                }\r\n                return chooseRandomCellFrom(threePoint);\r\n            }\r\n        }\r\n    },\r\n    {\r\n        name: 'b3',\r\n        difficulty: 'normal',\r\n        description: '',\r\n        implementation: (state: RootState, ownCells: Cell[]): Cell | void => {\r\n            const threePoint = threePointPriorityMove(ownCells);\r\n            if (threePoint.length) {\r\n                const canAttack = attackThreePointEnemy(state, threePoint);\r\n\r\n                if (canAttack.length) {\r\n                    return chooseRandomCellFrom(canAttack);\r\n                }\r\n                return chooseRandomCellFrom(threePoint);\r\n            }\r\n            const dontPickBattle = dontPickBattles(state, ownCells);\r\n            if (dontPickBattle.length) {\r\n                return chooseRandomCellFrom(dontPickBattle);\r\n            }\r\n        }\r\n    },\r\n    {\r\n        name: 'b4',\r\n        difficulty: 'normal',\r\n        description: '',\r\n        implementation: (state: RootState, ownCells: Cell[]): Cell | void => {\r\n            const threePoint = threePointPriorityMove(ownCells);\r\n            if (threePoint.length) {\r\n                const canAttack = attackThreePointEnemy(state, threePoint);\r\n\r\n                if (canAttack.length) {\r\n                    return chooseRandomCellFrom(canAttack);\r\n                }\r\n            }\r\n            const canExpand = expand(state, ownCells);\r\n            if (canExpand.length) {\r\n                return chooseRandomCellFrom(canExpand);\r\n            }\r\n        }\r\n    },\r\n    {\r\n        name: 'b5',\r\n        difficulty: 'normal',\r\n        description: 'Aggressive',\r\n        implementation: (state: RootState, ownCells: Cell[]): Cell | void => {\r\n            const threePoint = threePointPriorityMove(ownCells);\r\n            if (threePoint.length) {\r\n                const canAlreadyAttack = attackThreePointEnemy(\r\n                    state,\r\n                    threePoint\r\n                );\r\n\r\n                if (canAlreadyAttack.length) {\r\n                    return chooseRandomCellFrom(canAlreadyAttack);\r\n                }\r\n            }\r\n            const canAttack = attackEnemy(state, ownCells);\r\n            if (canAttack.length) {\r\n                return chooseMaxCountRandomCellFrom(canAttack);\r\n            }\r\n        }\r\n    },\r\n    {\r\n        name: 'b6',\r\n        difficulty: 'normal',\r\n        description: 'dontPickBattles & aggressive',\r\n        implementation: (state: RootState, ownCells: Cell[]): Cell | void => {\r\n            const threePoint = threePointPriorityMove(ownCells);\r\n            if (threePoint.length) {\r\n                const canAlreadyAttack = attackThreePointEnemy(\r\n                    state,\r\n                    threePoint\r\n                );\r\n\r\n                if (canAlreadyAttack.length) {\r\n                    return chooseRandomCellFrom(canAlreadyAttack);\r\n                }\r\n            }\r\n            const canAttack = attackEnemy(state, ownCells);\r\n            if (canAttack.length) {\r\n                const dontPickBattle = dontPickBattles(state, canAttack);\r\n                if (dontPickBattle.length) {\r\n                    return chooseMaxCountRandomCellFrom(dontPickBattle);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {\r\n        name: 'b7',\r\n        difficulty: 'normal',\r\n        description: 'dontPickBattles & aggressive',\r\n        implementation: (state: RootState, ownCells: Cell[]): Cell | void => {\r\n            const threePoint = threePointPriorityMove(ownCells);\r\n            if (threePoint.length) {\r\n                const canAlreadyAttack = attackThreePointEnemy(\r\n                    state,\r\n                    threePoint\r\n                );\r\n\r\n                if (canAlreadyAttack.length) {\r\n                    return chooseRandomCellFrom(canAlreadyAttack);\r\n                }\r\n            }\r\n            const canAttack = attackEnemy(state, ownCells);\r\n            if (canAttack.length) {\r\n                const dontPickBattle = dontPickBattles(state, canAttack);\r\n                if (dontPickBattle.length) {\r\n                    return chooseMaxCountRandomCellFrom(dontPickBattle);\r\n                }\r\n            }\r\n            const canExpand = expand(state, ownCells);\r\n            if (canExpand.length) {\r\n                const dontPickBattle = dontPickBattles(state, canExpand);\r\n                if (dontPickBattle.length) {\r\n                    return chooseRandomCellFrom(dontPickBattle);\r\n                }\r\n            }\r\n            const dontPickBattle = dontPickBattles(state, ownCells);\r\n            if (dontPickBattle.length) {\r\n                return chooseMaxCountRandomCellFrom(dontPickBattle);\r\n            }\r\n        }\r\n    },\r\n    {\r\n        name: 'b7',\r\n        difficulty: 'normal',\r\n        description: 'dontPickBattles & aggressive',\r\n        implementation: (state: RootState, ownCells: Cell[]): Cell | void => {\r\n            const threePoint = threePointPriorityMove(ownCells);\r\n            if (threePoint.length) {\r\n                const canAlreadyAttack = attackThreePointEnemy(\r\n                    state,\r\n                    threePoint\r\n                );\r\n\r\n                if (canAlreadyAttack.length) {\r\n                    return chooseRandomCellFrom(canAlreadyAttack);\r\n                }\r\n            }\r\n            const canAttack = attackEnemy(state, ownCells);\r\n            if (canAttack.length) {\r\n                const dontPickBattle = dontPickBattles(state, canAttack);\r\n                if (dontPickBattle.length) {\r\n                    return chooseMaxCountRandomCellFrom(dontPickBattle);\r\n                }\r\n            }\r\n            const canExpand = expand(state, ownCells);\r\n            if (canExpand.length) {\r\n                const dontPickBattle = dontPickBattles(state, canExpand);\r\n                if (dontPickBattle.length) {\r\n                    return chooseRandomCellFrom(dontPickBattle);\r\n                }\r\n            }\r\n            const dontPickBattle = dontPickBattles(state, ownCells);\r\n            if (dontPickBattle.length) {\r\n                return chooseMaxCountRandomCellFrom(dontPickBattle);\r\n            }\r\n        }\r\n    }\r\n];\r\n\r\nexport default normalBots;\r\n","import { Player } from '../../data/enums';\r\nimport { RootState } from '../../store';\r\nimport { randomElementFrom } from './aiHelpers';\r\nimport normalBots from './normal';\r\nimport simpleBots from './simple';\r\n\r\ntype Difficulty = 'simple' | 'normal';\r\nexport interface BotProfile {\r\n    name: string;\r\n    implementation: (state: RootState, ownCells: Cell[]) => Cell | void;\r\n    description: string;\r\n    difficulty: Difficulty;\r\n}\r\n\r\nconst AI = {\r\n    getRandomBot: function (difficulty: Difficulty): string {\r\n        return randomElementFrom(\r\n            AI_PROFILES.filter(bot => bot.difficulty === difficulty)\r\n        ).name;\r\n    },\r\n    getBotById: function (id: string): BotProfile | undefined {\r\n        return AI_PROFILES.find(bot => bot.name === id);\r\n    },\r\n    getBotMoveById: function (id: string, state: RootState) {\r\n        const botImplementation = AI_PROFILES.find(\r\n            bot => bot.name === id\r\n        )?.implementation;\r\n        const ownCells = findCellsByPlayer(state.field, state.gameState.mover);\r\n\r\n        let botMove;\r\n        if (botImplementation) {\r\n            botMove = botImplementation(state, ownCells);\r\n        } else {\r\n            console.error(\r\n                'The requested bot implementation was not found. Random implementation will be chosen.'\r\n            );\r\n            botMove = randomElementFrom(AI_PROFILES).implementation(\r\n                state,\r\n                ownCells\r\n            );\r\n        }\r\n        if (botMove) {\r\n            return botMove;\r\n        }\r\n        return randomElementFrom(ownCells);\r\n    }\r\n};\r\nexport default AI;\r\n\r\nconst AI_PROFILES: BotProfile[] = [simpleBots, normalBots].flat();\r\n\r\nfunction findCellsByPlayer(field: Cell[][], player: Player) {\r\n    let response: Cell[] = [];\r\n    for (const row of field) {\r\n        const cell = row.filter(cell => cell.player === player);\r\n        if (cell.length > 0) response = response.concat(cell);\r\n    }\r\n    return response;\r\n}\r\n","import { BotProfile } from '.';\r\nimport { RootState } from '../../store';\r\nimport {\r\n    accumulate,\r\n    chooseRandomCellFrom,\r\n    expand,\r\n    threePointPriorityMove\r\n} from './aiBehavior';\r\n\r\nconst simpleBots: BotProfile[] = [\r\n    {\r\n        name: 'a1',\r\n        difficulty: 'simple',\r\n        description: 'Random movement',\r\n        implementation: (state: RootState, ownCells: Cell[]) => {\r\n            return chooseRandomCellFrom(ownCells);\r\n        }\r\n    },\r\n    {\r\n        name: 'a2',\r\n        difficulty: 'simple',\r\n        description: 'Three count priority mover',\r\n        implementation: (state: RootState, ownCells: Cell[]) => {\r\n            const threePoint = threePointPriorityMove(ownCells);\r\n\r\n            if (threePoint.length > 0) {\r\n                return chooseRandomCellFrom(threePoint);\r\n            }\r\n        }\r\n    },\r\n    {\r\n        name: 'a3',\r\n        difficulty: 'simple',\r\n        description: 'Expander & three point priority mover',\r\n        implementation: (state: RootState, ownCells: Cell[]) => {\r\n            const threePoint = threePointPriorityMove(ownCells);\r\n\r\n            if (threePoint.length > 0) {\r\n                return chooseRandomCellFrom(threePoint);\r\n            }\r\n            const canExpand = expand(state, ownCells);\r\n            if (canExpand.length) {\r\n                return chooseRandomCellFrom(canExpand);\r\n            }\r\n\r\n            return chooseRandomCellFrom(ownCells);\r\n        }\r\n    },\r\n    {\r\n        name: 'a4',\r\n        difficulty: 'simple',\r\n        description: 'Accumulator, big Bang',\r\n        implementation: (state: RootState, ownCells: Cell[]) => {\r\n            const canAccumulate = accumulate(ownCells);\r\n            if (canAccumulate.length) {\r\n                return chooseRandomCellFrom(canAccumulate);\r\n            }\r\n            return chooseRandomCellFrom(ownCells);\r\n        }\r\n    }\r\n];\r\n\r\nexport default simpleBots;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ChosePlayerButton_wrapper__o1ooa\",\"up\":\"ChosePlayerButton_up__Y6yf0 ChosePlayerButton_wrapper__o1ooa\",\"down\":\"ChosePlayerButton_down__aSsRe ChosePlayerButton_wrapper__o1ooa\",\"pointer\":\"ChosePlayerButton_pointer__CCo7k\"};","import { FC } from 'react';\r\nimport { Player, PlayerEntity } from '../../../data/enums';\r\nimport styles from './ChosePlayerButton.module.css';\r\nimport { getColorClassByPlayer } from '../../../utils/helpers/getColorClassByPlayer';\r\nimport { ENTITY_ICONS } from '../../../data/constants';\r\n\r\ninterface Props {\r\n    player: Player;\r\n    entity: PlayerEntity;\r\n    changeEntity: () => void;\r\n    position: 'up' | 'down';\r\n}\r\n\r\nconst ChosePlayerButton: FC<Props> = ({\r\n    player,\r\n    entity,\r\n    changeEntity,\r\n    position\r\n}) => {\r\n    const getColorClass = () =>\r\n        entity !== PlayerEntity.empty ? getColorClassByPlayer(player) : '';\r\n\r\n    return (\r\n        <div className={styles[position]}>\r\n            <button className={getColorClass()} onClick={changeEntity}>\r\n                {ENTITY_ICONS[entity]}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChosePlayerButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"PlayersForm_content__NuCh9\",\"row\":\"PlayersForm_row__O3qBq\",\"button\":\"PlayersForm_button__xHo94\",\"switch\":\"PlayersForm_switch__ARPel\",\"leftSwitch\":\"PlayersForm_leftSwitch__zDBTw PlayersForm_switch__ARPel\",\"rightSwitch\":\"PlayersForm_rightSwitch__M8cYc PlayersForm_switch__ARPel\",\"startButton\":\"PlayersForm_startButton__WoV1+\",\"pulse\":\"PlayersForm_pulse__-m0EO\"};","import { FC, useEffect, useState } from 'react';\r\nimport AI from '../../utils/AI';\r\nimport { PlayerEntity } from '../../data/enums';\r\nimport ChosePlayerButton from './ChosePlayerButton/ChosePlayerButton';\r\nimport styles from './PlayersForm.module.css';\r\nimport GameField from '../GameField/GameField';\r\nimport { fieldTemplates } from '../../data/fieldTemplates';\r\nimport { getPlayersFromTemplate } from '../../utils/core/getPlayersFromTemplate';\r\nimport { createProfile } from '../../utils/core/constructors/createProfile';\r\nimport { fieldByTemplate } from '../../utils/core/constructors/fieldByTemplate';\r\n\r\ninterface Props {\r\n    onSubmit: (form: GameForm) => void;\r\n    templates: FieldTemplate[];\r\n}\r\n\r\nconst PlayersForm: FC<Props> = ({ onSubmit, templates }) => {\r\n    const [selectedTemplateId, setSelectedTemplateId] = useState(0);\r\n    const [profiles, setProfiles] = useState<PlayerProfile[]>(loadProfiles());\r\n\r\n    useEffect(updateProfiles, [selectedTemplateId]);\r\n\r\n    const nextEntity = (entity: PlayerEntity): PlayerEntity =>\r\n        typeof PlayerEntity[entity + 1] === 'string'\r\n            ? entity + 1\r\n            : PlayerEntity.empty;\r\n\r\n    const filterExistingEntity = (prof: PlayerProfile[]) =>\r\n        prof.filter(e => e.entity.playerEntity !== PlayerEntity.empty);\r\n\r\n    function setTemplateId(count: number) {\r\n        const newTemplateIndex =\r\n            (selectedTemplateId + count + templates.length) % templates.length;\r\n\r\n        setSelectedTemplateId(newTemplateIndex);\r\n    }\r\n\r\n    function loadProfiles() {\r\n        const players = getPlayersFromTemplate(fieldTemplates[selectedTemplateId]);\r\n        const profiles = players.map(profile => createProfile(profile));\r\n        return profiles;\r\n    }\r\n\r\n    function updateProfiles() {\r\n        setProfiles(loadProfiles());\r\n    }\r\n\r\n    function setEntity(index: number) {\r\n        return () => {\r\n            const newProfiles = [...profiles];\r\n            newProfiles[index].entity.playerEntity = nextEntity(\r\n                newProfiles[index].entity.playerEntity\r\n            );\r\n            setProfiles(newProfiles);\r\n        };\r\n    }\r\n\r\n    function assignAI(profiles: PlayerProfile[]) {\r\n        return profiles.map(profile => {\r\n            if (profile.entity.playerEntity === PlayerEntity.android) {\r\n                const newProfile = profile;\r\n                newProfile.entity.id = AI.getRandomBot('normal');\r\n                return newProfile;\r\n            } else {\r\n                return profile;\r\n            }\r\n        });\r\n    }\r\n\r\n    function submit() {\r\n        let existPlayersProfiles = filterExistingEntity(profiles);\r\n        if (existPlayersProfiles.length > 1) {\r\n            existPlayersProfiles = assignAI(existPlayersProfiles);\r\n            onSubmit({\r\n                templateId: selectedTemplateId,\r\n                playersProfiles: existPlayersProfiles\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.content}>\r\n                <div className={styles.row}>\r\n                    <ChosePlayerButton\r\n                        key={0}\r\n                        player={profiles[0].player}\r\n                        entity={profiles[0].entity.playerEntity}\r\n                        changeEntity={setEntity(0)}\r\n                        position=\"up\"\r\n                    />\r\n                    <ChosePlayerButton\r\n                        key={1}\r\n                        player={profiles[1].player}\r\n                        entity={profiles[1].entity.playerEntity}\r\n                        changeEntity={setEntity(1)}\r\n                        position={'up'}\r\n                    />\r\n                </div>\r\n                <button\r\n                    className={styles.leftSwitch}\r\n                    onClick={() => setTemplateId(-1)}\r\n                >{`<`}</button>\r\n                <button\r\n                    className={styles.rightSwitch}\r\n                    onClick={() => setTemplateId(1)}\r\n                >{`>`}</button>\r\n                <GameField\r\n                    field={fieldByTemplate(fieldTemplates[selectedTemplateId])}\r\n                    move={() => undefined}\r\n                />\r\n                <div className={styles.row}>\r\n                    <ChosePlayerButton\r\n                        key={3}\r\n                        player={profiles[3].player}\r\n                        entity={profiles[3].entity.playerEntity}\r\n                        changeEntity={setEntity(3)}\r\n                        position={'down'}\r\n                    />\r\n                    <ChosePlayerButton\r\n                        key={2}\r\n                        player={profiles[2].player}\r\n                        entity={profiles[2].entity.playerEntity}\r\n                        changeEntity={setEntity(2)}\r\n                        position={'down'}\r\n                    />\r\n                </div>\r\n                <button className={styles.startButton} onClick={submit}>\r\n                    {filterExistingEntity(profiles).length > 1 ? '▶' : ''}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PlayersForm;\r\n","export function getPlayersFromTemplate(fieldTemplate: FieldTemplate) {\r\n    return Array.from(\r\n        new Set(fieldTemplate.spawns.map(spawn => spawn.player))\r\n    );\r\n}","import { Player, PlayerEntity } from '../../../data/enums';\r\n\r\nexport function createProfile(player: Player): PlayerProfile {\r\n    return {\r\n        player: player,\r\n        entity: {\r\n            playerEntity: PlayerEntity.empty,\r\n            id: ''\r\n        }\r\n    };\r\n}\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { PlayerEntity } from '../data/enums';\r\nimport { useTypedSelector } from './useTypedSelector';\r\nimport * as actionCreator from '../store/actionCreator';\r\nimport { useSaves } from './useSaves';\r\nimport AI from '../utils/AI';\r\nimport { findOverflowCell } from '../utils/core/findOverflowCell';\r\n\r\nexport function useGameProcess() {\r\n    const { saveGame } = useSaves();\r\n    const [pause, setPause] = useState(false);\r\n    const [botMovingDelayTimer, setBotMovingDelayTimer] = useState(\r\n        setTimeout(() => 0, 0)\r\n    );\r\n    const [cellCloningDelayTimer, setCellCloningDelayTimer] = useState(\r\n        setTimeout(() => 0, 0)\r\n    );\r\n    const dispatch = useDispatch();\r\n    const state = useTypedSelector(state => state);\r\n\r\n    useEffect(moveProcessing, [\r\n        state.gameState.gameStarted,\r\n        state.gameState.moveBlock,\r\n        pause\r\n    ]);\r\n\r\n    useEffect(botMove, [\r\n        state.gameState.moveNumber,\r\n        state.gameState.gameStarted,\r\n        pause\r\n    ]);\r\n\r\n    // TODO: rename, decomposition\r\n    function moveProcessing() {\r\n        if (pause) {\r\n            return;\r\n        }\r\n        const isMoveCompleted =\r\n            state.gameState.gameStarted && state.gameState.moveBlock;\r\n        if (!isMoveCompleted) {\r\n            return;\r\n        }\r\n\r\n        const overflowingCell = findOverflowCell(state.field);\r\n        if (!overflowingCell) {\r\n            dispatch(actionCreator.newMove(state.field));\r\n            return;\r\n        }\r\n\r\n        dispatch(actionCreator.cellCloning(overflowingCell));\r\n\r\n        const cloningTimer = setTimeout(\r\n            moveProcessing,\r\n            state.settings.cellCloningDelay\r\n        );\r\n        setCellCloningDelayTimer(cloningTimer);\r\n        return () => clearTimeout(cellCloningDelayTimer);\r\n    }\r\n\r\n    function botMove() {\r\n        if (pause) {\r\n            return;\r\n        }\r\n        const currentMoverProfile = state.gameState.players.find(\r\n            profile => profile.player === state.gameState.mover\r\n        );\r\n        const shouldBotMove =\r\n            currentMoverProfile?.entity.playerEntity === PlayerEntity.android &&\r\n            !state.gameState.moveBlock &&\r\n            state.gameState.gameStarted;\r\n        if (!shouldBotMove) {\r\n            return;\r\n        }\r\n\r\n        const botTurn = AI.getBotMoveById(currentMoverProfile.entity.id, state);\r\n        if (!botTurn) {\r\n            console.error(\"Can't get bot turn\");\r\n            return;\r\n        }\r\n        if (state.settings.botMovingDelay) {\r\n            const botMovingTimer = setTimeout(\r\n                () => move(botTurn),\r\n                state.settings.botMovingDelay\r\n            );\r\n            setBotMovingDelayTimer(botMovingTimer);\r\n            return () => clearTimeout(botMovingDelayTimer);\r\n        }\r\n        move(botTurn);\r\n    }\r\n\r\n    const move = useCallback((cell: Cell) => {\r\n        dispatch(actionCreator.playerMove(cell));\r\n    }, []);\r\n    const gameSaving = () => saveGame(state);\r\n    const gameRestarting = useCallback(() => {\r\n        clearTimeout(botMovingDelayTimer);\r\n        clearTimeout(cellCloningDelayTimer);\r\n        dispatch(actionCreator.restartGame());\r\n    }, []);\r\n    const gameStarting = useCallback(\r\n        (form: GameForm) => dispatch(actionCreator.startGame(form)),\r\n        []\r\n    );\r\n    const pauseGame = useCallback(() => setPause(true), []);\r\n    const continueGame = useCallback(() => setPause(false), []);\r\n\r\n    return {\r\n        playerMove: move,\r\n        start: gameStarting,\r\n        reset: gameRestarting,\r\n        save: gameSaving,\r\n        pause: pauseGame,\r\n        continue: continueGame\r\n    };\r\n}\r\n","interface CellWithCount {\r\n    count: number;\r\n}\r\n\r\nexport function findOverflowCell<T extends CellWithCount>(field: T[][]) {\r\n    for (const row of field) {\r\n        const cell = row.find(cell => cell.count > 3);\r\n        if (cell) return cell;\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"GamePlay_wrapper__odTxx\",\"content\":\"GamePlay_content__JJXIO\"};","import { FC, useEffect, useState } from 'react';\r\nimport GameField from '../../components/GameField/GameField';\r\nimport HeaderButtonPanel from '../../components/HeaderPanel/HeaderPanel';\r\nimport AlertPopup from '../../components/ModalWindows/AlertPopup';\r\nimport MenuPopup, {\r\n    MenuPopupActions\r\n} from '../../components/ModalWindows/MenuPopup';\r\nimport PlayersForm from '../../components/PlayersForm/PlayersForm';\r\nimport { Player } from '../../data/enums';\r\nimport { fieldTemplates } from '../../data/fieldTemplates';\r\nimport { useGameProcess } from '../../hooks/useGameProcess';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport {} from '../../utils/helpers/getColorClassByPlayer';\r\nimport styles from './GamePlay.module.css';\r\n\r\nconst Game: FC = () => {\r\n    const state = useTypedSelector(state => state);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [isMenuDisplayed, setMenuDisplay] = useState(false);\r\n    const [title, setTitle] = useState('User win');\r\n    const gamePlay = useGameProcess();\r\n\r\n    useEffect(checkEndGame, [state.gameState.endGame]);\r\n\r\n    function checkEndGame() {\r\n        if (state.gameState.endGame) {\r\n            setTitle(\r\n                `${Player[state.gameState.players[0].player]}\r\n                won in ${state.gameState.moveNumber} moves`\r\n            );\r\n            setShowAlert(true);\r\n        }\r\n    }\r\n\r\n    function gameStarting(form: GameForm) {\r\n        gamePlay.start(form);\r\n    }\r\n    function gameRestarting() {\r\n        continueGame();\r\n        gamePlay.reset();\r\n        setShowAlert(false);\r\n    }\r\n    function gameSaving() {\r\n        gamePlay.save();\r\n        continueGame();\r\n    }\r\n\r\n    function continueGame() {\r\n        gamePlay.continue();\r\n        setMenuDisplay(false);\r\n    }\r\n    function showMenu() {\r\n        gamePlay.pause();\r\n        setMenuDisplay(true);\r\n    }\r\n    const menuActions: MenuPopupActions = {\r\n        continue: continueGame,\r\n        reset: state.gameState.gameStarted ? gameRestarting : undefined,\r\n        save: state.gameState.gameStarted ? gameSaving : undefined\r\n    };\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <AlertPopup\r\n                show={showAlert}\r\n                title={title}\r\n                buttonText=\"Restart\"\r\n                callback={gameRestarting}\r\n            />\r\n            <MenuPopup show={isMenuDisplayed} actions={menuActions} />\r\n            <HeaderButtonPanel showMenu={showMenu} />\r\n            <div className={styles.content}>\r\n                {!state.gameState.gameStarted ? (\r\n                    <PlayersForm\r\n                        onSubmit={gameStarting}\r\n                        templates={fieldTemplates}\r\n                    />\r\n                ) : (\r\n                    <GameField field={state.field} move={gamePlay.playerMove} />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Game;\r\n","import {\r\n    GameActions,\r\n    GameActionType,\r\n    SettingActions,\r\n    SettingActionType\r\n} from './types';\r\n\r\n// common\r\nexport const loadGame = (payload: SaveData): GameActions => ({\r\n    type: GameActionType.LOAD_GAME,\r\n    payload: payload\r\n});\r\nexport const restartGame = (): GameActions => ({\r\n    type: GameActionType.RESTART_GAME,\r\n    payload: undefined\r\n});\r\nexport const startGame = (payload: GameForm): GameActions => ({\r\n    type: GameActionType.START_GAME,\r\n    payload: payload\r\n});\r\n\r\n// gameFieldReducer\r\nexport const cellCloning = (payload: Cell): GameActions => ({\r\n    type: GameActionType.CELL_CLONING,\r\n    payload: payload\r\n});\r\n\r\n// gameStateReducer\r\nexport const newMove = (payload: Cell[][]): GameActions => ({\r\n    type: GameActionType.NEXT_MOVE,\r\n    payload: payload\r\n});\r\nexport const playerMove = (payload: Cell): GameActions => ({\r\n    type: GameActionType.PLAYER_MOVE,\r\n    payload: payload\r\n});\r\n\r\n// gameSettingReducer\r\nexport const resetSettings = (): SettingActions => ({\r\n    type: SettingActionType.RESET_TO_DEFAULT,\r\n    payload: undefined\r\n});\r\nexport const setSettings = (payload: GameSettings): SettingActions => ({\r\n    type: SettingActionType.SET_SETTING,\r\n    payload: payload\r\n});\r\n","// extracted by mini-css-extract-plugin\nexport default {\"red-low\":\"colorClasses_red-low__4GUzW\",\"red-medium\":\"colorClasses_red-medium__vzSgD\",\"red-high\":\"colorClasses_red-high__yaGu7\",\"red-overflow\":\"colorClasses_red-overflow__DJN01\",\"orange-low\":\"colorClasses_orange-low__Nr5E1\",\"orange-medium\":\"colorClasses_orange-medium__GQCk-\",\"orange-high\":\"colorClasses_orange-high__2mgMW\",\"orange-overflow\":\"colorClasses_orange-overflow__y9aeV\",\"green-low\":\"colorClasses_green-low__L6UJy\",\"green-medium\":\"colorClasses_green-medium__2dbQb\",\"green-high\":\"colorClasses_green-high__b+j1C\",\"green-overflow\":\"colorClasses_green-overflow__7F9-L\",\"blue-low\":\"colorClasses_blue-low__qIMDU\",\"blue-medium\":\"colorClasses_blue-medium__8vlNg\",\"blue-high\":\"colorClasses_blue-high__iZqTX\",\"blue-overflow\":\"colorClasses_blue-overflow__S0BdD\"};","import { Player } from '../../data/enums';\r\nimport colors from '../../css/colorClasses.module.css';\r\n\r\nconst COLOR_INTENSITIES = [\r\n    '',\r\n    'low',\r\n    'medium',\r\n    'high',\r\n    'overflow',\r\n    'overflow'\r\n];\r\n\r\nexport function getColorClassByPlayer(player: Player, count = 3) {\r\n    const intensity = COLOR_INTENSITIES[count];\r\n    return intensity\r\n        ? colors[`${Player[player]}-${intensity}`]\r\n        : colors[Player[player]];\r\n}\r\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nfunction useLocalStorage(key, defaultValue, options) {\n    var opts = react_1.useMemo(function () {\n        return __assign({ serializer: JSON.stringify, parser: JSON.parse, logger: console.log, syncData: true }, options);\n    }, [options]);\n    var serializer = opts.serializer, parser = opts.parser, logger = opts.logger, syncData = opts.syncData;\n    var _a = react_1.useState(function () {\n        if (typeof window === \"undefined\")\n            return defaultValue;\n        try {\n            var item = window.localStorage.getItem(key);\n            var res = item ? parser(item) : defaultValue;\n            return res;\n        }\n        catch (e) {\n            logger(e);\n            return defaultValue;\n        }\n    }), storedValue = _a[0], setValue = _a[1];\n    react_1.useEffect(function () {\n        if (typeof window === \"undefined\")\n            return;\n        var updateLocalStorage = function () {\n            if (storedValue !== undefined) {\n                window.localStorage.setItem(key, serializer(storedValue));\n            }\n            else {\n                window.localStorage.removeItem(key);\n            }\n        };\n        try {\n            updateLocalStorage();\n        }\n        catch (e) {\n            logger(e);\n        }\n    }, [storedValue]);\n    react_1.useEffect(function () {\n        if (!syncData)\n            return;\n        var handleStorageChange = function (e) {\n            if (e.key !== key || e.storageArea !== window.localStorage)\n                return;\n            try {\n                setValue(e.newValue ? parser(e.newValue) : undefined);\n            }\n            catch (e) {\n                logger(e);\n            }\n        };\n        if (typeof window === \"undefined\")\n            return;\n        window.addEventListener(\"storage\", handleStorageChange);\n        return function () { return window.removeEventListener(\"storage\", handleStorageChange); };\n    }, [key, syncData]);\n    return [storedValue, setValue];\n}\nexports.default = useLocalStorage;\n","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["useSaves","useLocalStorage","savesList","setSavesList","dispatch","useDispatch","history","useHistory","useEffect","Array","isArray","saveGame","state","save","date","Date","now","appVersion","APP_VERSION","field","gameState","createSave","deleteSave","id","filter","deleteAllSaves","loadSave","find","actionCreator","push","console","error","useTypedSelector","useSelector","CellItem","count","player","exist","isMover","move","wrapperClasses","style","contentClasses","getCellColor","className","draggable","onClick","points","React","currentPlayerEntity","players","cell","mover","entity","playerEntity","styles","map","row","i","PlayerEntity","moveBlock","gameStarted","showMenu","replaceClassName","origClass","classToRemove","replace","RegExp","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","props","context","_this","call","this","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","status","nextCallback","_inheritsLoose","getDerivedStateFromProps","_ref","prevState","_proto","prototype","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","timeout","undefined","mounting","performEnter","performExit","setState","_this2","appearing","_ref2","nodeRef","ReactDOM","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","node","current","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","setTimeout","render","_this$props","children","childProps","_objectWithoutPropertiesLoose","TransitionGroupContext","Provider","value","noop","contextType","propTypes","defaultProps","removeClass","classes","split","forEach","c","element","classList","remove","setAttribute","baseVal","CSSTransition","_len","arguments","length","args","_key","apply","concat","appliedClasses","_this$resolveArgument","resolveArguments","removeClasses","addClass","_this$resolveArgument2","type","_this$resolveArgument3","getClassNames","classNames","isStringClassNames","baseClassName","activeClassName","doneClassName","phase","scrollTop","add","contains","indexOf","hasClass","_addClass","_this$appliedClasses$","base","done","_extends","show","POPUP_TIMEOUT","title","text","buttonText","actions","continue","disabled","to","reset","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","unsupportedIterableToArray","F","s","n","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","filterCellsByCount","cells","maxNeighsEnemiesCount","Math","max","getNeighbors","getCellPositionById","x","y","trying","Boolean","randomElementFrom","array","floor","random","Error","chooseRandomCellFrom","ownCells","chooseMaxCountRandomCellFrom","maxCount","reduce","maxCountCellMove","threePointPriorityMove","expand","filteredCells","amount","cur","amountEmptyNeighs","dontPickBattles","attackThreePointEnemy","attackEnemy","amountEnemyNeighs","getRandomBot","difficulty","AI_PROFILES","bot","name","getBotById","getBotMoveById","botMove","botImplementation","implementation","response","findCellsByPlayer","description","threePoint","canExpand","canAccumulate","accumulate","canAttack","dontPickBattle","canAlreadyAttack","flat","changeEntity","position","getColorClassByPlayer","ENTITY_ICONS","onSubmit","templates","useState","selectedTemplateId","setSelectedTemplateId","loadProfiles","profiles","setProfiles","filterExistingEntity","prof","setTemplateId","newTemplateIndex","fieldTemplate","fieldTemplates","from","Set","spawns","spawn","profile","setEntity","index","newProfiles","fieldByTemplate","existPlayersProfiles","newProfile","AI","assignAI","templateId","playersProfiles","useGameProcess","pause","setPause","botMovingDelayTimer","setBotMovingDelayTimer","cellCloningDelayTimer","setCellCloningDelayTimer","moveProcessing","overflowingCell","findOverflowCell","cloningTimer","settings","cellCloningDelay","clearTimeout","currentMoverProfile","botTurn","botMovingDelay","botMovingTimer","moveNumber","useCallback","gameRestarting","gameStarting","form","pauseGame","continueGame","playerMove","start","showAlert","setShowAlert","isMenuDisplayed","setMenuDisplay","setTitle","gamePlay","endGame","Player","menuActions","loadGame","payload","GameActionType","restartGame","startGame","cellCloning","newMove","resetSettings","SettingActionType","setSettings","COLOR_INTENSITIES","intensity","colors","__assign","Object","assign","t","p","hasOwnProperty","defineProperty","exports","react_1","require","key","defaultValue","options","opts","useMemo","serializer","JSON","stringify","parser","parse","logger","log","syncData","_a","window","item","localStorage","getItem","storedValue","setValue","setItem","removeItem","handleStorageChange","storageArea","newValue","addEventListener","removeEventListener","_iterableToArray","iter","_toConsumableArray","arr","arrayLikeToArray","iterableToArray"],"sourceRoot":""}